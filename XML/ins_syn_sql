/* @(#) generic/sproc/ins_syn_sql 84.3 7/11/01 */

use master
go


/* create the database, if it does not exist */
if not exists (select name from sysdatabases where name = "sybsyntax")
begin
	/* is the space left on the default database devices > size of model? */
	if  (select sum (high-low +1)  from sysdevices where status & 1 = 1)
	-  (select sum (isnull (size, 0)) from sysusages, sysdevices
		where vstart >= sysdevices.low
		and vstart <= sysdevices.high
		and sysdevices.status &1 = 1)
		> (select sum(sysusages.size) from sysusages where dbid = 3)
	begin
               if (@@maxpagesize = 1024 * 2)
			create database sybsyntax on default = 3
               else
	       if (@@maxpagesize = 1024 * 4)
			create database sybsyntax on default = 5
	       else
			create database sybsyntax on default
	end
	else
	begin
	
		/*
		** 18047, "There is not enough room on the default devices to create the sybsyntax database."
		*/
		raiserror 18047
		select syb_quit()
	end
end
go

if exists (select name from sysdatabases where name = "sybsyntax")
	use sybsyntax
else
begin
	/*
	** 18048, "The sybsyntax database couldn't be created."
	*/
	raiserror 18048
	select syb_quit()
end
go

if (db_name() != "sybsyntax")
begin
	/*
	** 19529, "Cannot open database '%1!'. Check the availability of this database and retry the installation."
	*/
	raiserror 19529, "sybsyntax"
	select syb_quit()
end
go

/* create the sybsyntax table if it doesn't exist, and sybsyntax does */
if exists (select name from master..sysdatabases where name = "sybsyntax")
begin
	if not exists (select name
			from sybsyntax..sysobjects
			where name = "sybsyntax"
				and type = "U" and uid = 1)
	begin
	/* The table does not exist. Create it. */
		create table sybsyntax
		(commandname	varchar(50)	not null,
		module		varchar(20)	not null,
		linenum		smallint	not null,
		syntax		varchar(78)	not null,
		langid		smallint	null)
	end
end
go

/*
** If the table existed from before. It could be an older version.
** Check to make sure that it has a langid column.
*/
if not exists (select name from sybsyntax..syscolumns 
			 where id = object_id("sybsyntax..sybsyntax")
			 and name = "langid")
begin
	alter table sybsyntax..sybsyntax
	add langid smallint null
end
go

/* create the index on the sybsyntax table */
if not exists (select name from sysindexes where name = "sybsyntax_cuix")
begin
	create unique clustered index sybsyntax_cuix
		on sybsyntax(module, commandname, linenum)
end
go

/* delete existing rows for this module, if there are any
** For Transact-SQL, delete SQL, sprocs and utilities
** as of 11.5, xpprocs and dbcc procs
*/

if exists (select module from sybsyntax
		where module = "Transact-SQL")

begin
	delete from sybsyntax where module = "Transact-SQL"
	delete from sybsyntax where module = "System Procedure"
	delete from sybsyntax where module like "% Utility"
	delete from sybsyntax where module like "OpenVMS"
	delete from sybsyntax where module = "ESP"
	delete from sybsyntax where module = "dbcc Procedure"
	dump transaction sybsyntax with truncate_only
end
go

/* drop the insert_syntax procedure, and re-create it */
if exists (select name from sysobjects where name = "insert_syntax")
begin
	drop procedure insert_syntax
end
go

create procedure insert_syntax
	@command varchar(50),
	@module varchar(20),
	@linenum smallint,
	@syntax varchar(78),
	@lang_id smallint = null
as
if exists (select name
		from master..sysdatabases
		where name = "sybsyntax")
begin
	insert sybsyntax..sybsyntax values
		(@command, @module, @linenum, @syntax, @lang_id)
end
go


/* add execs here */




exec insert_syntax ' ',
'System Procedure',      1 ,
' '
go
exec insert_syntax 'sp_column_privileges',
'System Procedure',      1 ,
'sp_column_privileges - Returns permissions information for one or more'
go
exec insert_syntax 'sp_column_privileges',
'System Procedure',      2 ,
'        columns in a table or view.'
go
exec insert_syntax 'sp_column_privileges',
'System Procedure',      3 ,
'  sp_column_privileges table_name [, table_owner'
go
exec insert_syntax 'sp_column_privileges',
'System Procedure',      4 ,
'     [, table_qualifier [, column_name]]]'
go
exec insert_syntax 'sp_columns',
'System Procedure',      1 ,
'sp_columns - Returns information about the type of data that can be stored'
go
exec insert_syntax 'sp_columns',
'System Procedure',      2 ,
'        in one or more columns.'
go
exec insert_syntax 'sp_columns',
'System Procedure',      3 ,
'  sp_columns table_name [, table_owner ]'
go
exec insert_syntax 'sp_columns',
'System Procedure',      4 ,
'     [, table_qualifier] [, column_name]'
go
exec insert_syntax 'sp_databases',
'System Procedure',      1 ,
'sp_databases - Returns a list of databases in Adaptive Server.'
go
exec insert_syntax 'sp_databases',
'System Procedure',      2 ,
'  sp_databases'
go
exec insert_syntax 'sp_datatype_info',
'System Procedure',      1 ,
'sp_datatype_info - Returns information about a particular ODBC datatype or'
go
exec insert_syntax 'sp_datatype_info',
'System Procedure',      2 ,
'        about all ODBC datatypes.'
go
exec insert_syntax 'sp_datatype_info',
'System Procedure',      3 ,
'  sp_datatype_info [data_type]'
go
exec insert_syntax 'sp_fkeys',
'System Procedure',      1 ,
'sp_fkeys - Returns information about foreign key constraints created with'
go
exec insert_syntax 'sp_fkeys',
'System Procedure',      2 ,
'        the create table or alter table command in the current database.'
go
exec insert_syntax 'sp_fkeys',
'System Procedure',      3 ,
'  sp_fkeys pktable_name [, pktable_owner]'
go
exec insert_syntax 'sp_fkeys',
'System Procedure',      4 ,
'     [, pktable_qualifier] [, fktable_name]'
go
exec insert_syntax 'sp_fkeys',
'System Procedure',      5 ,
'     [, fktable_owner] [, fktable_qualifier]'
go
exec insert_syntax 'sp_ssladmin',
'System Procedure',      1 ,
'sp_ssladmin - Administration utility for SSL'
go
exec insert_syntax 'sp_ssladmin',
'System Procedure',      2 ,
'  sp_ssladmin {[addcert, certificate_path, password]'
go
exec insert_syntax 'sp_ssladmin',
'System Procedure',      3 ,
'     [dropcert, certificate_path]'
go
exec insert_syntax 'sp_ssladmin',
'System Procedure',      4 ,
'     [lscert]'
go
exec insert_syntax 'sp_ssladmin',
'System Procedure',      5 ,
'     [help]}'
go
exec insert_syntax 'sp_pkeys',
'System Procedure',      1 ,
'sp_pkeys - Returns information about primary key constraints created with'
go
exec insert_syntax 'sp_pkeys',
'System Procedure',      2 ,
'        the create table or alter table command for a single table.'
go
exec insert_syntax 'sp_pkeys',
'System Procedure',      3 ,
'  sp_pkeys table_name [, table_owner]'
go
exec insert_syntax 'sp_pkeys',
'System Procedure',      4 ,
'     [, table_qualifier]'
go
exec insert_syntax 'sp_server_info',
'System Procedure',      1 ,
'sp_server_info - Returns a list of Adaptive Server attribute names and'
go
exec insert_syntax 'sp_server_info',
'System Procedure',      2 ,
'        current values.'
go
exec insert_syntax 'sp_server_info',
'System Procedure',      3 ,
'  sp_server_info [attribute_id]'
go
exec insert_syntax 'sp_special_columns',
'System Procedure',      1 ,
'sp_special_columns - Returns the optimal set of columns that uniquely'
go
exec insert_syntax 'sp_special_columns',
'System Procedure',      2 ,
'        identify a row in a table or view; can also return a list of'
go
exec insert_syntax 'sp_special_columns',
'System Procedure',      3 ,
'        timestamp columns, whose values are automatically generated'
go
exec insert_syntax 'sp_special_columns',
'System Procedure',      4 ,
'        when any value in the row is updated by a transaction.'
go
exec insert_syntax 'sp_special_columns',
'System Procedure',      5 ,
'  sp_special_columns table_name [, table_owner]'
go
exec insert_syntax 'sp_special_columns',
'System Procedure',      6 ,
'     [, table_qualifier] [, col_type]'
go
exec insert_syntax 'sp_sproc_columns',
'System Procedure',      1 ,
'sp_sproc_columns - Returns information about a stored procedure''s input and'
go
exec insert_syntax 'sp_sproc_columns',
'System Procedure',      2 ,
'        return parameters.'
go
exec insert_syntax 'sp_sproc_columns',
'System Procedure',      3 ,
'  sp_sproc_columns procedure_name [, procedure_owner]'
go
exec insert_syntax 'sp_sproc_columns',
'System Procedure',      4 ,
'     [, procedure_qualifier] [, column_name]'
go
exec insert_syntax 'sp_statistics',
'System Procedure',      1 ,
'sp_statistics - Returns a list of indexes on a single table.'
go
exec insert_syntax 'sp_statistics',
'System Procedure',      2 ,
'  sp_statistics table_name [, table_owner]'
go
exec insert_syntax 'sp_statistics',
'System Procedure',      3 ,
'     [, table_qualifier] [, index_name] [, is_unique]'
go
exec insert_syntax 'sp_stored_procedures',
'System Procedure',      1 ,
'sp_stored_procedures - Returns information about one or more stored'
go
exec insert_syntax 'sp_stored_procedures',
'System Procedure',      2 ,
'        procedures.'
go
exec insert_syntax 'sp_stored_procedures',
'System Procedure',      3 ,
'  sp_stored_procedures [sp_name [, sp_owner'
go
exec insert_syntax 'sp_stored_procedures',
'System Procedure',      4 ,
'     [, sp_qualifier]]]'
go
exec insert_syntax 'sp_table_privileges',
'System Procedure',      1 ,
'sp_table_privileges - Returns privilege information for all columns in a'
go
exec insert_syntax 'sp_table_privileges',
'System Procedure',      2 ,
'        table or view.'
go
exec insert_syntax 'sp_table_privileges',
'System Procedure',      3 ,
'  sp_table_privileges table_name [, table_owner'
go
exec insert_syntax 'sp_table_privileges',
'System Procedure',      4 ,
'     [, table_qualifier]]'
go
exec insert_syntax 'sp_tables',
'System Procedure',      1 ,
'sp_tables - Returns a list of objects that can appear in a from clause.'
go
exec insert_syntax 'sp_tables',
'System Procedure',      2 ,
'  sp_tables [table_name] [, table_owner]'
go
exec insert_syntax 'sp_tables',
'System Procedure',      3 ,
'     [, table_qualifier][, table_type]'
go
exec insert_syntax ' ',
'dbcc Procedure',        1 ,
' '
go
exec insert_syntax 'sp_dbcc_alterws',
'dbcc Procedure',        1 ,
'sp_dbcc_alterws - Changes the size of the specified workspace to a specified'
go
exec insert_syntax 'sp_dbcc_alterws',
'dbcc Procedure',        2 ,
'        value, and initializes the workspace.'
go
exec insert_syntax 'sp_dbcc_alterws',
'dbcc Procedure',        3 ,
'  sp_dbcc_alterws dbname, wsname, "wssize[K|M]"'
go
exec insert_syntax 'sp_dbcc_configreport',
'dbcc Procedure',        1 ,
'sp_dbcc_configreport - Generates a report that describes the configuration'
go
exec insert_syntax 'sp_dbcc_configreport',
'dbcc Procedure',        2 ,
'        information used by the dbcc checkstorage operation for the'
go
exec insert_syntax 'sp_dbcc_configreport',
'dbcc Procedure',        3 ,
'        specified database.'
go
exec insert_syntax 'sp_dbcc_configreport',
'dbcc Procedure',        4 ,
'  sp_dbcc_configreport [dbname]'
go
exec insert_syntax 'sp_dbcc_createws',
'dbcc Procedure',        1 ,
'sp_dbcc_createws - Creates a workspace of the specified type and size on the'
go
exec insert_syntax 'sp_dbcc_createws',
'dbcc Procedure',        2 ,
'        specified segment and database.'
go
exec insert_syntax 'sp_dbcc_createws',
'dbcc Procedure',        3 ,
'  sp_dbcc_createws dbname, segname, [wsname], wstype,'
go
exec insert_syntax 'sp_dbcc_createws',
'dbcc Procedure',        4 ,
'     "wssize[K|M]"'
go
exec insert_syntax 'sp_dbcc_deletedb',
'dbcc Procedure',        1 ,
'sp_dbcc_deletedb - Deletes from dbccdb all the information related to the'
go
exec insert_syntax 'sp_dbcc_deletedb',
'dbcc Procedure',        2 ,
'        specified target database.'
go
exec insert_syntax 'sp_dbcc_deletedb',
'dbcc Procedure',        3 ,
'  sp_dbcc_deletedb [dbname]'
go
exec insert_syntax 'sp_dbcc_deletehistory',
'dbcc Procedure',        1 ,
'sp_dbcc_deletehistory - Deletes the results of dbcc checkstorage operations'
go
exec insert_syntax 'sp_dbcc_deletehistory',
'dbcc Procedure',        2 ,
'        performed on the target database before the specified date and time.'
go
exec insert_syntax 'sp_dbcc_deletehistory',
'dbcc Procedure',        3 ,
'  sp_dbcc_deletehistory [cutoffdate [, dbname]]'
go
exec insert_syntax 'sp_dbcc_differentialreport',
'dbcc Procedure',        1 ,
'sp_dbcc_differentialreport - Generates a report that highlights the changes'
go
exec insert_syntax 'sp_dbcc_differentialreport',
'dbcc Procedure',        2 ,
'        in I/O statistics and faults that took place between two dbcc'
go
exec insert_syntax 'sp_dbcc_differentialreport',
'dbcc Procedure',        3 ,
'        operations.'
go
exec insert_syntax 'sp_dbcc_differentialreport',
'dbcc Procedure',        4 ,
'  sp_dbcc_differentialreport [dbname [, objectname]],'
go
exec insert_syntax 'sp_dbcc_differentialreport',
'dbcc Procedure',        5 ,
'     [db_op] [, "date1" [, "date2"]]'
go
exec insert_syntax 'sp_dbcc_evaluatedb',
'dbcc Procedure',        1 ,
'sp_dbcc_evaluatedb - Recomputes configuration information for the target'
go
exec insert_syntax 'sp_dbcc_evaluatedb',
'dbcc Procedure',        2 ,
'        database and compares it to the current configuration information.'
go
exec insert_syntax 'sp_dbcc_evaluatedb',
'dbcc Procedure',        3 ,
'  sp_dbcc_evaluatedb [dbname]'
go
exec insert_syntax 'sp_dbcc_faultreport',
'dbcc Procedure',        1 ,
'sp_dbcc_faultreport - Generates a report covering fault statistics for the'
go
exec insert_syntax 'sp_dbcc_faultreport',
'dbcc Procedure',        2 ,
'        dbcc checkstorage operations performed for the specified object'
go
exec insert_syntax 'sp_dbcc_faultreport',
'dbcc Procedure',        3 ,
'        in the target database on the specified date.'
go
exec insert_syntax 'sp_dbcc_faultreport',
'dbcc Procedure',        4 ,
'  sp_dbcc_faultreport [report_type [, dbname'
go
exec insert_syntax 'sp_dbcc_faultreport',
'dbcc Procedure',        5 ,
'     [, objectname [, date ]]]]'
go
exec insert_syntax 'sp_dbcc_fullreport',
'dbcc Procedure',        1 ,
'sp_dbcc_fullreport - Runs sp_dbcc_summaryreport, sp_dbcc_configreport,'
go
exec insert_syntax 'sp_dbcc_fullreport',
'dbcc Procedure',        2 ,
'        sp_dbcc_statisticsreport, and sp_dbcc_faultreport short for'
go
exec insert_syntax 'sp_dbcc_fullreport',
'dbcc Procedure',        3 ,
'        database..object_name on or before the specified date.'
go
exec insert_syntax 'sp_dbcc_fullreport',
'dbcc Procedure',        4 ,
'  sp_dbcc_fullreport [dbname [, objectname [, date]]]'
go
exec insert_syntax 'sp_dbcc_runcheck',
'dbcc Procedure',        1 ,
'sp_dbcc_runcheck - Runs dbcc checkstorage on the specified database, then'
go
exec insert_syntax 'sp_dbcc_runcheck',
'dbcc Procedure',        2 ,
'        runs sp_dbcc_summaryreport or a report you specify.'
go
exec insert_syntax 'sp_dbcc_runcheck',
'dbcc Procedure',        3 ,
'  sp_dbcc_runcheck dbname [, user_proc]'
go
exec insert_syntax 'sp_dbcc_statisticsreport',
'dbcc Procedure',        1 ,
'sp_dbcc_statisticsreport - Generates an allocation statistics report on the'
go
exec insert_syntax 'sp_dbcc_statisticsreport',
'dbcc Procedure',        2 ,
'        specified object in the target database.'
go
exec insert_syntax 'sp_dbcc_statisticsreport',
'dbcc Procedure',        3 ,
'  sp_dbcc_statisticsreport [dbname [, objectname'
go
exec insert_syntax 'sp_dbcc_statisticsreport',
'dbcc Procedure',        4 ,
'     [, date]]]'
go
exec insert_syntax 'sp_dbcc_summaryreport',
'dbcc Procedure',        1 ,
'sp_dbcc_summaryreport - Generates a summary report on the specified database.'
go
exec insert_syntax 'sp_dbcc_summaryreport',
'dbcc Procedure',        2 ,
'  sp_dbcc_summaryreport [dbname [, op_name]]'
go
exec insert_syntax 'sp_dbcc_updateconfig',
'dbcc Procedure',        1 ,
'sp_dbcc_updateconfig - Updates the dbcc_config table in dbccdb with the'
go
exec insert_syntax 'sp_dbcc_updateconfig',
'dbcc Procedure',        2 ,
'        configuration information of the target database.'
go
exec insert_syntax 'sp_dbcc_updateconfig',
'dbcc Procedure',        3 ,
'  sp_dbcc_updateconfig dbname, type, "str1" [, "str2"]'
go
exec insert_syntax 'sp_activeroles',
'System Procedure',      1 ,
'sp_activeroles - Displays all active roles.'
go
exec insert_syntax 'sp_activeroles',
'System Procedure',      2 ,
'  sp_activeroles [expand_down]'
go
exec insert_syntax 'sp_add_qpgroup',
'System Procedure',      1 ,
'sp_add_qpgroup - Adds an abstract plan group.'
go
exec insert_syntax 'sp_add_qpgroup',
'System Procedure',      2 ,
'  sp_add_qpgroup new_name'
go
exec insert_syntax 'sp_add_resource_limit',
'System Procedure',      1 ,
'sp_add_resource_limit - Creates a limit on the number of server resources'
go
exec insert_syntax 'sp_add_resource_limit',
'System Procedure',      2 ,
'        that can be used by an Adaptive Server login and/or an'
go
exec insert_syntax 'sp_add_resource_limit',
'System Procedure',      3 ,
'        application to execute a query, query batch, or transaction.'
go
exec insert_syntax 'sp_add_resource_limit',
'System Procedure',      4 ,
'  sp_add_resource_limit name, appname, rangename,'
go
exec insert_syntax 'sp_add_resource_limit',
'System Procedure',      5 ,
'     limittype, limitvalue [, enforced [, action'
go
exec insert_syntax 'sp_add_resource_limit',
'System Procedure',      6 ,
'     [,scope ]]]'
go
exec insert_syntax 'sp_add_time_range',
'System Procedure',      1 ,
'sp_add_time_range - Adds a named time range to an Adaptive Server.'
go
exec insert_syntax 'sp_add_time_range',
'System Procedure',      2 ,
'  sp_add_time_range name, startday, endday,'
go
exec insert_syntax 'sp_add_time_range',
'System Procedure',      3 ,
'     starttime, endtime'
go
exec insert_syntax 'sp_addalias',
'System Procedure',      1 ,
'sp_addalias - Allows an Adaptive Server user to be known in a database as'
go
exec insert_syntax 'sp_addalias',
'System Procedure',      2 ,
'        another user.'
go
exec insert_syntax 'sp_addalias',
'System Procedure',      3 ,
'  sp_addalias loginame, name_in_db'
go
exec insert_syntax 'sp_addauditrecord',
'System Procedure',      1 ,
'sp_addauditrecord - Allows users to enter user-defined audit records'
go
exec insert_syntax 'sp_addauditrecord',
'System Procedure',      2 ,
'        (comments) into the audit trail.'
go
exec insert_syntax 'sp_addauditrecord',
'System Procedure',      3 ,
'  sp_addauditrecord [text [, db_name [, obj_name'
go
exec insert_syntax 'sp_addauditrecord',
'System Procedure',      4 ,
'     [, owner_name [, dbid [, objid]]]]]]'
go
exec insert_syntax 'sp_addaudittable',
'System Procedure',      1 ,
'sp_addaudittable - Adds another system audit table after auditing is'
go
exec insert_syntax 'sp_addaudittable',
'System Procedure',      2 ,
'        installed.'
go
exec insert_syntax 'sp_addaudittable',
'System Procedure',      3 ,
'  sp_addaudittable devname'
go
exec insert_syntax 'sp_addengine',
'System Procedure',      1 ,
'sp_addengine - Adds an engine to an existing engine group or, if the group'
go
exec insert_syntax 'sp_addengine',
'System Procedure',      2 ,
'        does not exist, creates an engine group and adds the engine.'
go
exec insert_syntax 'sp_addengine',
'System Procedure',      3 ,
'  sp_addengine engine_number, engine_group'
go
exec insert_syntax 'sp_addexeclass',
'System Procedure',      1 ,
'sp_addexeclass - Creates or updates a user-defined execution class that you'
go
exec insert_syntax 'sp_addexeclass',
'System Procedure',      2 ,
'        can bind to client applications, logins, and stored procedures.'
go
exec insert_syntax 'sp_addexeclass',
'System Procedure',      3 ,
'  sp_addexeclass classname, priority, timeslice,'
go
exec insert_syntax 'sp_addexeclass',
'System Procedure',      4 ,
'     engine_group'
go
exec insert_syntax 'sp_addextendedproc',
'System Procedure',      1 ,
'sp_addextendedproc - Creates an extended stored procedure (ESP) in the master'
go
exec insert_syntax 'sp_addextendedproc',
'System Procedure',      2 ,
'        database.'
go
exec insert_syntax 'sp_addextendedproc',
'System Procedure',      3 ,
'  sp_addextendedproc esp_name, dll_name'
go
exec insert_syntax 'sp_addexternlogin',
'System Procedure',      1 ,
'sp_addexternlogin - Creates an alternate login account and password to use'
go
exec insert_syntax 'sp_addexternlogin',
'System Procedure',      2 ,
'        when communicating with a remote server through Component'
go
exec insert_syntax 'sp_addexternlogin',
'System Procedure',      3 ,
'        Integration Services.'
go
exec insert_syntax 'sp_addexternlogin',
'System Procedure',      4 ,
'  sp_addexternlogin server, loginname, externname'
go
exec insert_syntax 'sp_addexternlogin',
'System Procedure',      5 ,
'     [,externpassword]'
go
exec insert_syntax 'sp_addgroup',
'System Procedure',      1 ,
'sp_addgroup - Adds a group to a database. Groups are used as collective names'
go
exec insert_syntax 'sp_addgroup',
'System Procedure',      2 ,
'        in granting and revoking privileges.'
go
exec insert_syntax 'sp_addgroup',
'System Procedure',      3 ,
'  sp_addgroup grpname'
go
exec insert_syntax 'sp_addlanguage',
'System Procedure',      1 ,
'sp_addlanguage - Defines the names of the months and days for an alternate'
go
exec insert_syntax 'sp_addlanguage',
'System Procedure',      2 ,
'        language and its date format.'
go
exec insert_syntax 'sp_addlanguage',
'System Procedure',      3 ,
'  sp_addlanguage language, alias, months, shortmons,'
go
exec insert_syntax 'sp_addlanguage',
'System Procedure',      4 ,
'     days, datefmt, datefirst'
go
exec insert_syntax 'sp_addlogin',
'System Procedure',      1 ,
'sp_addlogin - Adds a new user account to Adaptive Server; specifies the'
go
exec insert_syntax 'sp_addlogin',
'System Procedure',      2 ,
'        password expiration interval, the minimum password length, and'
go
exec insert_syntax 'sp_addlogin',
'System Procedure',      3 ,
'        the maximum number of failed logins allowed for a specified'
go
exec insert_syntax 'sp_addlogin',
'System Procedure',      4 ,
'        login at creation.'
go
exec insert_syntax 'sp_addlogin',
'System Procedure',      5 ,
'  sp_addlogin loginame, passwd [, defdb]'
go
exec insert_syntax 'sp_addlogin',
'System Procedure',      6 ,
'     [, deflanguage ] [, fullname ] [, passwdexp ]'
go
exec insert_syntax 'sp_addlogin',
'System Procedure',      7 ,
'     [, minpwdlen ] [, maxfailedlogins ]'
go
exec insert_syntax 'sp_addmessage',
'System Procedure',      1 ,
'sp_addmessage - Adds user-defined messages to sysusermessages for use by'
go
exec insert_syntax 'sp_addmessage',
'System Procedure',      2 ,
'        stored procedure print and raiserror calls and by sp_bindmsg.'
go
exec insert_syntax 'sp_addmessage',
'System Procedure',      3 ,
'  sp_addmessage message_num, message_text [, language'
go
exec insert_syntax 'sp_addmessage',
'System Procedure',      4 ,
'     [, with_log [, replace]]]'
go
exec insert_syntax 'sp_addobjectdef',
'System Procedure',      1 ,
'sp_addobjectdef - Specifies the mapping between a local table and an external'
go
exec insert_syntax 'sp_addobjectdef',
'System Procedure',      2 ,
'        storage location.'
go
exec insert_syntax 'sp_addobjectdef',
'System Procedure',      3 ,
'  sp_addobjectdef tablename, "objectdef" [,"objecttype"]'
go
exec insert_syntax 'sp_addremotelogin',
'System Procedure',      1 ,
'sp_addremotelogin - Authorizes a new remote server user by adding an entry to'
go
exec insert_syntax 'sp_addremotelogin',
'System Procedure',      2 ,
'        master.dbo.sysremotelogins.'
go
exec insert_syntax 'sp_addremotelogin',
'System Procedure',      3 ,
'  sp_addremotelogin remoteserver [, loginame'
go
exec insert_syntax 'sp_addremotelogin',
'System Procedure',      4 ,
'     [, remotename] ]'
go
exec insert_syntax 'sp_addsegment',
'System Procedure',      1 ,
'sp_addsegment - Defines a segment on a database device in a database.'
go
exec insert_syntax 'sp_addsegment',
'System Procedure',      2 ,
'  sp_addsegment segname, dbname, devname'
go
exec insert_syntax 'sp_addserver',
'System Procedure',      1 ,
'sp_addserver - Defines a remote server, or defines the name of the local'
go
exec insert_syntax 'sp_addserver',
'System Procedure',      2 ,
'        server.'
go
exec insert_syntax 'sp_addserver',
'System Procedure',      3 ,
'  sp_addserver lname [, class [, pname]]'
go
exec insert_syntax 'sp_addthreshold',
'System Procedure',      1 ,
'sp_addthreshold - Creates a threshold to monitor space on a database segment.'
go
exec insert_syntax 'sp_addthreshold',
'System Procedure',      2 ,
'        When free space on the segment falls below the specified level,'
go
exec insert_syntax 'sp_addthreshold',
'System Procedure',      3 ,
'        Adaptive Server executes the associated stored procedure.'
go
exec insert_syntax 'sp_addthreshold',
'System Procedure',      4 ,
'  sp_addthreshold dbname, segname, free_space, proc_name'
go
exec insert_syntax 'sp_addtype',
'System Procedure',      1 ,
'sp_addtype - Creates a user-defined datatype.'
go
exec insert_syntax 'sp_addtype',
'System Procedure',      2 ,
'  sp_addtype typename,'
go
exec insert_syntax 'sp_addtype',
'System Procedure',      3 ,
'     phystype [(length) | (precision [, scale])]'
go
exec insert_syntax 'sp_addtype',
'System Procedure',      4 ,
'     [, "identity" | nulltype]'
go
exec insert_syntax 'sp_addumpdevice',
'System Procedure',      1 ,
'sp_addumpdevice - Adds a dump device to Adaptive Server.'
go
exec insert_syntax 'sp_addumpdevice',
'System Procedure',      2 ,
'  sp_addumpdevice {"tape" | "disk"}, logicalname,'
go
exec insert_syntax 'sp_addumpdevice',
'System Procedure',      3 ,
'     physicalname [, tapesize]'
go
exec insert_syntax 'sp_adduser',
'System Procedure',      1 ,
'sp_adduser - Adds a new user to the current database.'
go
exec insert_syntax 'sp_adduser',
'System Procedure',      2 ,
'  sp_adduser loginame [, name_in_db [, grpname]]'
go
exec insert_syntax 'sp_altermessage',
'System Procedure',      1 ,
'sp_altermessage - Enables and disables the logging of a system-defined or'
go
exec insert_syntax 'sp_altermessage',
'System Procedure',      2 ,
'        user-defined message in the Adaptive Server error log.'
go
exec insert_syntax 'sp_altermessage',
'System Procedure',      3 ,
'  sp_altermessage message_id, parameter, parameter_value'
go
exec insert_syntax 'sp_audit',
'System Procedure',      1 ,
'sp_audit - Allows a System Security Officer to configure auditing options.'
go
exec insert_syntax 'sp_audit',
'System Procedure',      2 ,
'  sp_audit option, login_name, object_name [,setting]'
go
exec insert_syntax 'sp_autoconnect',
'System Procedure',      1 ,
'sp_autoconnect - Defines a passthrough connection to a remote server for a'
go
exec insert_syntax 'sp_autoconnect',
'System Procedure',      2 ,
'        specific user, which allows the named user to enter passthrough'
go
exec insert_syntax 'sp_autoconnect',
'System Procedure',      3 ,
'        mode automatically at login.'
go
exec insert_syntax 'sp_autoconnect',
'System Procedure',      4 ,
'  sp_autoconnect server, {true|false}'
go
exec insert_syntax 'sp_autoconnect',
'System Procedure',      5 ,
'     [, loginame]'
go
exec insert_syntax 'sp_bindcache',
'System Procedure',      1 ,
'sp_bindcache - Binds a database, table, index, text object, or image object'
go
exec insert_syntax 'sp_bindcache',
'System Procedure',      2 ,
'        to a data cache.'
go
exec insert_syntax 'sp_bindcache',
'System Procedure',      3 ,
'  sp_bindcache cachename, dbname'
go
exec insert_syntax 'sp_bindcache',
'System Procedure',      4 ,
'     [, [ownername.]tablename'
go
exec insert_syntax 'sp_bindcache',
'System Procedure',      5 ,
'     [, indexname | "text only"]]'
go
exec insert_syntax 'sp_bindefault',
'System Procedure',      1 ,
'sp_bindefault - Binds a user-defined default to a column or user-defined'
go
exec insert_syntax 'sp_bindefault',
'System Procedure',      2 ,
'        datatype.'
go
exec insert_syntax 'sp_bindefault',
'System Procedure',      3 ,
'  sp_bindefault defname, objname [, futureonly]'
go
exec insert_syntax 'sp_bindexeclass',
'System Procedure',      1 ,
'sp_bindexeclass - Associates an execution class with a client application,'
go
exec insert_syntax 'sp_bindexeclass',
'System Procedure',      2 ,
'        login, or stored procedure.'
go
exec insert_syntax 'sp_bindexeclass',
'System Procedure',      3 ,
'  sp_bindexeclass "object_name", "object_type",'
go
exec insert_syntax 'sp_bindexeclass',
'System Procedure',      4 ,
'     "scope", "classname"'
go
exec insert_syntax 'sp_bindmsg',
'System Procedure',      1 ,
'sp_bindmsg - Binds a user message to a referential integrity constraint or'
go
exec insert_syntax 'sp_bindmsg',
'System Procedure',      2 ,
'        check constraint.'
go
exec insert_syntax 'sp_bindmsg',
'System Procedure',      3 ,
'  sp_bindmsg constrname, msgid'
go
exec insert_syntax 'sp_bindrule',
'System Procedure',      1 ,
'sp_bindrule - Binds a rule to a column or user-defined datatype.'
go
exec insert_syntax 'sp_bindrule',
'System Procedure',      2 ,
'  sp_bindrule rulename, objname [, futureonly]'
go
exec insert_syntax 'sp_cacheconfig',
'System Procedure',      1 ,
'sp_cacheconfig - Creates, configures, reconfigures, and drops data caches,'
go
exec insert_syntax 'sp_cacheconfig',
'System Procedure',      2 ,
'        and provides information about them.'
go
exec insert_syntax 'sp_cacheconfig',
'System Procedure',      3 ,
'  sp_cacheconfig [cachename [,"cache_size[P|K|M|G]" ]'
go
exec insert_syntax 'sp_cacheconfig',
'System Procedure',      4 ,
'     [,logonly | mixed ] [,strict | relaxed ] ]'
go
exec insert_syntax 'sp_cacheconfig',
'System Procedure',      5 ,
'     [, "cache_partition=[1|2|4|8|16|32|64]"]'
go
exec insert_syntax 'sp_cachestrategy',
'System Procedure',      1 ,
'sp_cachestrategy - Enables or disables prefetching (large I/O) and MRU cache'
go
exec insert_syntax 'sp_cachestrategy',
'System Procedure',      2 ,
'        replacement strategy for a table, index, text object, or image object.'
go
exec insert_syntax 'sp_cachestrategy',
'System Procedure',      3 ,
'  sp_cachestrategy dbname, [ownername.]tablename'
go
exec insert_syntax 'sp_cachestrategy',
'System Procedure',      4 ,
'     [, indexname | "text only" | "table only"'
go
exec insert_syntax 'sp_cachestrategy',
'System Procedure',      5 ,
'     [, { prefetch | mru }, { "on" | "off"}]]'
go
exec insert_syntax 'sp_changedbowner',
'System Procedure',      1 ,
'sp_changedbowner - Changes the owner of a user database.'
go
exec insert_syntax 'sp_changedbowner',
'System Procedure',      2 ,
'  sp_changedbowner loginame [, true ]'
go
exec insert_syntax 'sp_changegroup',
'System Procedure',      1 ,
'sp_changegroup - Changes a user''s group.'
go
exec insert_syntax 'sp_changegroup',
'System Procedure',      2 ,
'  sp_changegroup grpname, username'
go
exec insert_syntax 'sp_checknames',
'System Procedure',      1 ,
'sp_checknames - Checks the current database for names that contain characters'
go
exec insert_syntax 'sp_checknames',
'System Procedure',      2 ,
'        not in the 7-bit ASCII set.'
go
exec insert_syntax 'sp_checknames',
'System Procedure',      3 ,
'  sp_checknames'
go
exec insert_syntax 'sp_checkreswords',
'System Procedure',      1 ,
'sp_checkreswords - Detects and displays identifiers that are Transact-SQL'
go
exec insert_syntax 'sp_checkreswords',
'System Procedure',      2 ,
'        reserved words.  Checks server names, device names, database'
go
exec insert_syntax 'sp_checkreswords',
'System Procedure',      3 ,
'        names, segment names, user-defined datatypes, object names,'
go
exec insert_syntax 'sp_checkreswords',
'System Procedure',      4 ,
'        column names, user names, login names, and remote login names.'
go
exec insert_syntax 'sp_checkreswords',
'System Procedure',      5 ,
'  sp_checkreswords [user_name_param]'
go
exec insert_syntax 'sp_checksource',
'System Procedure',      1 ,
'sp_checksource - Checks for the existence of the source text of the compiled'
go
exec insert_syntax 'sp_checksource',
'System Procedure',      2 ,
'        object.'
go
exec insert_syntax 'sp_checksource',
'System Procedure',      3 ,
'  sp_checksource [objname [, tabname [, username]]]'
go
exec insert_syntax 'sp_chgattribute',
'System Procedure',      1 ,
'sp_chgattribute - Changes the max_rows_per_page, fillfactor, reservepagegap,'
go
exec insert_syntax 'sp_chgattribute',
'System Procedure',      2 ,
'        or exp_row_size value for future space allocations of a table or an'
go
exec insert_syntax 'sp_chgattribute',
'System Procedure',      3 ,
'        index; sets the concurrency_opt_threshold for a table.'
go
exec insert_syntax 'sp_chgattribute',
'System Procedure',      4 ,
'  sp_chgattribute objname, {"max_rows_per_page" |'
go
exec insert_syntax 'sp_chgattribute',
'System Procedure',      5 ,
'     "fillfactor" | "reservepagegap" | "exp_row_size"'
go
exec insert_syntax 'sp_chgattribute',
'System Procedure',      6 ,
'     concurrency_opt_threshold }, optvalue'
go
exec insert_syntax 'sp_clearpsexe',
'System Procedure',      1 ,
'sp_clearpsexe - Clears the execution attributes of an Adaptive Server session'
go
exec insert_syntax 'sp_clearpsexe',
'System Procedure',      2 ,
'        that was set by sp_setpsexe.'
go
exec insert_syntax 'sp_clearpsexe',
'System Procedure',      3 ,
'  sp_clearpsexe spid, exeattr'
go
exec insert_syntax 'sp_clearstats',
'System Procedure',      1 ,
'sp_clearstats - Initiates a new accounting period for all server users or for'
go
exec insert_syntax 'sp_clearstats',
'System Procedure',      2 ,
'        a specified user. Prints statistics for the previous period by'
go
exec insert_syntax 'sp_clearstats',
'System Procedure',      3 ,
'        executing sp_reportstats.'
go
exec insert_syntax 'sp_clearstats',
'System Procedure',      4 ,
'  sp_clearstats [loginame]'
go
exec insert_syntax 'sp_cmp_all_qplans',
'System Procedure',      1 ,
'sp_cmp_all_qplans - Compares all abstract plans in two abstract plan groups.'
go
exec insert_syntax 'sp_cmp_all_qplans',
'System Procedure',      2 ,
'  sp_cmp_all_qplans group1, group2 [, mode]'
go
exec insert_syntax 'sp_cmp_qplans',
'System Procedure',      1 ,
'sp_cmp_qplans - Compares two abstract plans.'
go
exec insert_syntax 'sp_cmp_qplans',
'System Procedure',      2 ,
'  sp_cmp_qplans id1, id2'
go
exec insert_syntax 'sp_commonkey',
'System Procedure',      1 ,
'sp_commonkey - Defines a common key-columns that are frequently'
go
exec insert_syntax 'sp_commonkey',
'System Procedure',      2 ,
'        joined-between two tables or views.'
go
exec insert_syntax 'sp_commonkey',
'System Procedure',      3 ,
'  sp_commonkey tabaname, tabbname, col1a, col1b'
go
exec insert_syntax 'sp_commonkey',
'System Procedure',      4 ,
'       [, col2a, col2b, ..., col8a, col8b]'
go
exec insert_syntax 'sp_companion',
'System Procedure',      1 ,
'sp_companion - Performs cluster operations such as configuring Adaptive'
go
exec insert_syntax 'sp_companion',
'System Procedure',      2 ,
'        Server as a secondary companion in a high availability system'
go
exec insert_syntax 'sp_companion',
'System Procedure',      3 ,
'        and moving a companion server from one failover mode to'
go
exec insert_syntax 'sp_companion',
'System Procedure',      4 ,
'        another. sp_companion is run from the secondary companion.'
go
exec insert_syntax 'sp_companion',
'System Procedure',      5 ,
'  sp_companion'
go
exec insert_syntax 'sp_companion',
'System Procedure',      6 ,
'     [server_name'
go
exec insert_syntax 'sp_companion',
'System Procedure',      7 ,
'     {,configure'
go
exec insert_syntax 'sp_companion',
'System Procedure',      8 ,
'             [,{with_proxydb | NULL}]'
go
exec insert_syntax 'sp_companion',
'System Procedure',      9 ,
'             [,srvlogin]'
go
exec insert_syntax 'sp_companion',
'System Procedure',      10,
'             [,server_password]'
go
exec insert_syntax 'sp_companion',
'System Procedure',      11,
'             [,cluster_login]'
go
exec insert_syntax 'sp_companion',
'System Procedure',      12,
'             [,cluspassword]]'
go
exec insert_syntax 'sp_companion',
'System Procedure',      13,
'     | drop'
go
exec insert_syntax 'sp_companion',
'System Procedure',      14,
'     | suspend'
go
exec insert_syntax 'sp_companion',
'System Procedure',      15,
'     | resume'
go
exec insert_syntax 'sp_companion',
'System Procedure',      16,
'     | prepare_failback'
go
exec insert_syntax 'sp_companion',
'System Procedure',      17,
'     | do_advisory}'
go
exec insert_syntax 'sp_companion',
'System Procedure',      18,
'                     {, all'
go
exec insert_syntax 'sp_companion',
'System Procedure',      19,
'                     | help'
go
exec insert_syntax 'sp_companion',
'System Procedure',      20,
'                     | group attribute_name'
go
exec insert_syntax 'sp_companion',
'System Procedure',      21,
'                     | base attribute_name}'
go
exec insert_syntax 'sp_extengine',
'System Procedure',      1 ,
'sp_extengine - Starts, stops, and displays information about EJB Server.'
go
exec insert_syntax 'sp_extengine',
'System Procedure',      2 ,
'  sp_extengine ejb_servername, {start | stop | status}'
go
exec insert_syntax 'sp_configure',
'System Procedure',      1 ,
'sp_configure - Displays or changes configuration parameters.'
go
exec insert_syntax 'sp_configure',
'System Procedure',      2 ,
'  sp_configure [configname [, configvalue] | group_name'
go
exec insert_syntax 'sp_configure',
'System Procedure',      3 ,
'     | non_unique_parameter_fragment]'
go
exec insert_syntax 'sp_configure',
'System Procedure',      4 ,
'     ["p|P|k|K|m|M|g|G"]]'
go
exec insert_syntax 'sp_configure',
'System Procedure',      5 ,
'     '
go
exec insert_syntax 'sp_configure',
'System Procedure',      6 ,
'     Or,'
go
exec insert_syntax 'sp_configure',
'System Procedure',      7 ,
'    '
go
exec insert_syntax 'sp_configure',
'System Procedure',      8 ,
'     sp_configure "configuration file", 0, {"write" | "read"'
go
exec insert_syntax 'sp_configure',
'System Procedure',      9 ,
'     | "verify" | "restore" } "file_name"'
go
exec insert_syntax 'sp_copy_all_qplans',
'System Procedure',      1 ,
'sp_copy_all_qplans - Copies all plans for one abstract plan group to another'
go
exec insert_syntax 'sp_copy_all_qplans',
'System Procedure',      2 ,
'        group.'
go
exec insert_syntax 'sp_copy_all_qplans',
'System Procedure',      3 ,
'  sp_copy_all_qplans src_group, dest_group'
go
exec insert_syntax 'sp_copy_qplan',
'System Procedure',      1 ,
'sp_copy_qplan - Copies one abstract plan to an abstract plan group.'
go
exec insert_syntax 'sp_copy_qplan',
'System Procedure',      2 ,
'  sp_copy_qplan src_id, dest_group'
go
exec insert_syntax 'sp_countmetadata',
'System Procedure',      1 ,
'sp_countmetadata - Displays the number of indexes, objects, or databases in'
go
exec insert_syntax 'sp_countmetadata',
'System Procedure',      2 ,
'        Adaptive Server.'
go
exec insert_syntax 'sp_countmetadata',
'System Procedure',      3 ,
'  sp_countmetadata "configname" [, dbname]'
go
exec insert_syntax 'sp_cursorinfo',
'System Procedure',      1 ,
'sp_cursorinfo - Reports information about a specific cursor or all cursors'
go
exec insert_syntax 'sp_cursorinfo',
'System Procedure',      2 ,
'        that are active for your session.'
go
exec insert_syntax 'sp_cursorinfo',
'System Procedure',      3 ,
'  sp_cursorinfo [{cursor_level | null}] [, cursor_name]'
go
exec insert_syntax 'sp_dboption',
'System Procedure',      1 ,
'sp_dboption - Displays or changes database options.'
go
exec insert_syntax 'sp_dboption',
'System Procedure',      2 ,
'  sp_dboption [dbname, optname, {true | false}]'
go
exec insert_syntax 'sp_dbrecovery_order',
'System Procedure',      1 ,
'sp_dbrecovery_order - Specifies the order in which user databases are'
go
exec insert_syntax 'sp_dbrecovery_order',
'System Procedure',      2 ,
'        recovered and lists the user-defined recovery order of a'
go
exec insert_syntax 'sp_dbrecovery_order',
'System Procedure',      3 ,
'        database or all databases.'
go
exec insert_syntax 'sp_dbrecovery_order',
'System Procedure',      4 ,
'  sp_dbrecovery_order'
go
exec insert_syntax 'sp_dbrecovery_order',
'System Procedure',      5 ,
'     [database_name [, rec_order [, force]]]'
go
exec insert_syntax 'sp_dbremap',
'System Procedure',      1 ,
'sp_dbremap - Forces Adaptive Server to recognize changes made by alter'
go
exec insert_syntax 'sp_dbremap',
'System Procedure',      2 ,
'        database.  Run this procedure only when instructed to do so'
go
exec insert_syntax 'sp_dbremap',
'System Procedure',      3 ,
'        by an Adaptive Server message.'
go
exec insert_syntax 'sp_dbremap',
'System Procedure',      4 ,
'  sp_dbremap dbname'
go
exec insert_syntax 'sp_defaultloc',
'System Procedure',      1 ,
'sp_defaultloc - Defines a default storage location for objects in a local'
go
exec insert_syntax 'sp_defaultloc',
'System Procedure',      2 ,
'        database.'
go
exec insert_syntax 'sp_defaultloc',
'System Procedure',      3 ,
'  sp_defaultloc dbname, {"defaultloc"| NULL}'
go
exec insert_syntax 'sp_defaultloc',
'System Procedure',      4 ,
'     [, "defaulttype"]'
go
exec insert_syntax 'sp_depends',
'System Procedure',      1 ,
'sp_depends - Displays information about database object dependencies-the'
go
exec insert_syntax 'sp_depends',
'System Procedure',      2 ,
'        view(s), trigger(s), and procedure(s) in the database that'
go
exec insert_syntax 'sp_depends',
'System Procedure',      3 ,
'        depend on a specified table or view, and the table(s) and'
go
exec insert_syntax 'sp_depends',
'System Procedure',      4 ,
'        view(s) in the database on which the specified view,'
go
exec insert_syntax 'sp_depends',
'System Procedure',      5 ,
'        trigger, or procedure depends.'
go
exec insert_syntax 'sp_depends',
'System Procedure',      6 ,
'  sp_depends objname'
go
exec insert_syntax 'sp_deviceattr',
'System Procedure',      1 ,
'sp_deviceattr - Changes the dsync setting of an existing database device file.'
go
exec insert_syntax 'sp_deviceattr',
'System Procedure',      2 ,
'  sp_deviceattr logicalname, optname, optvalue'
go
exec insert_syntax 'sp_diskdefault',
'System Procedure',      1 ,
'sp_diskdefault - Specifies whether or not a database device can be used for'
go
exec insert_syntax 'sp_diskdefault',
'System Procedure',      2 ,
'        database storage if the user does not specify a database device or'
go
exec insert_syntax 'sp_diskdefault',
'System Procedure',      3 ,
'        specifies default with the create database or alter database commands.'
go
exec insert_syntax 'sp_diskdefault',
'System Procedure',      4 ,
'  sp_diskdefault logicalname, {defaulton | defaultoff}'
go
exec insert_syntax 'sp_displayaudit',
'System Procedure',      1 ,
'sp_displayaudit - Displays the status of audit options.'
go
exec insert_syntax 'sp_displayaudit',
'System Procedure',      2 ,
'  sp_displayaudit ["procedure" | "object" | "login" |'
go
exec insert_syntax 'sp_displayaudit',
'System Procedure',      3 ,
'     "database" | "global" | "default_object" |'
go
exec insert_syntax 'sp_displayaudit',
'System Procedure',      4 ,
'     "default_procedure" [, "name"]]'
go
exec insert_syntax 'sp_displaylevel',
'System Procedure',      1 ,
'sp_displaylevel - Sets or shows which Adaptive Server configuration'
go
exec insert_syntax 'sp_displaylevel',
'System Procedure',      2 ,
'        parameters appear in sp_configure output.'
go
exec insert_syntax 'sp_displaylevel',
'System Procedure',      3 ,
'  sp_displaylevel [loginame [, level]]'
go
exec insert_syntax 'sp_displaylogin',
'System Procedure',      1 ,
'sp_displaylogin - Displays information about a login account. Also displays'
go
exec insert_syntax 'sp_displaylogin',
'System Procedure',      2 ,
'        information about the hierarchy tree above or below the login'
go
exec insert_syntax 'sp_displaylogin',
'System Procedure',      3 ,
'        account when you so specify.'
go
exec insert_syntax 'sp_displaylogin',
'System Procedure',      4 ,
'  sp_displaylogin [loginame [, expand_up | expand_down]]'
go
exec insert_syntax 'sp_displayroles',
'System Procedure',      1 ,
'sp_displayroles - Displays all roles granted to another role, or displays the'
go
exec insert_syntax 'sp_displayroles',
'System Procedure',      2 ,
'        entire hierarchy tree of roles in table format.'
go
exec insert_syntax 'sp_displayroles',
'System Procedure',      3 ,
'  sp_displayroles [grantee_name [, mode]]'
go
exec insert_syntax 'sp_drop_all_qplans',
'System Procedure',      1 ,
'sp_drop_all_qplans - Deletes all abstract plans in an abstract plan group.'
go
exec insert_syntax 'sp_drop_all_qplans',
'System Procedure',      2 ,
'  sp_drop_all_qplans name'
go
exec insert_syntax 'sp_drop_qpgroup',
'System Procedure',      1 ,
'sp_drop_qpgroup - Drops an abstract plan group.'
go
exec insert_syntax 'sp_drop_qpgroup',
'System Procedure',      2 ,
'  sp_drop_qpgroup group'
go
exec insert_syntax 'sp_drop_qplan',
'System Procedure',      1 ,
'sp_drop_qplan - Drops an abstract plan.'
go
exec insert_syntax 'sp_drop_qplan',
'System Procedure',      2 ,
'  sp_drop_qplan id'
go
exec insert_syntax 'sp_drop_resource_limit',
'System Procedure',      1 ,
'sp_drop_resource_limit - Removes one or more resource limits from Adaptive'
go
exec insert_syntax 'sp_drop_resource_limit',
'System Procedure',      2 ,
'        Server.'
go
exec insert_syntax 'sp_drop_resource_limit',
'System Procedure',      3 ,
'  sp_drop_resource_limit {name, appname }'
go
exec insert_syntax 'sp_drop_resource_limit',
'System Procedure',      4 ,
'     [, rangename, limittype, enforced, action, scope]'
go
exec insert_syntax 'sp_drop_time_range',
'System Procedure',      1 ,
'sp_drop_time_range - Removes a user-defined time range from Adaptive Server.'
go
exec insert_syntax 'sp_drop_time_range',
'System Procedure',      2 ,
'  sp_drop_time_range name'
go
exec insert_syntax 'sp_dropalias',
'System Procedure',      1 ,
'sp_dropalias - Removes the alias user name identity established with'
go
exec insert_syntax 'sp_dropalias',
'System Procedure',      2 ,
'        sp_addalias.'
go
exec insert_syntax 'sp_dropalias',
'System Procedure',      3 ,
'  sp_dropalias loginame'
go
exec insert_syntax 'sp_dropdevice',
'System Procedure',      1 ,
'sp_dropdevice - Drops an Adaptive Server database device or dump device.'
go
exec insert_syntax 'sp_dropdevice',
'System Procedure',      2 ,
'  sp_dropdevice logicalname'
go
exec insert_syntax 'sp_dropengine',
'System Procedure',      1 ,
'sp_dropengine - Drops an engine from a specified engine group or, if the'
go
exec insert_syntax 'sp_dropengine',
'System Procedure',      2 ,
'        engine is the last one in the group, drops the engine group.'
go
exec insert_syntax 'sp_dropengine',
'System Procedure',      3 ,
'  sp_dropengine engine_number, engine_group'
go
exec insert_syntax 'sp_dropexeclass',
'System Procedure',      1 ,
'sp_dropexeclass - Drops a user-defined execution class.'
go
exec insert_syntax 'sp_dropexeclass',
'System Procedure',      2 ,
'  sp_dropexeclass classname'
go
exec insert_syntax 'sp_dropextendedproc',
'System Procedure',      1 ,
'sp_dropextendedproc - Removes an extended stored procedure (ESP).'
go
exec insert_syntax 'sp_dropextendedproc',
'System Procedure',      2 ,
'  sp_dropextendedproc esp_name'
go
exec insert_syntax 'sp_dropexternlogin',
'System Procedure',      1 ,
'sp_dropexternlogin - Drops the definition of a remote login previously'
go
exec insert_syntax 'sp_dropexternlogin',
'System Procedure',      2 ,
'        defined by sp_addexternlogin.'
go
exec insert_syntax 'sp_dropexternlogin',
'System Procedure',      3 ,
'  sp_dropexternlogin remote_server [, login_name]'
go
exec insert_syntax 'sp_dropglockpromote',
'System Procedure',      1 ,
'sp_dropglockpromote - Removes lock promotion values from a table or database.'
go
exec insert_syntax 'sp_dropglockpromote',
'System Procedure',      2 ,
'  sp_dropglockpromote {"database" | "table"}, objname'
go
exec insert_syntax 'sp_dropgroup',
'System Procedure',      1 ,
'sp_dropgroup - Drops a group from a database.'
go
exec insert_syntax 'sp_dropgroup',
'System Procedure',      2 ,
'  sp_dropgroup grpname'
go
exec insert_syntax 'sp_dropkey',
'System Procedure',      1 ,
'sp_dropkey - Removes from the syskeys table a key that had been defined using'
go
exec insert_syntax 'sp_dropkey',
'System Procedure',      2 ,
'        sp_primarykey, sp_foreignkey, or sp_commonkey.'
go
exec insert_syntax 'sp_dropkey',
'System Procedure',      3 ,
'  sp_dropkey keytype, tabname [, deptabname]'
go
exec insert_syntax 'sp_droplanguage',
'System Procedure',      1 ,
'sp_droplanguage - Drops an alternate language from the server and removes its'
go
exec insert_syntax 'sp_droplanguage',
'System Procedure',      2 ,
'        row from master.dbo.syslanguages.'
go
exec insert_syntax 'sp_droplanguage',
'System Procedure',      3 ,
'  sp_droplanguage language [, dropmessages]'
go
exec insert_syntax 'sp_droplogin',
'System Procedure',      1 ,
'sp_droplogin - Drops an Adaptive Server user login by deleting the user''s'
go
exec insert_syntax 'sp_droplogin',
'System Procedure',      2 ,
'        entry from master.dbo.syslogins.'
go
exec insert_syntax 'sp_droplogin',
'System Procedure',      3 ,
'  sp_droplogin loginame'
go
exec insert_syntax 'sp_dropmessage',
'System Procedure',      1 ,
'sp_dropmessage - Drops user-defined messages from sysusermessages.'
go
exec insert_syntax 'sp_dropmessage',
'System Procedure',      2 ,
'  sp_dropmessage message_num [, language]'
go
exec insert_syntax 'sp_dropobjectdef',
'System Procedure',      1 ,
'sp_dropobjectdef - Deletes the external storage mapping provided for a local'
go
exec insert_syntax 'sp_dropobjectdef',
'System Procedure',      2 ,
'        object.'
go
exec insert_syntax 'sp_dropobjectdef',
'System Procedure',      3 ,
'  sp_dropobjectdef "object_name"'
go
exec insert_syntax 'sp_dropremotelogin',
'System Procedure',      1 ,
'sp_dropremotelogin - Drops a remote user login.'
go
exec insert_syntax 'sp_dropremotelogin',
'System Procedure',      2 ,
'  sp_dropremotelogin remoteserver [, loginame'
go
exec insert_syntax 'sp_dropremotelogin',
'System Procedure',      3 ,
'     [, remotename] ]'
go
exec insert_syntax 'sp_droprowlockpromote',
'System Procedure',      1 ,
'sp_droprowlockpromote - Removes row lock promotion threshold values from a'
go
exec insert_syntax 'sp_droprowlockpromote',
'System Procedure',      2 ,
'        database or table.'
go
exec insert_syntax 'sp_droprowlockpromote',
'System Procedure',      3 ,
'  sp_droprowlockpromote {"database" | "table"}, objname'
go
exec insert_syntax 'sp_dropsegment',
'System Procedure',      1 ,
'sp_dropsegment - Drops a segment from a database or unmaps a segment from a'
go
exec insert_syntax 'sp_dropsegment',
'System Procedure',      2 ,
'        particular database device.'
go
exec insert_syntax 'sp_dropsegment',
'System Procedure',      3 ,
'  sp_dropsegment segname, dbname [, device]'
go
exec insert_syntax 'sp_dropserver',
'System Procedure',      1 ,
'sp_dropserver - Drops a server from the list of known servers or drops remote'
go
exec insert_syntax 'sp_dropserver',
'System Procedure',      2 ,
'        logins and external logins in the same operation.'
go
exec insert_syntax 'sp_dropserver',
'System Procedure',      3 ,
'  sp_dropserver server [, droplogins]'
go
exec insert_syntax 'sp_dropthreshold',
'System Procedure',      1 ,
'sp_dropthreshold - Removes a free-space threshold from a segment.'
go
exec insert_syntax 'sp_dropthreshold',
'System Procedure',      2 ,
'  sp_dropthreshold dbname, segname, free_space'
go
exec insert_syntax 'sp_droptype',
'System Procedure',      1 ,
'sp_droptype - Drops a user-defined datatype.'
go
exec insert_syntax 'sp_droptype',
'System Procedure',      2 ,
'  sp_droptype typename'
go
exec insert_syntax 'sp_dropuser',
'System Procedure',      1 ,
'sp_dropuser - Drops a user from the current database.'
go
exec insert_syntax 'sp_dropuser',
'System Procedure',      2 ,
'  sp_dropuser name_in_db'
go
exec insert_syntax 'sp_dumpoptimize',
'System Procedure',      1 ,
'sp_dumpoptimize - Specifies the amount of data dumped by Backup Server during'
go
exec insert_syntax 'sp_dumpoptimize',
'System Procedure',      2 ,
'        the dump database operation.'
go
exec insert_syntax 'sp_dumpoptimize',
'System Procedure',      3 ,
'  sp_dumpoptimize [ "archive_space ='
go
exec insert_syntax 'sp_dumpoptimize',
'System Procedure',      4 ,
'     {maximum | minimum | default }" ]'
go
exec insert_syntax 'sp_dumpoptimize',
'System Procedure',      5 ,
'     sp_dumpoptimize [ "reserved_threshold ='
go
exec insert_syntax 'sp_dumpoptimize',
'System Procedure',      6 ,
'     {nnn | default }" ]'
go
exec insert_syntax 'sp_dumpoptimize',
'System Procedure',      7 ,
'     sp_dumpoptimize [ "allocation_threshold ='
go
exec insert_syntax 'sp_dumpoptimize',
'System Procedure',      8 ,
'     {nnn | default }" ]'
go
exec insert_syntax 'sp_engine',
'System Procedure',      1 ,
'sp_engine - Enables you to bring an engine on- or offline'
go
exec insert_syntax 'sp_engine',
'System Procedure',      2 ,
'        sp_engine {["shutdown", engine_id] | [offline | can_offline]' 
go
exec insert_syntax 'sp_engine',
'System Procedure',      3 ,
'        [, engine_id] | "online"}'
go
exec insert_syntax 'sp_estspace',
'System Procedure',      1 ,
'sp_estspace - Estimates the amount of space required for a table and its'
go
exec insert_syntax 'sp_estspace',
'System Procedure',      2 ,
'        indexes, and the time needed to create the index.'
go
exec insert_syntax 'sp_estspace',
'System Procedure',      3 ,
'  sp_estspace table_name, no_of_rows [, fill_factor'
go
exec insert_syntax 'sp_estspace',
'System Procedure',      4 ,
'     [, cols_to_max [, textbin_len [, iosec]]]]'
go
exec insert_syntax 'sp_export_qpgroup',
'System Procedure',      1 ,
'sp_export_qpgroup - Exports all plans for a specified user and abstract plan'
go
exec insert_syntax 'sp_export_qpgroup',
'System Procedure',      2 ,
'        group to a user table.'
go
exec insert_syntax 'sp_export_qpgroup',
'System Procedure',      3 ,
'  sp_export_qpgroup usr, group, tab'
go
exec insert_syntax 'sp_extendsegment',
'System Procedure',      1 ,
'sp_extendsegment - Extends the range of a segment to another database device.'
go
exec insert_syntax 'sp_extendsegment',
'System Procedure',      2 ,
'  sp_extendsegment segname, dbname, devname'
go
exec insert_syntax 'sp_familylock',
'System Procedure',      1 ,
'sp_familylock - Reports information about all the locks held by a family'
go
exec insert_syntax 'sp_familylock',
'System Procedure',      2 ,
'        (coordinating process and its worker processes) executing a'
go
exec insert_syntax 'sp_familylock',
'System Procedure',      3 ,
'        statement in parallel.'
go
exec insert_syntax 'sp_familylock',
'System Procedure',      4 ,
'  sp_familylock [fpid1 [, fpid2]]'
go
exec insert_syntax 'sp_find_qplan',
'System Procedure',      1 ,
'sp_find_qplan - Finds an abstract plan, given a pattern from the query text'
go
exec insert_syntax 'sp_find_qplan',
'System Procedure',      2 ,
'        or plan text.'
go
exec insert_syntax 'sp_find_qplan',
'System Procedure',      3 ,
'  sp_find_qplan pattern [, group ]'
go
exec insert_syntax 'sp_flushstats',
'System Procedure',      1 ,
'sp_flushstats - Flushes statistics from in-memory storage to the systabstats'
go
exec insert_syntax 'sp_flushstats',
'System Procedure',      2 ,
'        system table.'
go
exec insert_syntax 'sp_flushstats',
'System Procedure',      3 ,
'  sp_flushstats objname'
go
exec insert_syntax 'sp_forceonline_db',
'System Procedure',      1 ,
'sp_forceonline_db - Provides access to all the pages in a database that were'
go
exec insert_syntax 'sp_forceonline_db',
'System Procedure',      2 ,
'        previously marked suspect by recovery.'
go
exec insert_syntax 'sp_forceonline_db',
'System Procedure',      3 ,
'  sp_forceonline_db dbname,'
go
exec insert_syntax 'sp_forceonline_db',
'System Procedure',      4 ,
'     {"sa_on" | "sa_off" | "all_users"}'
go
exec insert_syntax 'sp_forceonline_object',
'System Procedure',      1 ,
'sp_forceonline_object - Provides access to an index previously marked suspect'
go
exec insert_syntax 'sp_forceonline_object',
'System Procedure',      2 ,
'        by recovery.'
go
exec insert_syntax 'sp_forceonline_object',
'System Procedure',      3 ,
'  sp_forceonline_object dbname, objname, indid,'
go
exec insert_syntax 'sp_forceonline_object',
'System Procedure',      4 ,
'     {sa_on | sa_off | all_users} [, no_print]'
go
exec insert_syntax 'sp_forceonline_page',
'System Procedure',      1 ,
'sp_forceonline_page - Provides access to pages previously marked suspect by'
go
exec insert_syntax 'sp_forceonline_page',
'System Procedure',      2 ,
'        recovery.'
go
exec insert_syntax 'sp_forceonline_page',
'System Procedure',      3 ,
'  sp_forceonline_page dbname, pgid,'
go
exec insert_syntax 'sp_forceonline_page',
'System Procedure',      4 ,
'     {"sa_on" | "sa_off" | "all_users"}'
go
exec insert_syntax 'sp_foreignkey',
'System Procedure',      1 ,
'sp_foreignkey - Defines a foreign key on a table or view in the current'
go
exec insert_syntax 'sp_foreignkey',
'System Procedure',      2 ,
'        database.'
go
exec insert_syntax 'sp_foreignkey',
'System Procedure',      3 ,
'  sp_foreignkey tabname, pktabname, col1 [, col2] ...'
go
exec insert_syntax 'sp_foreignkey',
'System Procedure',      4 ,
'     [, col8]'
go
exec insert_syntax 'sp_freedll',
'System Procedure',      1 ,
'sp_freedll - Unloads a dynamic link library (DLL) that was previously loaded'
go
exec insert_syntax 'sp_freedll',
'System Procedure',      2 ,
'        into XP Server memory to support the execution of an extended'
go
exec insert_syntax 'sp_freedll',
'System Procedure',      3 ,
'        stored procedure (ESP).'
go
exec insert_syntax 'sp_freedll',
'System Procedure',      4 ,
'  sp_freedll dll_name'
go
exec insert_syntax 'sp_getmessage',
'System Procedure',      1 ,
'sp_getmessage - Retrieves stored message strings from sysmessages and'
go
exec insert_syntax 'sp_getmessage',
'System Procedure',      2 ,
'        sysusermessages for print and raiserror statements.'
go
exec insert_syntax 'sp_getmessage',
'System Procedure',      3 ,
'  sp_getmessage message_num, result output [, language]'
go
exec insert_syntax 'sp_grantlogin',
'System Procedure',      1 ,
'sp_grantlogin - Assigns Adaptive Server roles or default permissions to'
go
exec insert_syntax 'sp_grantlogin',
'System Procedure',      2 ,
'        Windows NT users and groups when Integrated Security mode or'
go
exec insert_syntax 'sp_grantlogin',
'System Procedure',      3 ,
'        Mixed mode (with Named Pipes) is active.'
go
exec insert_syntax 'sp_grantlogin',
'System Procedure',      4 ,
'  sp_grantlogin {login_name | group_name}'
go
exec insert_syntax 'sp_grantlogin',
'System Procedure',      5 ,
'     ["role_list" | default]'
go
exec insert_syntax 'sp_ha_admin',
'System Procedure',      1 ,
'sp_ha_admin - Performs administrative tasks on Adaptive Servers configured'
go
exec insert_syntax 'sp_ha_admin',
'System Procedure',      2 ,
'        with Sybase Failover in a high availability system. sp_ha_admin is'
go
exec insert_syntax 'sp_ha_admin',
'System Procedure',      3 ,
'        installed with the installhavss script on UNIX platforms or the'
go
exec insert_syntax 'sp_ha_admin',
'System Procedure',      4 ,
'        insthasv script on Windows NT.'
go
exec insert_syntax 'sp_ha_admin',
'System Procedure',      5 ,
'  sp_ha_admnin [cleansessions | help]'
go
exec insert_syntax 'sp_help',
'System Procedure',      1 ,
'sp_help - Reports information about a database object (any object listed in'
go
exec insert_syntax 'sp_help',
'System Procedure',      2 ,
'        sysobjects) and about system or user-defined datatypes.'
go
exec insert_syntax 'sp_help',
'System Procedure',      3 ,
'  sp_help [objname]'
go
exec insert_syntax 'sp_help_qpgroup',
'System Procedure',      1 ,
'sp_help_qpgroup - Reports information on an abstract plan group.'
go
exec insert_syntax 'sp_help_qpgroup',
'System Procedure',      2 ,
'  sp_help_qpgroup [ group [, mode ]]'
go
exec insert_syntax 'sp_help_qplan',
'System Procedure',      1 ,
'sp_help_qplan - Reports information about an abstract plan.'
go
exec insert_syntax 'sp_help_qplan',
'System Procedure',      2 ,
'  sp_help_qplan id [, mode ]'
go
exec insert_syntax 'sp_help_resource_limit',
'System Procedure',      1 ,
'sp_help_resource_limit - Reports on resource limits.'
go
exec insert_syntax 'sp_help_resource_limit',
'System Procedure',      2 ,
'  sp_help_resource_limit [name [, appname [, limittime'
go
exec insert_syntax 'sp_help_resource_limit',
'System Procedure',      3 ,
'     [, limitday [, scope [, action]]]]]]'
go
exec insert_syntax 'sp_helpartition',
'System Procedure',      1 ,
'sp_helpartition - Lists the partition number, first page, control page, and'
go
exec insert_syntax 'sp_helpartition',
'System Procedure',      2 ,
'        number of data pages and summary size information for each'
go
exec insert_syntax 'sp_helpartition',
'System Procedure',      3 ,
'        partition in a partitioned table.'
go
exec insert_syntax 'sp_helpartition',
'System Procedure',      4 ,
'  sp_helpartition [table_name]'
go
exec insert_syntax 'sp_helpcache',
'System Procedure',      1 ,
'sp_helpcache - Displays information about the objects that are bound to a'
go
exec insert_syntax 'sp_helpcache',
'System Procedure',      2 ,
'        data cache or the amount of overhead required for a specified'
go
exec insert_syntax 'sp_helpcache',
'System Procedure',      3 ,
'        cache size.'
go
exec insert_syntax 'sp_helpcache',
'System Procedure',      4 ,
'  sp_helpcache {cache_name | "cache_size[P|K|M|G]"}'
go
exec insert_syntax 'sp_helpconfig',
'System Procedure',      1 ,
'sp_helpconfig - Reports help information on configuration parameters.'
go
exec insert_syntax 'sp_helpconfig',
'System Procedure',      2 ,
'  sp_helpconfig "configname", ["size"]'
go
exec insert_syntax 'sp_helpconfig',
'System Procedure',      3 ,
'     sp_helpconfig "number of ccbs"'
go
exec insert_syntax 'sp_helpconfig',
'System Procedure',      4 ,
'     sp_helpconfig "caps per ccb"'
go
exec insert_syntax 'sp_helpconfig',
'System Procedure',      5 ,
'     sp_helpconfig "average cap size"'
go
exec insert_syntax 'sp_helpconstraint',
'System Procedure',      1 ,
'sp_helpconstraint - Reports information about integrity constraints used in'
go
exec insert_syntax 'sp_helpconstraint',
'System Procedure',      2 ,
'        the specified tables.'
go
exec insert_syntax 'sp_helpconstraint',
'System Procedure',      3 ,
'  sp_helpconstraint [objname] [, detail]'
go
exec insert_syntax 'sp_helpdb',
'System Procedure',      1 ,
'sp_helpdb - Reports information about a particular database or about all'
go
exec insert_syntax 'sp_helpdb',
'System Procedure',      2 ,
'        databases.'
go
exec insert_syntax 'sp_helpdb',
'System Procedure',      3 ,
'  sp_helpdb [dbname]'
go
exec insert_syntax 'sp_helpdevice',
'System Procedure',      1 ,
'sp_helpdevice - Reports information about a particular device or about all'
go
exec insert_syntax 'sp_helpdevice',
'System Procedure',      2 ,
'        Adaptive Server database devices and dump devices.'
go
exec insert_syntax 'sp_helpdevice',
'System Procedure',      3 ,
'  sp_helpdevice [devname]'
go
exec insert_syntax 'sp_helpextendedproc',
'System Procedure',      1 ,
'sp_helpextendedproc - Displays extended stored procedures (ESPs) in the'
go
exec insert_syntax 'sp_helpextendedproc',
'System Procedure',      2 ,
'        current database, along with their associated DLL files.'
go
exec insert_syntax 'sp_helpextendedproc',
'System Procedure',      3 ,
'  sp_helpextendedproc [esp_name]'
go
exec insert_syntax 'sp_helpexternlogin',
'System Procedure',      1 ,
'sp_helpexternlogin - Reports information about external login names.'
go
exec insert_syntax 'sp_helpexternlogin',
'System Procedure',      2 ,
'  sp_helpexternlogin [remote_server [, login_name]]'
go
exec insert_syntax 'sp_helpgroup',
'System Procedure',      1 ,
'sp_helpgroup - Reports information about a particular group or about all'
go
exec insert_syntax 'sp_helpgroup',
'System Procedure',      2 ,
'        groups in the current database.'
go
exec insert_syntax 'sp_helpgroup',
'System Procedure',      3 ,
'  sp_helpgroup [grpname]'
go
exec insert_syntax 'sp_helpindex',
'System Procedure',      1 ,
'sp_helpindex - Reports information about the indexes created on a table.'
go
exec insert_syntax 'sp_helpindex',
'System Procedure',      2 ,
'  sp_helpindex objname'
go
exec insert_syntax 'sp_helpjava',
'System Procedure',      1 ,
'sp_helpjava - Displays information about Java classes and associated JARs'
go
exec insert_syntax 'sp_helpjava',
'System Procedure',      2 ,
'        that are installed in the database. Refer to Java in Adaptive'
go
exec insert_syntax 'sp_helpjava',
'System Procedure',      3 ,
'        Server Enterprise for more information about Java in the database.'
go
exec insert_syntax 'sp_helpjava',
'System Procedure',      4 ,
'  sp_helpjava ["class"[, java_class_name [, "detail" | "depends"]] | "jar"'
go
exec insert_syntax 'sp_helpjava',
'System Procedure',      5 ,
'  [, jar_name [, "depends"]]]'
go
exec insert_syntax 'sp_helpjoins',
'System Procedure',      1 ,
'sp_helpjoins - Lists the columns in two tables or views that are likely join'
go
exec insert_syntax 'sp_helpjoins',
'System Procedure',      2 ,
'        candidates.'
go
exec insert_syntax 'sp_helpjoins',
'System Procedure',      3 ,
'  sp_helpjoins lefttab, righttab'
go
exec insert_syntax 'sp_helpkey',
'System Procedure',      1 ,
'sp_helpkey - Reports information about a primary, foreign, or common key of a'
go
exec insert_syntax 'sp_helpkey',
'System Procedure',      2 ,
'        particular table or view, or about all keys in the current database.'
go
exec insert_syntax 'sp_helpkey',
'System Procedure',      3 ,
'  sp_helpkey [tabname]'
go
exec insert_syntax 'sp_helplanguage',
'System Procedure',      1 ,
'sp_helplanguage - Reports information about a particular alternate language'
go
exec insert_syntax 'sp_helplanguage',
'System Procedure',      2 ,
'        or about all languages.'
go
exec insert_syntax 'sp_helplanguage',
'System Procedure',      3 ,
'  sp_helplanguage [language]'
go
exec insert_syntax 'sp_helplog',
'System Procedure',      1 ,
'sp_helplog - Reports the name of the device that contains the first page of'
go
exec insert_syntax 'sp_helplog',
'System Procedure',      2 ,
'        the transaction log.'
go
exec insert_syntax 'sp_helplog',
'System Procedure',      3 ,
'  sp_helplog'
go
exec insert_syntax 'sp_helpobjectdef',
'System Procedure',      1 ,
'sp_helpobjectdef - Reports owners, objects, and type information for remote'
go
exec insert_syntax 'sp_helpobjectdef',
'System Procedure',      2 ,
'        object definitions.'
go
exec insert_syntax 'sp_helpobjectdef',
'System Procedure',      3 ,
'  sp_helpobjectdef [object_name]'
go
exec insert_syntax 'sp_helpremotelogin',
'System Procedure',      1 ,
'sp_helpremotelogin - Reports information about a particular remote server''s'
go
exec insert_syntax 'sp_helpremotelogin',
'System Procedure',      2 ,
'        logins or about all remote server logins.'
go
exec insert_syntax 'sp_helpremotelogin',
'System Procedure',      3 ,
'  sp_helpremotelogin [remoteserver [, remotename]]'
go
exec insert_syntax 'sp_helprotect',
'System Procedure',      1 ,
'sp_helprotect - Reports on permissions for database objects, users, groups,'
go
exec insert_syntax 'sp_helprotect',
'System Procedure',      2 ,
'        or roles.'
go
exec insert_syntax 'sp_helprotect',
'System Procedure',      3 ,
'  sp_helprotect [name [, username [, "grant"'
go
exec insert_syntax 'sp_helprotect',
'System Procedure',      4 ,
'     [,"none"|"granted"|"enabled"|role_name]]]]'
go
exec insert_syntax 'sp_helpsegment',
'System Procedure',      1 ,
'sp_helpsegment - Reports information about a particular segment or about all'
go
exec insert_syntax 'sp_helpsegment',
'System Procedure',      2 ,
'        segments in the current database.'
go
exec insert_syntax 'sp_helpsegment',
'System Procedure',      3 ,
'  sp_helpsegment [segname]'
go
exec insert_syntax 'sp_helpserver',
'System Procedure',      1 ,
'sp_helpserver - Reports information about a particular remote server or about'
go
exec insert_syntax 'sp_helpserver',
'System Procedure',      2 ,
'        all remote servers.'
go
exec insert_syntax 'sp_helpserver',
'System Procedure',      3 ,
'  sp_helpserver [server]'
go
exec insert_syntax 'sp_helpsort',
'System Procedure',      1 ,
'sp_helpsort - Displays Adaptive Server''s default sort order and character set.'
go
exec insert_syntax 'sp_helpsort',
'System Procedure',      2 ,
'  sp_helpsort'
go
exec insert_syntax 'sp_helptext',
'System Procedure',      1 ,
'sp_helptext - Displays the source text of a compiled object.'
go
exec insert_syntax 'sp_helptext',
'System Procedure',      2 ,
'  sp_helptext objname'
go
exec insert_syntax 'sp_helpthreshold',
'System Procedure',      1 ,
'sp_helpthreshold - Reports the segment, free-space value, status, and stored'
go
exec insert_syntax 'sp_helpthreshold',
'System Procedure',      2 ,
'        procedure associated with all thresholds in the current database or'
go
exec insert_syntax 'sp_helpthreshold',
'System Procedure',      3 ,
'        all thresholds for a particular segment.'
go
exec insert_syntax 'sp_helpthreshold',
'System Procedure',      4 ,
'  sp_helpthreshold [segname]'
go
exec insert_syntax 'sp_helpuser',
'System Procedure',      1 ,
'sp_helpuser - Reports information about a particular user, group, or alias,'
go
exec insert_syntax 'sp_helpuser',
'System Procedure',      2 ,
'        or about all users, in the current database.'
go
exec insert_syntax 'sp_helpuser',
'System Procedure',      3 ,
'  sp_helpuser [name_in_db]'
go
exec insert_syntax 'sp_hidetext',
'System Procedure',      1 ,
'sp_hidetext - Hides the source text for the specified compiled object.'
go
exec insert_syntax 'sp_hidetext',
'System Procedure',      2 ,
'  sp_hidetext [objname [, tabname [, username]]]'
go
exec insert_syntax 'sp_import_qpgroup',
'System Procedure',      1 ,
'sp_import_qpgroup - Imports abstract plans from a user table into an abstract'
go
exec insert_syntax 'sp_import_qpgroup',
'System Procedure',      2 ,
'        plan group.'
go
exec insert_syntax 'sp_import_qpgroup',
'System Procedure',      3 ,
'  sp_import_qpgroup tab, usr, group'
go
exec insert_syntax 'sp_indsuspect',
'System Procedure',      1 ,
'sp_indsuspect - Checks user tables for indexes marked as suspect during'
go
exec insert_syntax 'sp_indsuspect',
'System Procedure',      2 ,
'        recovery following a sort order change.'
go
exec insert_syntax 'sp_indsuspect',
'System Procedure',      3 ,
'  sp_indsuspect [tab_name]'
go
exec insert_syntax 'sp_listsuspect_db',
'System Procedure',      1 ,
'sp_listsuspect_db - Lists all databases that currently have offline pages'
go
exec insert_syntax 'sp_listsuspect_db',
'System Procedure',      2 ,
'        because of corruption detected on recovery.'
go
exec insert_syntax 'sp_listsuspect_db',
'System Procedure',      3 ,
'  sp_listsuspect_db'
go
exec insert_syntax 'sp_listsuspect_object',
'System Procedure',      1 ,
'sp_listsuspect_object - Lists all indexes in a database that are currently'
go
exec insert_syntax 'sp_listsuspect_object',
'System Procedure',      2 ,
'        offline because of corruption detected on recovery.'
go
exec insert_syntax 'sp_listsuspect_object',
'System Procedure',      3 ,
'  sp_listsuspect_object [dbname]'
go
exec insert_syntax 'sp_listsuspect_page',
'System Procedure',      1 ,
'sp_listsuspect_page - Lists all pages in a database that are currently'
go
exec insert_syntax 'sp_listsuspect_page',
'System Procedure',      2 ,
'        offline because of corruption detected on recovery.'
go
exec insert_syntax 'sp_listsuspect_page',
'System Procedure',      3 ,
'  sp_listsuspect_page [dbname]'
go
exec insert_syntax 'sp_lock',
'System Procedure',      1 ,
'sp_lock - Reports information about processes that currently hold locks.'
go
exec insert_syntax 'sp_lock',
'System Procedure',      2 ,
'  sp_lock [spid1 [, spid2]]'
go
exec insert_syntax 'sp_locklogin',
'System Procedure',      1 ,
'sp_locklogin - Locks an Adaptive Server account so that the user cannot log'
go
exec insert_syntax 'sp_locklogin',
'System Procedure',      2 ,
'        in or displays a list of all locked accounts.'
go
exec insert_syntax 'sp_locklogin',
'System Procedure',      3 ,
'  sp_locklogin [loginame, "{lock | unlock}"]'
go
exec insert_syntax 'sp_logdevice',
'System Procedure',      1 ,
'sp_logdevice - Moves the transaction log of a database with log and data on'
go
exec insert_syntax 'sp_logdevice',
'System Procedure',      2 ,
'        the same device to a separate database device.'
go
exec insert_syntax 'sp_logdevice',
'System Procedure',      3 ,
'  sp_logdevice dbname, devname'
go
exec insert_syntax 'sp_loginconfig',
'System Procedure',      1 ,
'sp_loginconfig - Displays the value of one or all integrated security'
go
exec insert_syntax 'sp_loginconfig',
'System Procedure',      2 ,
'        parameters. Windows NT only.'
go
exec insert_syntax 'sp_loginconfig',
'System Procedure',      3 ,
'  sp_loginconfig ["parameter_name"]'
go
exec insert_syntax 'sp_logininfo',
'System Procedure',      1 ,
'sp_logininfo - Displays all roles granted to Windows NT users and groups with'
go
exec insert_syntax 'sp_logininfo',
'System Procedure',      2 ,
'        sp_grantlogin.'
go
exec insert_syntax 'sp_logininfo',
'System Procedure',      3 ,
'  sp_logininfo ["login_name" | "group_name"]'
go
exec insert_syntax 'sp_logiosize',
'System Procedure',      1 ,
'sp_logiosize - Changes the log I/O size used by Adaptive Server to a'
go
exec insert_syntax 'sp_logiosize',
'System Procedure',      2 ,
'        different memory pool when doing I/O for the transaction'
go
exec insert_syntax 'sp_logiosize',
'System Procedure',      3 ,
'        log of the current database.'
go
exec insert_syntax 'sp_logiosize',
'System Procedure',      4 ,
'  sp_logiosize ["default" | "size" | "all"]'
go
exec insert_syntax 'sp_modifystats',
'System Procedure',      1 ,
'sp_modifystats - Allows the SA to modify the statistics'
go
exec insert_syntax 'sp_modifystats',
'System Procedure',      2 ,
'        in sysstatistics.'
go
exec insert_syntax 'sp_modifystats',
'System Procedure',      3 ,
'  sp_modifystats [database].[owner][table_name],'
go
exec insert_syntax 'sp_modifystats',
'System Procedure',      4 ,
'     {column_name [, column_name] [,...]]},'
go
exec insert_syntax 'sp_modifystats',
'System Procedure',      5 ,
'     REMOVE_SKEW_FROM_DENSITY'
go
exec insert_syntax 'sp_modifystats',
'System Procedure',      6 ,
''
go
exec insert_syntax 'sp_modifystats',
'System Procedure',      7 ,
'       Or,'
go
exec insert_syntax 'sp_modifystats',
'System Procedure',      8 ,
' ' 
go
exec insert_syntax 'sp_modifystats',
'System Procedure',      9 ,
'  sp_modifystats [database].[owner][table_name],'
go
exec insert_syntax 'sp_modifystats',
'System Procedure',      10 ,
'     {column_name [, column_name] [,...]]},'
go
exec insert_syntax 'sp_modifystats',
'System Procedure',      11 ,
'     MODIFY_DENSITY,'
go
exec insert_syntax 'sp_modifystats',
'System Procedure',      12 ,
'     {range | total},'
go
exec insert_syntax 'sp_modifystats',
'System Procedure',      13 ,
'     {absolute | factor},'
go
exec insert_syntax 'sp_modifystats',
'System Procedure',      14 ,
'     "value"'
go
exec insert_syntax 'sp_modify_resource_limit',
'System Procedure',      1 ,
'sp_modify_resource_limit - Changes a resource limit by specifying a new limit'
go
exec insert_syntax 'sp_modify_resource_limit',
'System Procedure',      2 ,
'        value, or the action to take when the limit is exceeded, or both.'
go
exec insert_syntax 'sp_modify_resource_limit',
'System Procedure',      3 ,
'  sp_modify_resource_limit {name, appname }'
go
exec insert_syntax 'sp_modify_resource_limit',
'System Procedure',      4 ,
'     , rangename , limittype , limitvalue , enforced'
go
exec insert_syntax 'sp_modify_resource_limit',
'System Procedure',      5 ,
'     , action , scope'
go
exec insert_syntax 'sp_modify_time_range',
'System Procedure',      1 ,
'sp_modify_time_range - Changes the start day, start time, end day, and/or end'
go
exec insert_syntax 'sp_modify_time_range',
'System Procedure',      2 ,
'        time associated with a named time range.'
go
exec insert_syntax 'sp_modify_time_range',
'System Procedure',      3 ,
'  sp_modify_time_range name, startday, endday,'
go
exec insert_syntax 'sp_modify_time_range',
'System Procedure',      4 ,
'     starttime, endtime'
go
exec insert_syntax 'sp_modifylogin',
'System Procedure',      1 ,
'sp_modifylogin - Modifies the default database, default language, default'
go
exec insert_syntax 'sp_modifylogin',
'System Procedure',      2 ,
'        role activation, or full name for an Adaptive Server login account.'
go
exec insert_syntax 'sp_modifylogin',
'System Procedure',      3 ,
'  sp_modifylogin account, column, value'
go
exec insert_syntax 'sp_modifythreshold',
'System Procedure',      1 ,
'sp_modifythreshold - Modifies a threshold by associating it with a different'
go
exec insert_syntax 'sp_modifythreshold',
'System Procedure',      2 ,
'        threshold procedure, free-space level, or segment name. You cannot'
go
exec insert_syntax 'sp_modifythreshold',
'System Procedure',      3 ,
'        use sp_modifythreshold to change the amount of free space or the'
go
exec insert_syntax 'sp_modifythreshold',
'System Procedure',      4 ,
'        segment name for the last-chance threshold.'
go
exec insert_syntax 'sp_modifythreshold',
'System Procedure',      5 ,
'  sp_modifythreshold dbname, segname, free_space'
go
exec insert_syntax 'sp_modifythreshold',
'System Procedure',      6 ,
'     [, new_proc_name] [, new_free_space]'
go
exec insert_syntax 'sp_modifythreshold',
'System Procedure',      7 ,
'     [, new_segname]'
go
exec insert_syntax 'sp_monitor',
'System Procedure',      1 ,
'sp_monitor - Displays statistics about Adaptive Server.'
go
exec insert_syntax 'sp_monitor',
'System Procedure',      2 ,
'  sp_monitor'
go
exec insert_syntax 'sp_monitorconfig',
'System Procedure',      1 ,
'sp_monitorconfig - Displays cache usage statistics regarding metadata'
go
exec insert_syntax 'sp_monitorconfig',
'System Procedure',      2 ,
'        descriptors for indexes, objects, and databases.'
go
exec insert_syntax 'sp_monitorconfig',
'System Procedure',      3 ,
'        sp_monitorconfig also reports statistics on'
go
exec insert_syntax 'sp_monitorconfig',
'System Procedure',      4 ,
'        auxiliary scan descriptors used for'
go
exec insert_syntax 'sp_monitorconfig',
'System Procedure',      5 ,
'        referential integrity queries, and'
go
exec insert_syntax 'sp_monitorconfig',
'System Procedure',      6 ,
'        usage statistics for transaction descriptors and DTX participants.'
go
exec insert_syntax 'sp_monitorconfig',
'System Procedure',      7 ,
'  sp_monitorconfig "configname"'
go
exec insert_syntax 'sp_object_stats',
'System Procedure',      1 ,
'sp_object_stats - Prints lock contention, lock wait-time, and deadlock'
go
exec insert_syntax 'sp_object_stats',
'System Procedure',      2 ,
'        statistics for tables and indexes.'
go
exec insert_syntax 'sp_object_stats',
'System Procedure',      3 ,
'  sp_object_stats interval [, top_n'
go
exec insert_syntax 'sp_object_stats',
'System Procedure',      4 ,
'     [, dbname, objname [, rpt_option ]]]'
go
exec insert_syntax 'sp_passthru',
'System Procedure',      1 ,
'sp_passthru - Allows the user to pass a SQL command buffer to a remote server.'
go
exec insert_syntax 'sp_passthru',
'System Procedure',      2 ,
'  sp_passthru server, command, errcode, errmsg, rowcount'
go
exec insert_syntax 'sp_passthru',
'System Procedure',      3 ,
'      [, arg1, arg2, ... argn]'
go
exec insert_syntax 'sp_password',
'System Procedure',      1 ,
'sp_password - Adds or changes a password for an Adaptive Server login account.'
go
exec insert_syntax 'sp_password',
'System Procedure',      2 ,
'  sp_password caller_passwd, new_passwd [, loginame]'
go
exec insert_syntax 'sp_placeobject',
'System Procedure',      1 ,
'sp_placeobject - Puts future space allocations for a table or index on a'
go
exec insert_syntax 'sp_placeobject',
'System Procedure',      2 ,
'        particular segment.'
go
exec insert_syntax 'sp_placeobject',
'System Procedure',      3 ,
'  sp_placeobject segname, objname'
go
exec insert_syntax 'sp_plan_dbccdb',
'System Procedure',      1 ,
'sp_plan_dbccdb - Recommends suitable sizes for new dbccdb and dbccalt'
go
exec insert_syntax 'sp_plan_dbccdb',
'System Procedure',      2 ,
'        databases, lists suitable devices for dbccdb and dbccalt,'
go
exec insert_syntax 'sp_plan_dbccdb',
'System Procedure',      3 ,
'        and suggests a cache size and a suitable number of'
go
exec insert_syntax 'sp_plan_dbccdb',
'System Procedure',      4 ,
'        worker processes for the target database.'
go
exec insert_syntax 'sp_plan_dbccdb',
'System Procedure',      5 ,
'  sp_plan_dbccdb [dbname]'
go
exec insert_syntax 'sp_poolconfig',
'System Procedure',      1 ,
'sp_poolconfig - Creates, drops, resizes, and provides information about'
go
exec insert_syntax 'sp_poolconfig',
'System Procedure',      2 ,
'        memory pools within data caches.'
go
exec insert_syntax 'sp_poolconfig',
'System Procedure',      3 ,
'  To create a memory pool in an existing cache, or to change pool size:'
go
exec insert_syntax 'sp_poolconfig',
'System Procedure',      4 ,
'     sp_poolconfig cache_name [, "mem_size[P|K|M|G]",'
go
exec insert_syntax 'sp_poolconfig',
'System Procedure',      5 ,
'     "config_poolK" [, "affected_poolK"]]'
go
exec insert_syntax 'sp_poolconfig',
'System Procedure',      6 ,
'     To change a pool''s wash size:'
go
exec insert_syntax 'sp_poolconfig',
'System Procedure',      7 ,
'     sp_poolconfig cache_name, "io_size",'
go
exec insert_syntax 'sp_poolconfig',
'System Procedure',      8 ,
'     "wash=size[P|K|M|G]"'
go
exec insert_syntax 'sp_poolconfig',
'System Procedure',      9 ,
'     To change a pool''s asynchronous prefetch percentage:'
go
exec insert_syntax 'sp_poolconfig',
'System Procedure',      10,
'     sp_poolconfig cache_name, "io_size",'
go
exec insert_syntax 'sp_poolconfig',
'System Procedure',      11,
'     "local async prefetch limit=percent"'
go
exec insert_syntax 'sp_primarykey',
'System Procedure',      1 ,
'sp_primarykey - Defines a primary key on a table or view.'
go
exec insert_syntax 'sp_primarykey',
'System Procedure',      2 ,
'  sp_primarykey tabname, col1 [, col2, col3, ..., col8]'
go
exec insert_syntax 'sp_processmail',
'System Procedure',      1 ,
'sp_processmail - Reads, processes, sends, and deletes messages in the'
go
exec insert_syntax 'sp_processmail',
'System Procedure',      2 ,
'        Adaptive Server message inbox, using the xp_findnextmsg,'
go
exec insert_syntax 'sp_processmail',
'System Procedure',      3 ,
'        xp_readmail, xp_sendmail, and xp_deletemail system'
go
exec insert_syntax 'sp_processmail',
'System Procedure',      4 ,
'        extended stored procedures (ESPs).'
go
exec insert_syntax 'sp_processmail',
'System Procedure',      5 ,
'  sp_processmail [subject] [, originator [, dbuser'
go
exec insert_syntax 'sp_processmail',
'System Procedure',      6 ,
'     [, dbname [, filetype [, separator]]]]]'
go
exec insert_syntax 'sp_procqmode',
'System Procedure',      1 ,
'sp_procqmode - Displays the query processing mode of a stored procedure,'
go
exec insert_syntax 'sp_procqmode',
'System Procedure',      2 ,
'        view, or trigger.'
go
exec insert_syntax 'sp_procqmode',
'System Procedure',      3 ,
'  sp_procqmode [object_name [, detail]]'
go
exec insert_syntax 'sp_procxmode',
'System Procedure',      1 ,
'sp_procxmode - Displays or changes the transaction modes associated with'
go
exec insert_syntax 'sp_procxmode',
'System Procedure',      2 ,
'        stored procedures.'
go
exec insert_syntax 'sp_procxmode',
'System Procedure',      3 ,
'  sp_procxmode [procname [, tranmode]]'
go
exec insert_syntax 'sp_recompile',
'System Procedure',      1 ,
'sp_recompile - Causes each stored procedure and trigger that uses the named'
go
exec insert_syntax 'sp_recompile',
'System Procedure',      2 ,
'        table to be recompiled the next time it runs.'
go
exec insert_syntax 'sp_recompile',
'System Procedure',      3 ,
'  sp_recompile objname'
go
exec insert_syntax 'sp_remap',
'System Procedure',      1 ,
'sp_remap - Remaps a stored procedure, trigger, rule, default, or view from'
go
exec insert_syntax 'sp_remap',
'System Procedure',      2 ,
'        releases later than 4.8 and prior to 10.0 to be compatible with'
go
exec insert_syntax 'sp_remap',
'System Procedure',      3 ,
'        releases 10.0 and later. Use sp_remap on pre-existing objects'
go
exec insert_syntax 'sp_remap',
'System Procedure',      4 ,
'        that the upgrade procedure failed to remap.'
go
exec insert_syntax 'sp_remap',
'System Procedure',      5 ,
'  sp_remap objname'
go
exec insert_syntax 'sp_remoteoption',
'System Procedure',      1 ,
'sp_remoteoption - Displays or changes remote login options.'
go
exec insert_syntax 'sp_remoteoption',
'System Procedure',      2 ,
'  sp_remoteoption [remoteserver [, loginame'
go
exec insert_syntax 'sp_remoteoption',
'System Procedure',      3 ,
'     [, remotename [, optname [, optvalue]]]]]'
go
exec insert_syntax 'sp_remotesql',
'System Procedure',      1 ,
'sp_remotesql - Establishes a connection to a remote server, passes a query'
go
exec insert_syntax 'sp_remotesql',
'System Procedure',      2 ,
'        buffer to the remote server from the client, and relays the'
go
exec insert_syntax 'sp_remotesql',
'System Procedure',      3 ,
'        results back to the client.'
go
exec insert_syntax 'sp_remotesql',
'System Procedure',      4 ,
'  sp_remotesql server, query'
go
exec insert_syntax 'sp_remotesql',
'System Procedure',      5 ,
'     [, query2, ... , query254]'
go
exec insert_syntax 'sp_rename',
'System Procedure',      1 ,
'sp_rename - Changes the name of a user-created object or user-defined'
go
exec insert_syntax 'sp_rename',
'System Procedure',      2 ,
'        datatype in the current database.'
go
exec insert_syntax 'sp_rename',
'System Procedure',      3 ,
'  sp_rename objname, newname'
go
exec insert_syntax 'sp_rename_qpgroup',
'System Procedure',      1 ,
'sp_rename_qpgroup - Renames an abstract plan group.'
go
exec insert_syntax 'sp_rename_qpgroup',
'System Procedure',      2 ,
'  sp_rename_qpgroup old_name, new_name'
go
exec insert_syntax 'sp_renamedb',
'System Procedure',      1 ,
'sp_renamedb - Changes the name of a user database.'
go
exec insert_syntax 'sp_renamedb',
'System Procedure',      2 ,
'  sp_renamedb dbname, newname'
go
exec insert_syntax 'sp_reportstats',
'System Procedure',      1 ,
'sp_reportstats - Reports statistics on system usage.'
go
exec insert_syntax 'sp_reportstats',
'System Procedure',      2 ,
'  sp_reportstats [loginame]'
go
exec insert_syntax 'sp_revokelogin',
'System Procedure',      1 ,
'sp_revokelogin - Revokes Adaptive Server roles and default permissions from'
go
exec insert_syntax 'sp_revokelogin',
'System Procedure',      2 ,
'        Windows NT users and groups when Integrated Security mode or Mixed'
go
exec insert_syntax 'sp_revokelogin',
'System Procedure',      3 ,
'        mode (with Named Pipes) is active.'
go
exec insert_syntax 'sp_revokelogin',
'System Procedure',      4 ,
'  sp_revokelogin {login_name | group_name}'
go
exec insert_syntax 'sp_role',
'System Procedure',      1 ,
'sp_role - Grants or revokes roles to an Adaptive Server login account.'
go
exec insert_syntax 'sp_role',
'System Procedure',      2 ,
'  sp_role {"grant" | "revoke"}, rolename, loginame'
go
exec insert_syntax 'sp_sendmsg',
'System Procedure',      1 ,
'sp_sendmsg - Sends a message to a User Datagram Protocol (UDP) port.'
go
exec insert_syntax 'sp_sendmsg',
'System Procedure',      2 ,
'  sp_sendmsg ip_address, port_number, message'
go
exec insert_syntax 'sp_serveroption',
'System Procedure',      1 ,
'sp_serveroption - Displays or changes remote server options.'
go
exec insert_syntax 'sp_serveroption',
'System Procedure',      2 ,
'  sp_serveroption [server, optname, optvalue]'
go
exec insert_syntax 'sp_set_qplan',
'System Procedure',      1 ,
'sp_set_qplan - Changes the text of the abstract plan of an existing plan'
go
exec insert_syntax 'sp_set_qplan',
'System Procedure',      2 ,
'        without changing the associated query.'
go
exec insert_syntax 'sp_set_qplan',
'System Procedure',      3 ,
'  sp_set_qplan id, plan'
go
exec insert_syntax 'sp_setlangalias',
'System Procedure',      1 ,
'sp_setlangalias - Assigns or changes the alias for an alternate language.'
go
exec insert_syntax 'sp_setlangalias',
'System Procedure',      2 ,
'  sp_setlangalias language, alias'
go
exec insert_syntax 'sp_setpglockpromote',
'System Procedure',      1 ,
'sp_setpglockpromote - Sets or changes the lock promotion thresholds for a'
go
exec insert_syntax 'sp_setpglockpromote',
'System Procedure',      2 ,
'        database, for a table, or for Adaptive Server.'
go
exec insert_syntax 'sp_setpglockpromote',
'System Procedure',      3 ,
'  sp_setpglockpromote {"database" | "table"}, objname,'
go
exec insert_syntax 'sp_setpglockpromote',
'System Procedure',      4 ,
'     new_lwm, new_hwm, new_pct'
go
exec insert_syntax 'sp_setpglockpromote',
'System Procedure',      5 ,
'     sp_setpglockpromote server, NULL, new_lwm, new_hwm,'
go
exec insert_syntax 'sp_setpglockpromote',
'System Procedure',      6 ,
'     new_pct'
go
exec insert_syntax 'sp_setpsexe',
'System Procedure',      1 ,
'sp_setpsexe - Sets custom execution attributes for a session while the'
go
exec insert_syntax 'sp_setpsexe',
'System Procedure',      2 ,
'        session is active.'
go
exec insert_syntax 'sp_setpsexe',
'System Procedure',      3 ,
'  sp_setpsexe spid, exeattr, value'
go
exec insert_syntax 'sp_setrowlockpromote',
'System Procedure',      1 ,
'sp_setrowlockpromote - Sets or changes row-lock promotion thresholds for a'
go
exec insert_syntax 'sp_setrowlockpromote',
'System Procedure',      2 ,
'        datarows-locked table, for all datarows-locked tables in a'
go
exec insert_syntax 'sp_setrowlockpromote',
'System Procedure',      3 ,
'        database, or for all datarows- locked tables on a server.'
go
exec insert_syntax 'sp_setrowlockpromote',
'System Procedure',      4 ,
'  sp_setrowlockpromote "server", NULL, new_lwm,'
go
exec insert_syntax 'sp_setrowlockpromote',
'System Procedure',      5 ,
'     new_hwm, new_pct'
go
exec insert_syntax 'sp_setrowlockpromote',
'System Procedure',      6 ,
'     sp_setrowlockpromote {"database" | "table"}, objname,'
go
exec insert_syntax 'sp_setrowlockpromote',
'System Procedure',      7 ,
'     new_lwm, new_hwm, new_pct'
go
exec insert_syntax 'sp_setsuspect_granularity',
'System Procedure',      1 ,
'sp_setsuspect_granularity - Displays or sets the recovery fault isolation'
go
exec insert_syntax 'sp_setsuspect_granularity',
'System Procedure',      2 ,
'        mode for a user database, which governs how recovery behaves'
go
exec insert_syntax 'sp_setsuspect_granularity',
'System Procedure',      3 ,
'        when it detects data corruption.'
go
exec insert_syntax 'sp_setsuspect_granularity',
'System Procedure',      4 ,
'  sp_setsuspect_granularity [dbname'
go
exec insert_syntax 'sp_setsuspect_granularity',
'System Procedure',      5 ,
'     [, "database" | "page" [, "read_only"]]]'
go
exec insert_syntax 'sp_setsuspect_threshold',
'System Procedure',      1 ,
'sp_setsuspect_threshold - Displays or sets the maximum number of suspect'
go
exec insert_syntax 'sp_setsuspect_threshold',
'System Procedure',      2 ,
'        pages that Adaptive Server allows in a database before marking'
go
exec insert_syntax 'sp_setsuspect_threshold',
'System Procedure',      3 ,
'        the entire database suspect.'
go
exec insert_syntax 'sp_setsuspect_threshold',
'System Procedure',      4 ,
'  sp_setsuspect_threshold [dbname [, threshold]]'
go
exec insert_syntax 'sp_showcontrolinfo',
'System Procedure',      1 ,
'sp_showcontrolinfo - Displays information about engine group assignments,'
go
exec insert_syntax 'sp_showcontrolinfo',
'System Procedure',      2 ,
'        bound client applications, logins, and stored procedures.'
go
exec insert_syntax 'sp_showcontrolinfo',
'System Procedure',      3 ,
'  sp_showcontrolinfo [object_type, object_name, spid]'
go
exec insert_syntax 'sp_showexeclass',
'System Procedure',      1 ,
'sp_showexeclass - Displays the execution class attributes and the engines in'
go
exec insert_syntax 'sp_showexeclass',
'System Procedure',      2 ,
'        any engine group associated with the specified execution class.'
go
exec insert_syntax 'sp_showexeclass',
'System Procedure',      3 ,
'  sp_showexeclass [execlassname]'
go
exec insert_syntax 'sp_showplan',
'System Procedure',      1 ,
'sp_showplan - Displays the showplan output for any user connection for the'
go
exec insert_syntax 'sp_showplan',
'System Procedure',      2 ,
'        current SQL statement or for a previous statement in the same batch.'
go
exec insert_syntax 'sp_showplan',
'System Procedure',      3 ,
'  sp_showplan spid, batch_id output, context_id output,'
go
exec insert_syntax 'sp_showplan',
'System Procedure',      4 ,
'     stmt_num output'
go
exec insert_syntax 'sp_showplan',
'System Procedure',      5 ,
'     To display the showplan output for the current SQL statement'
go
exec insert_syntax 'sp_showplan',
'System Procedure',      6 ,
'     without specifying the batch_id, context_id, or stmt_num:'
go
exec insert_syntax 'sp_showplan',
'System Procedure',      7 ,
'     sp_showplan spid, null, null, null'
go
exec insert_syntax 'sp_showpsexe',
'System Procedure',      1 ,
'sp_showpsexe - Displays execution class, current priority, and affinity for'
go
exec insert_syntax 'sp_showpsexe',
'System Procedure',      2 ,
'        all client sessions running on Adaptive Server.'
go
exec insert_syntax 'sp_showpsexe',
'System Procedure',      3 ,
'  sp_showpsexe [spid]'
go
exec insert_syntax 'sp_spaceused',
'System Procedure',      1 ,
'sp_spaceused - Displays estimates of the number of rows, the number of data'
go
exec insert_syntax 'sp_spaceused',
'System Procedure',      2 ,
'        pages, the size of indexes, and the space used by a specified'
go
exec insert_syntax 'sp_spaceused',
'System Procedure',      3 ,
'        table or by all tables in the current database.'
go
exec insert_syntax 'sp_spaceused',
'System Procedure',      4 ,
'  sp_spaceused [objname [,1] ]'
go
exec insert_syntax 'sp_sysmon',
'System Procedure',      1 ,
'sp_sysmon - Displays performance information.'
go
exec insert_syntax 'sp_sysmon',
'System Procedure',      2 ,
'  sp_sysmon begin_sample'
go
exec insert_syntax 'sp_sysmon',
'System Procedure',      3 ,
'     sp_sysmon { end_sample | interval }'
go
exec insert_syntax 'sp_sysmon',
'System Procedure',      4 ,
'     [, section [, applmon] ]'
go
exec insert_syntax 'sp_sysmon',
'System Procedure',      5 ,
'     sp_sysmon { end_sample | interval } [, applmon ]'
go
exec insert_syntax 'sp_thresholdaction',
'System Procedure',      1 ,
'sp_thresholdaction - Executes automatically when the number of free pages on'
go
exec insert_syntax 'sp_thresholdaction',
'System Procedure',      2 ,
'        the log segment falls below the last-chance threshold, unless the'
go
exec insert_syntax 'sp_thresholdaction',
'System Procedure',      3 ,
'        threshold is associated with a different procedure. Sybase does'
go
exec insert_syntax 'sp_thresholdaction',
'System Procedure',      4 ,
'        not provide this procedure.'
go
exec insert_syntax 'sp_thresholdaction',
'System Procedure',      5 ,
'  When a threshold is crossed, Adaptive Server passes the following'
go
exec insert_syntax 'sp_thresholdaction',
'System Procedure',      6 ,
'     parameters to the threshold procedure by position:'
go
exec insert_syntax 'sp_thresholdaction',
'System Procedure',      7 ,
'     sp_thresholdaction @dbname,'
go
exec insert_syntax 'sp_thresholdaction',
'System Procedure',      8 ,
'             @segment_name,'
go
exec insert_syntax 'sp_thresholdaction',
'System Procedure',      9 ,
'             @space_left,'
go
exec insert_syntax 'sp_thresholdaction',
'System Procedure',      10,
'             @status'
go
exec insert_syntax 'sp_transactions',
'System Procedure',      1 ,
'sp_transactions - Reports information about active transactions.'
go
exec insert_syntax 'sp_transactions',
'System Procedure',      2 ,
'  sp_tranactions ["xid", xid_value] |'
go
exec insert_syntax 'sp_transactions',
'System Procedure',      3 ,
'     ["state", {"heuristic_commit" | "heuristic_abort"'
go
exec insert_syntax 'sp_transactions',
'System Procedure',      4 ,
'     | "prepared" | "indoubt"} [, "xactname"]] |'
go
exec insert_syntax 'sp_transactions',
'System Procedure',      5 ,
'     ["gtrid", gtrid_value]'
go
exec insert_syntax 'sp_unbindcache',
'System Procedure',      1 ,
'sp_unbindcache - Unbinds a database, table, index, text object, or image'
go
exec insert_syntax 'sp_unbindcache',
'System Procedure',      2 ,
'        object from a data cache.'
go
exec insert_syntax 'sp_unbindcache',
'System Procedure',      3 ,
'  sp_unbindcache dbname [,[owner.]tablename'
go
exec insert_syntax 'sp_unbindcache',
'System Procedure',      4 ,
'     [, indexname | "text only"]]'
go
exec insert_syntax 'sp_unbindcache_all',
'System Procedure',      1 ,
'sp_unbindcache_all - Unbinds all objects that are bound to a cache.'
go
exec insert_syntax 'sp_unbindcache_all',
'System Procedure',      2 ,
'  sp_unbindcache_all cache_name'
go
exec insert_syntax 'sp_unbindefault',
'System Procedure',      1 ,
'sp_unbindefault - Unbinds a created default value from a column or from a'
go
exec insert_syntax 'sp_unbindefault',
'System Procedure',      2 ,
'        user-defined datatype.'
go
exec insert_syntax 'sp_unbindefault',
'System Procedure',      3 ,
'  sp_unbindefault objname [, futureonly]'
go
exec insert_syntax 'sp_unbindexeclass',
'System Procedure',      1 ,
'sp_unbindexeclass - Removes the execution class attribute previously'
go
exec insert_syntax 'sp_unbindexeclass',
'System Procedure',      2 ,
'        associated with an client application, login, or stored'
go
exec insert_syntax 'sp_unbindexeclass',
'System Procedure',      3 ,
'        procedure for the specified scope.'
go
exec insert_syntax 'sp_unbindexeclass',
'System Procedure',      4 ,
'  sp_unbindexeclass object_name, object_type, scope'
go
exec insert_syntax 'sp_unbindmsg',
'System Procedure',      1 ,
'sp_unbindmsg - Unbinds a user-defined message from a constraint.'
go
exec insert_syntax 'sp_unbindmsg',
'System Procedure',      2 ,
'  sp_unbindmsg constrname'
go
exec insert_syntax 'sp_unbindrule',
'System Procedure',      1 ,
'sp_unbindrule - Unbinds a rule from a column or from a user-defined datatype.'
go
exec insert_syntax 'sp_unbindrule',
'System Procedure',      2 ,
'  sp_unbindrule objname [, futureonly]'
go
exec insert_syntax 'sp_volchanged',
'System Procedure',      1 ,
'sp_volchanged - Notifies the Backup Server that the operator performed the'
go
exec insert_syntax 'sp_volchanged',
'System Procedure',      2 ,
'        requested volume handling during a dump or load.'
go
exec insert_syntax 'sp_volchanged',
'System Procedure',      3 ,
'  sp_volchanged session_id, devname, action'
go
exec insert_syntax 'sp_volchanged',
'System Procedure',      4 ,
'     [, fname [, vname]]'
go
exec insert_syntax 'sp_who',
'System Procedure',      1 ,
'sp_who - Reports information about all current Adaptive Server users and'
go
exec insert_syntax 'sp_who',
'System Procedure',      2 ,
'        processes or about a particular user or process.'
go
exec insert_syntax 'sp_who',
'System Procedure',      3 ,
'  sp_who [loginame | "spid"]'
go
exec insert_syntax ' ',
'Transact-SQL',          1 ,
' '
go
exec insert_syntax ' ',
'Transact-SQL',          2 ,
' '
go
exec insert_syntax ' ',
'Transact-SQL',          3 ,
' '
go
exec insert_syntax ' ',
'Transact-SQL',          4 ,
' '
go
exec insert_syntax ' ',
'Transact-SQL',          5 ,
' '
go
exec insert_syntax ' ',
'Transact-SQL',          6 ,
' '
go
exec insert_syntax ' ',
'Transact-SQL',          7 ,
' '
go
exec insert_syntax ' ',
'Transact-SQL',          8 ,
' '
go
exec insert_syntax ' ',
'Transact-SQL',          9 ,
' '
go
exec insert_syntax ' ',
'Transact-SQL',          10,
' '
go
exec insert_syntax ' ',
'Transact-SQL',          11,
' '
go
exec insert_syntax ' ',
'Transact-SQL',          12,
' '
go
exec insert_syntax ' ',
'Transact-SQL',          13,
' '
go
exec insert_syntax ' ',
'Transact-SQL',          14,
' '
go
exec insert_syntax ' ',
'Transact-SQL',          15,
' '
go
exec insert_syntax ' ',
'Transact-SQL',          16,
' '
go
exec insert_syntax ' ',
'Transact-SQL',          17,
' '
go
exec insert_syntax ' ',
'Transact-SQL',          18,
' '
go
exec insert_syntax 'abs',
'Transact-SQL',          1 ,
'abs - Returns the absolute value of an expression.'
go
exec insert_syntax 'abs',
'Transact-SQL',          2 ,
'  abs(numeric_expression)'
go
exec insert_syntax 'acos',
'Transact-SQL',          1 ,
'acos - Returns the angle (in radians) whose cosine is specified.'
go
exec insert_syntax 'acos',
'Transact-SQL',          2 ,
'  acos(cosine)'
go
exec insert_syntax 'alter database',
'Transact-SQL',          1 ,
'alter database - Increases the amount of space allocated to a database.'
go
exec insert_syntax 'alter database',
'Transact-SQL',          2 ,
'  alter database database_name'
go
exec insert_syntax 'alter database',
'Transact-SQL',          3 ,
'     [on {default | database_device } [= size]'
go
exec insert_syntax 'alter database',
'Transact-SQL',          4 ,
'         [, database_device [= size]]...]'
go
exec insert_syntax 'alter database',
'Transact-SQL',          5 ,
'     [log on { default | database_device } [ = size ]'
go
exec insert_syntax 'alter database',
'Transact-SQL',          6 ,
'         [ , database_device [= size]]...]'
go
exec insert_syntax 'alter database',
'Transact-SQL',          7 ,
'     [with override]'
go
exec insert_syntax 'alter database',
'Transact-SQL',          8 ,
'     [for load]'
go
exec insert_syntax 'alter database',
'Transact-SQL',          9 ,
'     [for proxy_update]'
go
exec insert_syntax 'alter role',
'Transact-SQL',          1 ,
'alter role - Defines mutually exclusive relationships between roles; adds,'
go
exec insert_syntax 'alter role',
'Transact-SQL',          2 ,
'        drops, and changes passwords for roles; specifies the password'
go
exec insert_syntax 'alter role',
'Transact-SQL',          3 ,
'        expiration interval, the minimum password length, and the'
go
exec insert_syntax 'alter role',
'Transact-SQL',          4 ,
'        maximum number of failed logins allowed for a specified role'
go
exec insert_syntax 'alter role',
'Transact-SQL',          5 ,
'  alter role role1 { add | drop } exclusive {'
go
exec insert_syntax 'alter role',
'Transact-SQL',          6 ,
'     membership | activation } role2'
go
exec insert_syntax 'alter role',
'Transact-SQL',          7 ,
'     alter role role_name [add passwd "password" |'
go
exec insert_syntax 'alter role',
'Transact-SQL',          8 ,
'     drop passwd] [lock | unlock]'
go
exec insert_syntax 'alter role',
'Transact-SQL',          9 ,
'     alter role { role_name | "all overrides" }'
go
exec insert_syntax 'alter role',
'Transact-SQL',          10,
'     set { passwd expiration | min passwd length |'
go
exec insert_syntax 'alter role',
'Transact-SQL',          11,
'     max failed_logins } option_value'
go
exec insert_syntax 'alter table',
'Transact-SQL',          1 ,
'alter table - Adds new columns to a table; drops or modifies existing'
go
exec insert_syntax 'alter table',
'Transact-SQL',          2 ,
'        columns; adds, changes, or drops constraints; changes'
go
exec insert_syntax 'alter table',
'Transact-SQL',          3 ,
'        properties of an existing table; enables or disables'
go
exec insert_syntax 'alter table',
'Transact-SQL',          4 ,
'        triggers on a table.'
go
exec insert_syntax 'alter table',
'Transact-SQL',          5 ,
'  alter table [[database.][owner].table_name'
go
exec insert_syntax 'alter table',
'Transact-SQL',          6 ,
'     { add column_name datatype'
go
exec insert_syntax 'alter table',
'Transact-SQL',          7 ,
'         [default {constant_expression | user | null}]'
go
exec insert_syntax 'alter table',
'Transact-SQL',          8 ,
'         {identity | null | not null}'
go
exec insert_syntax 'alter table',
'Transact-SQL',          9 ,
'             [off row | in row]'
go
exec insert_syntax 'alter table',
'Transact-SQL',          10,
'         [ [constraint constraint_name]'
go
exec insert_syntax 'alter table',
'Transact-SQL',          11,
'           { { unique | primary key }'
go
exec insert_syntax 'alter table',
'Transact-SQL',          12,
'               [clustered | nonclustered] [asc | desc]'
go
exec insert_syntax 'alter table',
'Transact-SQL',          13,
'               [with { fillfactor = pct,'
go
exec insert_syntax 'alter table',
'Transact-SQL',          14,
'                       max_rows_per_page = num_rows,'
go
exec insert_syntax 'alter table',
'Transact-SQL',          15,
'                       reservepagegap = num_pages }]'
go
exec insert_syntax 'alter table',
'Transact-SQL',          16,
'               [on segment_name]'
go
exec insert_syntax 'alter table',
'Transact-SQL',          17,
'             | references [[database.]owner.]ref_table'
go
exec insert_syntax 'alter table',
'Transact-SQL',          18,
'                [(ref_column)]'
go
exec insert_syntax 'alter table',
'Transact-SQL',          19,
'             | check (search_condition) ] ... }'
go
exec insert_syntax 'alter table',
'Transact-SQL',          20,
'          [, next_column]...'
go
exec insert_syntax 'alter table',
'Transact-SQL',          21,
'     | add {[constraint constraint_name]'
go
exec insert_syntax 'alter table',
'Transact-SQL',          22,
'       {  unique | primary key}'
go
exec insert_syntax 'alter table',
'Transact-SQL',          23,
'             [clustered | nonclustered]'
go
exec insert_syntax 'alter table',
'Transact-SQL',          24,
'             (column_name [asc | desc]'
go
exec insert_syntax 'alter table',
'Transact-SQL',          25,
'                [, column_name [asc | desc]...])'
go
exec insert_syntax 'alter table',
'Transact-SQL',          26,
'             [with { fillfactor = pct,'
go
exec insert_syntax 'alter table',
'Transact-SQL',          27,
'                     max_rows_per_page = num_rows,'
go
exec insert_syntax 'alter table',
'Transact-SQL',          28,
'                     reservepagegap = num_pages}]'
go
exec insert_syntax 'alter table',
'Transact-SQL',          29,
'             [on segment_name]'
go
exec insert_syntax 'alter table',
'Transact-SQL',          30,
'        | foreign key (column_name [{, column_name}...])'
go
exec insert_syntax 'alter table',
'Transact-SQL',          31,
'            references [[database.]owner.]ref_table'
go
exec insert_syntax 'alter table',
'Transact-SQL',          32,
'              [(ref_column [{, ref_column}...])]'
go
exec insert_syntax 'alter table',
'Transact-SQL',          33,
'        | check (search_condition)}'
go
exec insert_syntax 'alter table',
'Transact-SQL',          34,
'     | drop {column_name [, column_name]...'
go
exec insert_syntax 'alter table',
'Transact-SQL',          35,
'                 | constraint constraint_name }'
go
exec insert_syntax 'alter table',
'Transact-SQL',          36,
'     | modify column_name datatype [null | not null]'
go
exec insert_syntax 'alter table',
'Transact-SQL',          37,
'              [, next_column]...'
go
exec insert_syntax 'alter table',
'Transact-SQL',          38,
'     | replace column_name'
go
exec insert_syntax 'alter table',
'Transact-SQL',          39,
'         default { constant_expression | user | null}'
go
exec insert_syntax 'alter table',
'Transact-SQL',          40,
'     | partition number_of_partitions'
go
exec insert_syntax 'alter table',
'Transact-SQL',          41,
'     | unpartition'
go
exec insert_syntax 'alter table',
'Transact-SQL',          42,
'     | { enable | disable } trigger'
go
exec insert_syntax 'alter table',
'Transact-SQL',          43,
'     | lock {allpages | datarows | datapages } }'
go
exec insert_syntax 'alter table',
'Transact-SQL',          44,
'     | with exp_row_size=num_bytes'
go
exec insert_syntax 'ascii',
'Transact-SQL',          1 ,
'ascii - Returns the ASCII code for the first character in an expression.'
go
exec insert_syntax 'ascii',
'Transact-SQL',          2 ,
'  ascii(char_expr|uchar_expr)'
go
exec insert_syntax 'asin',
'Transact-SQL',          1 ,
'asin - Returns the angle (in radians) whose sine is specified.'
go
exec insert_syntax 'asin',
'Transact-SQL',          2 ,
'  asin(sine)'
go
exec insert_syntax 'atan',
'Transact-SQL',          1 ,
'atan - Returns the angle (in radians) whose tangent is specified.'
go
exec insert_syntax 'atan',
'Transact-SQL',          2 ,
'  atan(tangent)'
go
exec insert_syntax 'atn2',
'Transact-SQL',          1 ,
'atn2 - Returns the angle (in radians) whose sine and cosine are specified.'
go
exec insert_syntax 'atn2',
'Transact-SQL',          2 ,
'  atn2(sine, cosine)'
go
exec insert_syntax 'avg',
'Transact-SQL',          1 ,
'avg - Returns the numeric average of all (distinct) values.'
go
exec insert_syntax 'avg',
'Transact-SQL',          2 ,
'  avg([all | distinct] expression)'
go
exec insert_syntax 'begin transaction',
'Transact-SQL',          1 ,
'begin transaction - Marks the starting point of a user-defined transaction.'
go
exec insert_syntax 'begin transaction',
'Transact-SQL',          2 ,
'  begin tran[saction] [transaction_name]'
go
exec insert_syntax 'begin...end',
'Transact-SQL',          1 ,
'begin...end - Encloses a series of SQL statements so that control-of-flow'
go
exec insert_syntax 'begin...end',
'Transact-SQL',          2 ,
'        language, such as if...else, can affect the performance of the'
go
exec insert_syntax 'begin...end',
'Transact-SQL',          3 ,
'        whole group.'
go
exec insert_syntax 'begin...end',
'Transact-SQL',          4 ,
'     begin'
go
exec insert_syntax 'begin...end',
'Transact-SQL',          5 ,
'        statement block'
go
exec insert_syntax 'begin...end',
'Transact-SQL',          6 ,
'     end'
go
exec insert_syntax 'break',
'Transact-SQL',          1 ,
'break - Causes an exit from a while loop. break is often activated by an if'
go
exec insert_syntax 'break',
'Transact-SQL',          2 ,
'        test.'
go
exec insert_syntax 'break',
'Transact-SQL',          3 ,
'  while logical_expression'
go
exec insert_syntax 'break',
'Transact-SQL',          4 ,
'         statement'
go
exec insert_syntax 'break',
'Transact-SQL',          5 ,
'     break'
go
exec insert_syntax 'break',
'Transact-SQL',          6 ,
'         statement'
go
exec insert_syntax 'break',
'Transact-SQL',          7 ,
'     continue'
go
exec insert_syntax 'case',
'Transact-SQL',          1 ,
'case - Supports conditional SQL expressions; can be used anywhere a value'
go
exec insert_syntax 'case',
'Transact-SQL',          2 ,
'        expression can be used.'
go
exec insert_syntax 'case',
'Transact-SQL',          3 ,
'     case'
go
exec insert_syntax 'case',
'Transact-SQL',          4 ,
'             when search_condition then expression'
go
exec insert_syntax 'case',
'Transact-SQL',          5 ,
'             [when search_condition then expression]...'
go
exec insert_syntax 'case',
'Transact-SQL',          6 ,
'             [else expression]'
go
exec insert_syntax 'case',
'Transact-SQL',          7 ,
'     end'
go
exec insert_syntax 'case',
'Transact-SQL',          8 ,
'     case and values syntax:'
go
exec insert_syntax 'case',
'Transact-SQL',          9 ,
'        case expression'
go
exec insert_syntax 'case',
'Transact-SQL',          10,
'             when expression then expression'
go
exec insert_syntax 'case',
'Transact-SQL',          11,
'             [when expression then expression]...'
go
exec insert_syntax 'case',
'Transact-SQL',          12,
'             [else expression]'
go
exec insert_syntax 'case',
'Transact-SQL',          13,
'     end'
go
exec insert_syntax 'ceiling',
'Transact-SQL',          1 ,
'ceiling - Returns the smallest integer greater than or equal to the'
go
exec insert_syntax 'ceiling',
'Transact-SQL',          2 ,
'        specified value.'
go
exec insert_syntax 'ceiling',
'Transact-SQL',          3 ,
'  ceiling(value)'
go
exec insert_syntax 'char',
'Transact-SQL',          1 ,
'char - Returns the character equivalent of an integer.'
go
exec insert_syntax 'char',
'Transact-SQL',          2 ,
'  char(integer_expr)'
go
exec insert_syntax 'char_length',
'Transact-SQL',          1 ,
'char_length - Returns the number of characters in an expression.'
go
exec insert_syntax 'char_length',
'Transact-SQL',          2 ,
'  char_length(char_expr|uchar_expr)'
go
exec insert_syntax 'charindex',
'Transact-SQL',          1 ,
'charindex - Returns an integer representing the starting position of an'
go
exec insert_syntax 'charindex',
'Transact-SQL',          2 ,
'        expression.'
go
exec insert_syntax 'charindex',
'Transact-SQL',          3 ,
'  charindex(expression1, expression2)'
go
exec insert_syntax 'checkpoint',
'Transact-SQL',          1 ,
'checkpoint - Writes all dirty pages (pages that have been updated since they'
go
exec insert_syntax 'checkpoint',
'Transact-SQL',          2 ,
'        were last written) to the database device.'
go
exec insert_syntax 'checkpoint',
'Transact-SQL',          3 ,
'  checkpoint'
go
exec insert_syntax 'close',
'Transact-SQL',          1 ,
'close - Deactivates a cursor.'
go
exec insert_syntax 'close',
'Transact-SQL',          2 ,
'  close cursor_name'
go
exec insert_syntax 'coalesce',
'Transact-SQL',          1 ,
'coalesce - Supports conditional SQL expressions; can be used anywhere a'
go
exec insert_syntax 'coalesce',
'Transact-SQL',          2 ,
'        value expression can be used; alternative for a case expression.'
go
exec insert_syntax 'coalesce',
'Transact-SQL',          3 ,
'  coalesce(expression, expression [, expression]...)'
go
exec insert_syntax 'col_length',
'Transact-SQL',          1 ,
'col_length - Returns the defined length of a column.'
go
exec insert_syntax 'col_length',
'Transact-SQL',          2 ,
'  col_length(object_name, column_name)'
go
exec insert_syntax 'col_name',
'Transact-SQL',          1 ,
'col_name - Returns the name of the column whose table and column IDs are'
go
exec insert_syntax 'col_name',
'Transact-SQL',          2 ,
'        specified.'
go
exec insert_syntax 'col_name',
'Transact-SQL',          3 ,
'  col_name(object_id, column_id[, database_id])'
go
exec insert_syntax 'commit',
'Transact-SQL',          1 ,
'commit - Marks the ending point of a user-defined transaction.'
go
exec insert_syntax 'commit',
'Transact-SQL',          2 ,
'  commit [tran | transaction | work] [transaction_name]'
go
exec insert_syntax 'compare',
'Transact-SQL',          1 ,
'compare - Allows you to directly compare two character strings based on'
go
exec insert_syntax 'compare',
'Transact-SQL',          2 ,
'        alternate collation rules'
go
exec insert_syntax 'compare',
'Transact-SQL',          3 ,
'  compare (char_expression1|uchar_expression1),'
go
exec insert_syntax 'compare',
'Transact-SQL',          4 ,
'     (char_expression2|uchar_expression2)'
go
exec insert_syntax 'compare',
'Transact-SQL',          5 ,
'     [,{collation_name | collation_ID}]'
go
exec insert_syntax 'compute Clause',
'Transact-SQL',          1 ,
'compute Clause - Generates summary values that appear as additional rows in'
go
exec insert_syntax 'compute Clause',
'Transact-SQL',          2 ,
'        the query results.'
go
exec insert_syntax 'compute Clause',
'Transact-SQL',          3 ,
'  start_of_select_statement'
go
exec insert_syntax 'compute Clause',
'Transact-SQL',          4 ,
'     compute row_aggregate (column_name)'
go
exec insert_syntax 'compute Clause',
'Transact-SQL',          5 ,
'         [, row_aggregate(column_name)]...'
go
exec insert_syntax 'compute Clause',
'Transact-SQL',          6 ,
'     [by column_name [, column_name]...]'
go
exec insert_syntax 'connect to...disconnect',
'Transact-SQL',          1 ,
'connect to...disconnect - Connects to the specified server and disconnects'
go
exec insert_syntax 'connect to...disconnect',
'Transact-SQL',          2 ,
'        the connected server.'
go
exec insert_syntax 'connect to...disconnect',
'Transact-SQL',          3 ,
'  connect to server_name'
go
exec insert_syntax 'connect to...disconnect',
'Transact-SQL',          4 ,
'     disconnect'
go
exec insert_syntax 'continue',
'Transact-SQL',          1 ,
'continue - Restarts the while loop. continue is often activated by an if'
go
exec insert_syntax 'continue',
'Transact-SQL',          2 ,
'        test.'
go
exec insert_syntax 'continue',
'Transact-SQL',          3 ,
'  while boolean_expression'
go
exec insert_syntax 'continue',
'Transact-SQL',          4 ,
'         statement'
go
exec insert_syntax 'continue',
'Transact-SQL',          5 ,
'     break'
go
exec insert_syntax 'continue',
'Transact-SQL',          6 ,
'         statement'
go
exec insert_syntax 'continue',
'Transact-SQL',          7 ,
'     continue'
go
exec insert_syntax 'convert',
'Transact-SQL',          1 ,
'convert - Returns the specified value, converted to another datatype or a'
go
exec insert_syntax 'convert',
'Transact-SQL',          2 ,
'        different datetime display format.'
go
exec insert_syntax 'convert',
'Transact-SQL',          3 ,
'  convert (datatype [(length) | (precision[, scale])]'
go
exec insert_syntax 'convert',
'Transact-SQL',          4 ,
'     [null | not null], expression [, style])'
go
exec insert_syntax 'cos',
'Transact-SQL',          1 ,
'cos - Returns the cosine of the specified angle.'
go
exec insert_syntax 'cos',
'Transact-SQL',          2 ,
'  cos(angle)'
go
exec insert_syntax 'cot',
'Transact-SQL',          1 ,
'cot - Returns the cotangent of the specified angle.'
go
exec insert_syntax 'cot',
'Transact-SQL',          2 ,
'  cot(angle)'
go
exec insert_syntax 'count',
'Transact-SQL',          1 ,
'count - Returns the number of (distinct) non-null values or the number of'
go
exec insert_syntax 'count',
'Transact-SQL',          2 ,
'        selected rows.'
go
exec insert_syntax 'count',
'Transact-SQL',          3 ,
'  count([all | distinct] expression)'
go
exec insert_syntax 'create database',
'Transact-SQL',          1 ,
'create database - Creates a new database.'
go
exec insert_syntax 'create database',
'Transact-SQL',          2 ,
'  create database database_name'
go
exec insert_syntax 'create database',
'Transact-SQL',          3 ,
'     [on {default | database_device} [= size]'
go
exec insert_syntax 'create database',
'Transact-SQL',          4 ,
'         [, database_device [= size]]...]'
go
exec insert_syntax 'create database',
'Transact-SQL',          5 ,
'     [log on database_device [= size]'
go
exec insert_syntax 'create database',
'Transact-SQL',          6 ,
'         [, database_device [= size]]...]'
go
exec insert_syntax 'create database',
'Transact-SQL',          7 ,
'     [with {override | default_location = "pathname"}]'
go
exec insert_syntax 'create database',
'Transact-SQL',          8 ,
'     [for {load | proxy_update}]'
go
exec insert_syntax 'create function',
'Transact-SQL',          1 ,
'create function - Creates a user-defined function by adding a SQL wrapper'
go
exec insert_syntax 'create function',
'Transact-SQL',          2 ,
'        to a Java method.'
go
exec insert_syntax 'create function',
'Transact-SQL',          3 ,
'        ([sql_parameter_name sql_datatype [(Length)] | (precision [scale])]'
go
exec insert_syntax 'create function',
'Transact-SQL',          4 ,
'        ([, sql_parameter_name sql_datatype [(length) | (precision [, scale])])'
go
exec insert_syntax 'create function',
'Transact-SQL',          5 ,
'        returns sql_datatype'
go
exec insert_syntax 'create function',
'Transact-SQL',          6 ,
'        [(length)] | (precision [scale])]'
go
exec insert_syntax 'create function',
'Transact-SQL',          7 ,
'        modifies sql_datatype'
go
exec insert_syntax 'create function',
'Transact-SQL',          8 ,
'        returns null on null input'
go
exec insert_syntax 'create function',
'Transact-SQL',          9 ,
'        called on null input'
go
exec insert_syntax 'create function',
'Transact-SQL',          10 ,
'        [deterministic | not deterministic]'
go
exec insert_syntax 'create function',
'Transact-SQL',          11 ,
'        [exportable]'
go
exec insert_syntax 'create function',
'Transact-SQL',          12 ,
'        language java'
go
exec insert_syntax 'create function',
'Transact-SQL',          13 ,
'        parameter style java'
go
exec insert_syntax 'create function',
'Transact-SQL',          14 ,
'        external name java_method_name'
go
exec insert_syntax 'create function',
'Transact-SQL',          15 ,
'        [([java_datatype [, java_datatype...]])]'
go
exec insert_syntax 'create default',
'Transact-SQL',          1 ,
'create default - Specifies a value to insert in a column (or in all columns'
go
exec insert_syntax 'create default',
'Transact-SQL',          2 ,
'        of a user- defined datatype) if no value is explicitly supplied at'
go
exec insert_syntax 'create default',
'Transact-SQL',          3 ,
'        insert time.'
go
exec insert_syntax 'create default',
'Transact-SQL',          4 ,
'        create default [owner.]default_name'
go
exec insert_syntax 'create default',
'Transact-SQL',          5 ,
'        as constant_expression'
go
exec insert_syntax 'create existing table',
'Transact-SQL',          1 ,
'create existing table - Creates a proxy table, then retrieves and stores'
go
exec insert_syntax 'create existing table',
'Transact-SQL',          2 ,
'        metadata from a remote table and places the data into the proxy'
go
exec insert_syntax 'create existing table',
'Transact-SQL',          3 ,
'        table. Allows you to map the proxy table to a table, view, or'
go
exec insert_syntax 'create existing table',
'Transact-SQL',          4 ,
'        procedure at a remote location.'
go
exec insert_syntax 'create existing table',
'Transact-SQL',          5 ,
'  create existing table table_name (column_list)'
go
exec insert_syntax 'create existing table',
'Transact-SQL',          6 ,
'     [ on segment_name ]'
go
exec insert_syntax 'create existing table',
'Transact-SQL',          7 ,
'     [ [ external {table | procedure} ] at pathname ]'
go
exec insert_syntax 'create index',
'Transact-SQL',          1 ,
'create index - Creates an index on one or more columns in a table.'
go
exec insert_syntax 'create index',
'Transact-SQL',          2 ,
'  create [unique] [clustered | nonclustered]'
go
exec insert_syntax 'create index',
'Transact-SQL',          3 ,
'         index index_name'
go
exec insert_syntax 'create index',
'Transact-SQL',          4 ,
'     on [[database.]owner.]table_name'
go
exec insert_syntax 'create index',
'Transact-SQL',          5 ,
'           (column_name [asc | desc]'
go
exec insert_syntax 'create index',
'Transact-SQL',          6 ,
'             [, column_name [asc | desc]]...)'
go
exec insert_syntax 'create index',
'Transact-SQL',          7 ,
'     [with { fillfactor = pct,'
go
exec insert_syntax 'create index',
'Transact-SQL',          8 ,
'             max_rows_per_page = num_rows,'
go
exec insert_syntax 'create index',
'Transact-SQL',          9 ,
'             reservepagegap = num_pages,'
go
exec insert_syntax 'create index',
'Transact-SQL',          10,
'             consumers = x, ignore_dup_key, sorted_data,'
go
exec insert_syntax 'create index',
'Transact-SQL',          11,
'             [ignore_dup_row | allow_dup_row],'
go
exec insert_syntax 'create index',
'Transact-SQL',          12,
'             statistics using num_steps values  } ]'
go
exec insert_syntax 'create index',
'Transact-SQL',          13,
'     [on segment_name]'
go
exec insert_syntax 'create plan',
'Transact-SQL',          1 ,
'create plan - Creates an abstract plan.'
go
exec insert_syntax 'create plan',
'Transact-SQL',          2 ,
'  create plan query plan'
go
exec insert_syntax 'create plan',
'Transact-SQL',          3 ,
'             [into group_name]'
go
exec insert_syntax 'create plan',
'Transact-SQL',          4 ,
'             [and set @new_id]'
go
exec insert_syntax 'create procedure',
'Transact-SQL',          1 ,
'create procedure - Creates a stored procedure or an extended stored'
go
exec insert_syntax 'create procedure',
'Transact-SQL',          2 ,
'        procedure (ESP) that can take one or more user-supplied parameters.'
go
exec insert_syntax 'create procedure',
'Transact-SQL',          3 ,
'  create procedure [owner.]procedure_name[;number]'
go
exec insert_syntax 'create procedure',
'Transact-SQL',          4 ,
'     [[(]@parameter_name'
go
exec insert_syntax 'create procedure',
'Transact-SQL',          5 ,
'         datatype [(length) | (precision [, scale])]'
go
exec insert_syntax 'create procedure',
'Transact-SQL',          6 ,
'         [= default][output]'
go
exec insert_syntax 'create procedure',
'Transact-SQL',          7 ,
'     [, @parameter_name'
go
exec insert_syntax 'create procedure',
'Transact-SQL',          8 ,
'         datatype [(length) | (precision [, scale])]'
go
exec insert_syntax 'create procedure',
'Transact-SQL',          9 ,
'         [= default][output]]...[)]]'
go
exec insert_syntax 'create procedure',
'Transact-SQL',          10,
'     [with recompile]'
go
exec insert_syntax 'create procedure',
'Transact-SQL',          11,
'     as {SQL_statements | external name dll_name}'
go
exec insert_syntax 'create procedure',
'Transact-SQL',          12 ,
''       
go
exec insert_syntax 'create procedure',
'Transact-SQL',          13 ,
'            Or, if you are using create procedure with SQLJ,'
go
exec insert_syntax 'create procedure',
'Transact-SQL',          14 ,
'            the syntax is:'
go
exec insert_syntax 'create procedure',
'Transact-SQL',          15 ,
''       
go
exec insert_syntax 'create procedure',
'Transact-SQL',          16 ,
'create procedure - Creates a stored procedure or an extended' 
go
exec insert_syntax 'create procedure',
'Transact-SQL',          17 ,
'        stored procedure (ESP) by adding a SQL wrapper to a'
go
exec insert_syntax 'create procedure',
'Transact-SQL',          18 ,
'        Java static method. ' 
go
exec insert_syntax 'create procedure',
'Transact-SQL',          19 ,
'  create procedure [owner.]sql_procedure_name'
go
exec insert_syntax 'create procedure',
'Transact-SQL',          20 ,
'     ([[in | out | inout] sql_parameter_name'
go
exec insert_syntax 'create procedure',
'Transact-SQL',          21 ,
'        sql_data_type[(length) | (precision [, scale])]'
go
exec insert_syntax 'create procedure',
'Transact-SQL',          22,
'    [, in | out | inout] sql_parameter_name'
go
exec insert_syntax 'create procedure',
'Transact-SQL',          23 ,
'        sql_data_type [(length) | (precision [, scale]) ...])'
go
exec insert_syntax 'create procedure',
'Transact-SQL',          24 ,
'    [modifies sql_data]'
go
exec insert_syntax 'create procedure',
'Transact-SQL',          25 ,
'    [dynamic result sets integer]'
go
exec insert_syntax 'create procedure',
'Transact-SQL',          26,
'    [deterministic | not deterministic]'
go
exec insert_syntax 'create procedure',
'Transact-SQL',          27,
'    language java'
go
exec insert_syntax 'create procedure',
'Transact-SQL',          28 ,
'    parameter sytle java'
go
exec insert_syntax 'create procedure',
'Transact-SQL',          29,
'    external name java_method_name'
go
exec insert_syntax 'create procedure',
'Transact-SQL',          30,
'        [([java_data_type[,java_data_type...]])]'
go
exec insert_syntax 'create proxy_table',
'Transact-SQL',          1 ,
'create proxy_table - Creates a proxy table without specifying a colunmn list'
go
exec insert_syntax 'create proxy_table',
'Transact-SQL',          2 ,
'        Component Integration Services derives the column list from the'
go
exec insert_syntax 'create proxy_table',
'Transact-SQL',          3 ,
'        metadata it obtains from the remote table.'
go
exec insert_syntax 'create proxy_table',
'Transact-SQL',          4 ,
'  create proxy_table table_name'
go
exec insert_syntax 'create proxy_table',
'Transact-SQL',          5 ,
'     [ external table ]'
go
exec insert_syntax 'create proxy_table',
'Transact-SQL',          6 ,
'     at pathname'
go
exec insert_syntax 'create role',
'Transact-SQL',          1 ,
'create role - Creates a user-defined role; specifies the password expiration'
go
exec insert_syntax 'create role',
'Transact-SQL',          2 ,
'        interval, the minimum password length, and the maximum number of'
go
exec insert_syntax 'create role',
'Transact-SQL',          3 ,
'        failed logins allowed for a specified role at creation.'
go
exec insert_syntax 'create role',
'Transact-SQL',          4 ,
'  create role role_name [ with passwd "password"'
go
exec insert_syntax 'create role',
'Transact-SQL',          5 ,
'     [, {"passwd expiration" | "min passwd length" |'
go
exec insert_syntax 'create role',
'Transact-SQL',          6 ,
'     "max failed_logins" } option_value ] ]'
go
exec insert_syntax 'create rule',
'Transact-SQL',          1 ,
'create rule - Specifies the domain of acceptable values for a particular'
go
exec insert_syntax 'create rule',
'Transact-SQL',          2 ,
'        column or for any column of a user-defined datatype.'
go
exec insert_syntax 'create rule',
'Transact-SQL',          3 ,
'  create rule [[and | or] access]'
go
exec insert_syntax 'create rule',
'Transact-SQL',          4 ,
'  [owner.]rule_name'
go
exec insert_syntax 'create rule',
'Transact-SQL',          5 ,
'     as condition_expression'
go
exec insert_syntax 'create schema',
'Transact-SQL',          1 ,
'create schema - Creates a new collection of tables, views, and permissions'
go
exec insert_syntax 'create schema',
'Transact-SQL',          2 ,
'        for a database user.'
go
exec insert_syntax 'create schema',
'Transact-SQL',          3 ,
'  create schema authorization authorization_name'
go
exec insert_syntax 'create schema',
'Transact-SQL',          4 ,
'     create_oject_statement'
go
exec insert_syntax 'create schema',
'Transact-SQL',          5 ,
'         [ create_object_statement ... ]'
go
exec insert_syntax 'create schema',
'Transact-SQL',          6 ,
'     [ permission_statement ... ]'
go
exec insert_syntax 'create table',
'Transact-SQL',          1 ,
'create table - Creates new tables and optional integrity constraints.'
go
exec insert_syntax 'create table',
'Transact-SQL',          2 ,
'  create table [database.[owner].]table_name'
go
exec insert_syntax 'create table',
'Transact-SQL',          3 ,
'     (column_name datatype'
go
exec insert_syntax 'create table',
'Transact-SQL',          4 ,
'         [default {constant_expression | user | null}]'
go
exec insert_syntax 'create table',
'Transact-SQL',          5 ,
'         {[{identity | null | not null}]'
go
exec insert_syntax 'create table',
'Transact-SQL',          6 ,
'                     [off row | in row]'
go
exec insert_syntax 'create table',
'Transact-SQL',          7 ,
'         [[constraint constraint_name]'
go
exec insert_syntax 'create table',
'Transact-SQL',          8 ,
'             {{unique | primary key}'
go
exec insert_syntax 'create table',
'Transact-SQL',          9 ,
'            [clustered | nonclustered] [asc | desc]'
go
exec insert_syntax 'create table',
'Transact-SQL',          10,
'            [with { fillfactor = pct,'
go
exec insert_syntax 'create table',
'Transact-SQL',          11,
'                      max_rows_per_page = num_rows, }'
go
exec insert_syntax 'create table',
'Transact-SQL',          12,
'                      reservepagegap = num_pages }]'
go
exec insert_syntax 'create table',
'Transact-SQL',          13,
'             [on segment_name]'
go
exec insert_syntax 'create table',
'Transact-SQL',          14,
'             | references [[database.]owner.]ref_table'
go
exec insert_syntax 'create table',
'Transact-SQL',          15,
'                 [(ref_column)]'
go
exec insert_syntax 'create table',
'Transact-SQL',          16,
'             | check (search_condition)}]}...'
go
exec insert_syntax 'create table',
'Transact-SQL',          17,
'      | [constraint constraint_name]'
go
exec insert_syntax 'create table',
'Transact-SQL',          18,
'         {{unique | primary key}'
go
exec insert_syntax 'create table',
'Transact-SQL',          19,
'             [clustered | nonclustered]'
go
exec insert_syntax 'create table',
'Transact-SQL',          20,
'             (column_name [asc | desc]'
go
exec insert_syntax 'create table',
'Transact-SQL',          21,
'                             [{, column_name [asc | desc]}...])'
go
exec insert_syntax 'create table',
'Transact-SQL',          22,
'             [with { fillfactor = pct'
go
exec insert_syntax 'create table',
'Transact-SQL',          23,
'                                max_rows_per_page = num_rows ,'
go
exec insert_syntax 'create table',
'Transact-SQL',          24,
'                                reservepagegap = num_pages } ]'
go
exec insert_syntax 'create table',
'Transact-SQL',          25,
'             [on segment_name]'
go
exec insert_syntax 'create table',
'Transact-SQL',          26,
'         |foreign key (column_name [{, column_name}...])'
go
exec insert_syntax 'create table',
'Transact-SQL',          27,
'             references [[database.]owner.]ref_table'
go
exec insert_syntax 'create table',
'Transact-SQL',          28,
'                 [(ref_column [{, ref_column}...])]'
go
exec insert_syntax 'create table',
'Transact-SQL',          29,
'          | check (search_condition) ... }'
go
exec insert_syntax 'create table',
'Transact-SQL',          30,
'     [{, {next_column | next_constraint}}...])'
go
exec insert_syntax 'create table',
'Transact-SQL',          31,
'     [lock {datarows | datapages | allpages }]'
go
exec insert_syntax 'create table',
'Transact-SQL',          32,
'     [with { max_rows_per_page = num_rows,'
go
exec insert_syntax 'create table',
'Transact-SQL',          33,
'                     exp_row_size = num_bytes,'
go
exec insert_syntax 'create table',
'Transact-SQL',          34,
'                     reservepagegap = num_pages,'
go
exec insert_syntax 'create table',
'Transact-SQL',          35,
'                     identity_gap = num_values } ]'
go
exec insert_syntax 'create table',
'Transact-SQL',          36,
'     [on segment_name]'
go
exec insert_syntax 'create table',
'Transact-SQL',          37,
'     [ [ external table ] at pathname ]'
go
exec insert_syntax 'create trigger',
'Transact-SQL',          1 ,
'create trigger - Creates a trigger, a type of stored procedure that is often'
go
exec insert_syntax 'create trigger',
'Transact-SQL',          2 ,
'        used for enforcing integrity constraints. A trigger executes'
go
exec insert_syntax 'create trigger',
'Transact-SQL',          3 ,
'        automatically when a user attempts a specified data'
go
exec insert_syntax 'create trigger',
'Transact-SQL',          4 ,
'        modification statement on a specified table.'
go
exec insert_syntax 'create trigger',
'Transact-SQL',          5 ,
'  create trigger [owner.]trigger_name'
go
exec insert_syntax 'create trigger',
'Transact-SQL',          6 ,
'     on [owner.]table_name'
go
exec insert_syntax 'create trigger',
'Transact-SQL',          7 ,
'     for {insert , update , delete}'
go
exec insert_syntax 'create trigger',
'Transact-SQL',          8 ,
'     as SQL_statements'
go
exec insert_syntax 'create trigger',
'Transact-SQL',          9 ,
'     Or, using the if update clause:'
go
exec insert_syntax 'create trigger',
'Transact-SQL',          10,
'     create trigger [owner.]trigger_name'
go
exec insert_syntax 'create trigger',
'Transact-SQL',          11,
'     on [owner.]table_name'
go
exec insert_syntax 'create trigger',
'Transact-SQL',          12,
'     for {insert , update}'
go
exec insert_syntax 'create trigger',
'Transact-SQL',          13,
'     as'
go
exec insert_syntax 'create trigger',
'Transact-SQL',          14,
'         [if update (column_name)'
go
exec insert_syntax 'create trigger',
'Transact-SQL',          15,
'             [{and | or} update (column_name)]...]'
go
exec insert_syntax 'create trigger',
'Transact-SQL',          16,
'             SQL_statements'
go
exec insert_syntax 'create trigger',
'Transact-SQL',          17,
'         [if update (column_name)'
go
exec insert_syntax 'create trigger',
'Transact-SQL',          18,
'             [{and | or} update (column_name)]...'
go
exec insert_syntax 'create trigger',
'Transact-SQL',          19,
'             SQL_statements]...'
go
exec insert_syntax 'create view',
'Transact-SQL',          1 ,
'create view - Creates a view, which is an alternative way of looking at the'
go
exec insert_syntax 'create view',
'Transact-SQL',          2 ,
'        data in one or more tables.'
go
exec insert_syntax 'create view',
'Transact-SQL',          3 ,
'  create view [owner.]view_name'
go
exec insert_syntax 'create view',
'Transact-SQL',          4 ,
'     [(column_name [, column_name]...)]'
go
exec insert_syntax 'create view',
'Transact-SQL',          5 ,
'     as select [distinct] select_statement'
go
exec insert_syntax 'create view',
'Transact-SQL',          6 ,
'     [with check option]'
go
exec insert_syntax 'curunreservedpgs',
'Transact-SQL',          1 ,
'curunreservedpgs - Returns the number of free pages in the specified disk'
go
exec insert_syntax 'curunreservedpgs',
'Transact-SQL',          2 ,
'        piece.'
go
exec insert_syntax 'curunreservedpgs',
'Transact-SQL',          3 ,
'  curunreservedpgs(dbid, lstart, unreservedpgs)'
go
exec insert_syntax 'data_pgs',
'Transact-SQL',          1 ,
'data_pgs - Returns the number of pages used by the specified table or index.'
go
exec insert_syntax 'data_pgs',
'Transact-SQL',          2 ,
'  data_pgs(object_id,'
go
exec insert_syntax 'data_pgs',
'Transact-SQL',          3 ,
'     {data_oam_pg_id | index_oam_pg_id})'
go
exec insert_syntax 'datalength',
'Transact-SQL',          1 ,
'datalength - Returns the actual length, in bytes, of the specified column or'
go
exec insert_syntax 'datalength',
'Transact-SQL',          2 ,
'        string.'
go
exec insert_syntax 'datalength',
'Transact-SQL',          3 ,
'  datalength(expression)'
go
exec insert_syntax 'dateadd',
'Transact-SQL',          1 ,
'dateadd - Returns the date produced by adding a given number of years,'
go
exec insert_syntax 'dateadd',
'Transact-SQL',          2 ,
'        quarters, hours, or other date parts to the specified date.'
go
exec insert_syntax 'dateadd',
'Transact-SQL',          3 ,
'  dateadd(date_part, integer, date)'
go
exec insert_syntax 'datediff',
'Transact-SQL',          1 ,
'datediff - Returns the difference between two dates.'
go
exec insert_syntax 'datediff',
'Transact-SQL',          2 ,
'  datediff(datepart, date1, date2)'
go
exec insert_syntax 'datename',
'Transact-SQL',          1 ,
'datename - Returns the name of the specified part of a datetime value.'
go
exec insert_syntax 'datename',
'Transact-SQL',          2 ,
'  datename (datepart, date)'
go
exec insert_syntax 'datepart',
'Transact-SQL',          1 ,
'datepart - Returns the integer value of the specified part of a datetime'
go
exec insert_syntax 'datepart',
'Transact-SQL',          2 ,
'        value.'
go
exec insert_syntax 'datepart',
'Transact-SQL',          3 ,
'  datepart(date_part, date)'
go
exec insert_syntax 'db_id',
'Transact-SQL',          1 ,
'db_id - Returns the ID number of the specified database.'
go
exec insert_syntax 'db_id',
'Transact-SQL',          2 ,
'  db_id(database_name)'
go
exec insert_syntax 'db_name',
'Transact-SQL',          1 ,
'db_name - Returns the name of the database whose ID number is specified.'
go
exec insert_syntax 'db_name',
'Transact-SQL',          2 ,
'  db_name([database_id])'
go
exec insert_syntax 'dbcc',
'Transact-SQL',          1 ,
'  dbcc checkalloc [(database_name [, fix | nofix])]'
go
exec insert_syntax 'dbcc',
'Transact-SQL',          2 ,
'     dbcc checkcatalog [(database_name)]'
go
exec insert_syntax 'dbcc',
'Transact-SQL',          3 ,
'     dbcc checkdb [(database_name [, skip_ncindex])]'
go
exec insert_syntax 'dbcc',
'Transact-SQL',          4 ,
'     dbcc checkstorage [(database_name)]'
go
exec insert_syntax 'dbcc',
'Transact-SQL',          5 ,
'     dbcc checktable({table_name|table_id}[, skip_ncindex])'
go
exec insert_syntax 'dbcc',
'Transact-SQL',          6 ,
'     dbcc checkverify [(database_name)]'
go
exec insert_syntax 'dbcc',
'Transact-SQL',          7 ,
'     dbcc complete_xact (xid, {"commit" | "rollback"})'
go
exec insert_syntax 'dbcc',
'Transact-SQL',          8 ,
'     dbcc forget_xact (xid)'
go
exec insert_syntax 'dbcc',
'Transact-SQL',          9 ,
'     dbcc dbrepair (database_name, dropdb)'
go
exec insert_syntax 'dbcc',
'Transact-SQL',          10,
'     dbcc engine( {offline , [enginenum] | "online" })'
go
exec insert_syntax 'dbcc',
'Transact-SQL',          11,
'     dbcc fix_text ({table_name | table_id})'
go
exec insert_syntax 'dbcc',
'Transact-SQL',          12,
'     dbcc indexalloc ({table_name | table_id}, index_id'
go
exec insert_syntax 'dbcc',
'Transact-SQL',          13,
'         [, {full | optimized | fast | null}'
go
exec insert_syntax 'dbcc',
'Transact-SQL',          14,
'         [, fix | nofix]])'
go
exec insert_syntax 'dbcc',
'Transact-SQL',          15,
'     dbcc rebuild_text (table [, column'
go
exec insert_syntax 'dbcc',
'Transact-SQL',          16,
'     [, text_page_number]])'
go
exec insert_syntax 'dbcc',
'Transact-SQL',          17,
'     dbcc reindex ({table_name | table_id})'
go
exec insert_syntax 'dbcc',
'Transact-SQL',          18,
'     dbcc tablealloc ({table_name | table_id}'
go
exec insert_syntax 'dbcc',
'Transact-SQL',          19,
'         [, {full | optimized | fast | null}'
go
exec insert_syntax 'dbcc',
'Transact-SQL',          20,
'         [, fix | nofix]])|'
go
exec insert_syntax 'dbcc',
'Transact-SQL',          21,
'     dbcc { traceon | traceoff } (flag [, flag ... ])'
go
exec insert_syntax 'dbcc',
'Transact-SQL',          22,
'     dbcc tune ( { ascinserts, {0 | 1 } , tablename |'
go
exec insert_syntax 'dbcc',
'Transact-SQL',          23,
'                             cleanup, {0 | 1 } |'
go
exec insert_syntax 'dbcc',
'Transact-SQL',          24,
'                             cpuaffinity, start_cpu {, on| off } |'
go
exec insert_syntax 'dbcc',
'Transact-SQL',          25,
'                             des_greedyalloc, dbid, object_name,'
go
exec insert_syntax 'dbcc',
'Transact-SQL',          26,
'                                     " { on|off }" |'
go
exec insert_syntax 'dbcc',
'Transact-SQL',          27,
'                             deviochar vdevno, "batch_size" |'
go
exec insert_syntax 'dbcc',
'Transact-SQL',          28,
'                             doneinproc { 0 | 1 } |'
go
exec insert_syntax 'dbcc',
'Transact-SQL',          29,
'                             maxwritedes, writes_per_batch } )'
go
exec insert_syntax 'deallocate cursor',
'Transact-SQL',          1 ,
'deallocate cursor - Makes a cursor inaccessible and releases all memory'
go
exec insert_syntax 'deallocate cursor',
'Transact-SQL',          2 ,
'        resources committed to that cursor.'
go
exec insert_syntax 'deallocate cursor',
'Transact-SQL',          3 ,
'  deallocate cursor cursor_name'
go
exec insert_syntax 'declare',
'Transact-SQL',          1 ,
'declare - Declares the name and type of local variables for a batch or'
go
exec insert_syntax 'declare',
'Transact-SQL',          2 ,
'        procedure.'
go
exec insert_syntax 'declare',
'Transact-SQL',          3 ,
'  Variable declaration:'
go
exec insert_syntax 'declare',
'Transact-SQL',          4 ,
'     declare @variable_name datatype'
go
exec insert_syntax 'declare',
'Transact-SQL',          5 ,
'     [, @variable_name datatype]...'
go
exec insert_syntax 'declare',
'Transact-SQL',          6 ,
'     Variable assignment:'
go
exec insert_syntax 'declare',
'Transact-SQL',          7 ,
'     select @variable = {expression | select_statement}'
go
exec insert_syntax 'declare',
'Transact-SQL',          8 ,
'     [, @variable = {expression | select_statement} ...]'
go
exec insert_syntax 'declare',
'Transact-SQL',          9 ,
'     [from table_list]'
go
exec insert_syntax 'declare',
'Transact-SQL',          10,
'     [where search_conditions]'
go
exec insert_syntax 'declare',
'Transact-SQL',          11,
'     [group by group_by_list]'
go
exec insert_syntax 'declare',
'Transact-SQL',          12,
'     [having search_conditions]'
go
exec insert_syntax 'declare',
'Transact-SQL',          13,
'     [order by order_by_list]'
go
exec insert_syntax 'declare',
'Transact-SQL',          14,
'     [compute function_list [by by_list]]'
go
exec insert_syntax 'declare cursor',
'Transact-SQL',          1 ,
'declare cursor - Defines a cursor.'
go
exec insert_syntax 'declare cursor',
'Transact-SQL',          2 ,
'  declare cursor_name cursor'
go
exec insert_syntax 'declare cursor',
'Transact-SQL',          3 ,
'     for select_statement'
go
exec insert_syntax 'declare cursor',
'Transact-SQL',          4 ,
'     [for {read only | update [of column_name_list]}]'
go
exec insert_syntax 'degrees',
'Transact-SQL',          1 ,
'degrees - Returns the size, in degrees, of an angle with the specified'
go
exec insert_syntax 'degrees',
'Transact-SQL',          2 ,
'        number of radians.'
go
exec insert_syntax 'degrees',
'Transact-SQL',          3 ,
'  degrees(numeric)'
go
exec insert_syntax 'delete',
'Transact-SQL',          1 ,
'delete - Removes rows from a table.'
go
exec insert_syntax 'delete',
'Transact-SQL',          2 ,
'  delete [from]'
go
exec insert_syntax 'delete',
'Transact-SQL',          3 ,
'     [[database.]owner.]{view_name|table_name}'
go
exec insert_syntax 'delete',
'Transact-SQL',          4 ,
'     [where search_conditions]'
go
exec insert_syntax 'delete',
'Transact-SQL',          5 ,
'     [plan "abstract plan"]'
go
exec insert_syntax 'delete',
'Transact-SQL',          6 ,
'     delete [[database.]owner.]{table_name | view_name}'
go
exec insert_syntax 'delete',
'Transact-SQL',          7 ,
'     [from [[database.]owner.]{view_name [readpast]|'
go
exec insert_syntax 'delete',
'Transact-SQL',          8 ,
'         table_name [readpast]'
go
exec insert_syntax 'delete',
'Transact-SQL',          9 ,
'             [(index {index_name | table_name }'
go
exec insert_syntax 'delete',
'Transact-SQL',          10,
'             [ prefetch size ][lru|mru])]}'
go
exec insert_syntax 'delete',
'Transact-SQL',          11,
'      [, [[database.]owner.]{view_name [readpast]|'
go
exec insert_syntax 'delete',
'Transact-SQL',          12,
'         table_name [readpast]'
go
exec insert_syntax 'delete',
'Transact-SQL',          13,
'             [(index {index_name | table_name }'
go
exec insert_syntax 'delete',
'Transact-SQL',          14,
'             [ prefetch size ][lru|mru])]} ...]'
go
exec insert_syntax 'delete',
'Transact-SQL',          15,
'     [where search_conditions] ]'
go
exec insert_syntax 'delete',
'Transact-SQL',          16,
'     [plan "abstract plan"]'
go
exec insert_syntax 'delete',
'Transact-SQL',          17,
'     delete [from]'
go
exec insert_syntax 'delete',
'Transact-SQL',          18,
'     [[database.]owner.]{table_name|view_name}'
go
exec insert_syntax 'delete',
'Transact-SQL',          19,
'     where current of cursor_name'
go
exec insert_syntax 'delete statistics',
'Transact-SQL',          1 ,
'delete statistics - Removes statistics from the sysstatistics system table.'
go
exec insert_syntax 'delete statistics',
'Transact-SQL',          2 ,
'  delete [shared] statistics table_name [(column_name'
go
exec insert_syntax 'delete statistics',
'Transact-SQL',          3 ,
'     [, column_name]...)]'
go
exec insert_syntax 'difference',
'Transact-SQL',          1 ,
'difference - Returns the difference between two soundex values.'
go
exec insert_syntax 'difference',
'Transact-SQL',          2 ,
'  difference(char_expr1|uchar_expr1), (char_expr2|'
go
exec insert_syntax 'difference',
'Transact-SQL',          3 ,
'     uchar_expr2)'
go
exec insert_syntax 'disk resize',
'Transact-SQL',          1 ,
'disk resize - Increases the size of the device by amount specified.'
go
exec insert_syntax 'disk resize',
'Transact-SQL',          2 ,
'  disk resize'
go
exec insert_syntax 'disk resize',
'Transact-SQL',          3 ,
'     name = "device_name" ,'
go
exec insert_syntax 'disk resize',
'Transact-SQL',         4 ,
'    size=additional_space'  		
go
exec insert_syntax 'disk init',
'Transact-SQL',          1 ,
'disk init - Makes a physical device or file usable by Adaptive Server.'
go
exec insert_syntax 'disk init',
'Transact-SQL',          2 ,
'  disk init'
go
exec insert_syntax 'disk init',
'Transact-SQL',          3 ,
'     name = "device_name" ,'
go
exec insert_syntax 'disk init',
'Transact-SQL',          4 ,
'     physname = "physicalname" ,'
go
exec insert_syntax 'disk init',
'Transact-SQL',          5 ,
'     [vdevno = virtual device number],'
go
exec insert_syntax 'disk init',
'Transact-SQL',          6 ,
'     size = size of device'
go
exec insert_syntax 'disk init',
'Transact-SQL',          7 ,
'     [, vstart = virtual address'
go
exec insert_syntax 'disk init',
'Transact-SQL',          8 ,
'         , cntrltype = controller_number ]'
go
exec insert_syntax 'disk init',
'Transact-SQL',          10,
'     [, dsync = {true|false}]'
go
exec insert_syntax 'disk mirror',
'Transact-SQL',          1 ,
'disk mirror - Creates a software mirror that immediately takes over when the'
go
exec insert_syntax 'disk mirror',
'Transact-SQL',          2 ,
'        primary device fails.'
go
exec insert_syntax 'disk mirror',
'Transact-SQL',          3 ,
'  disk mirror'
go
exec insert_syntax 'disk mirror',
'Transact-SQL',          4 ,
'     name = "device_name" ,'
go
exec insert_syntax 'disk mirror',
'Transact-SQL',          5 ,
'     mirror = "physicalname"'
go
exec insert_syntax 'disk mirror',
'Transact-SQL',          6 ,
'     [, writes = { serial | noserial }]'
go
exec insert_syntax 'disk mirror',
'Transact-SQL',          7 ,
'     [, contiguous ] (OpenVMS only)'
go
exec insert_syntax 'disk refit',
'Transact-SQL',          1 ,
'disk refit - Rebuilds the master database''s sysusages and sysdatabases'
go
exec insert_syntax 'disk refit',
'Transact-SQL',          2 ,
'        system tables from information contained in sysdevices.'
go
exec insert_syntax 'disk refit',
'Transact-SQL',          3 ,
'  disk refit'
go
exec insert_syntax 'disk reinit',
'Transact-SQL',          1 ,
'disk reinit - Rebuilds the master database''s sysdevices system table. Use'
go
exec insert_syntax 'disk reinit',
'Transact-SQL',          2 ,
'        disk reinit as part of the procedure to restore the master database.'
go
exec insert_syntax 'disk reinit',
'Transact-SQL',          3 ,
'  disk reinit'
go
exec insert_syntax 'disk reinit',
'Transact-SQL',          4 ,
'     name = "device name",'
go
exec insert_syntax 'disk reinit',
'Transact-SQL',          5 ,
'     physname = "physicalname" ,'
go
exec insert_syntax 'disk reinit',
'Transact-SQL',          6 ,
'     [vdevno = virtual_device_number] ,'
go
exec insert_syntax 'disk reinit',
'Transact-SQL',          7 ,
'     size = size of device'
go
exec insert_syntax 'disk reinit',
'Transact-SQL',          8 ,
'     [, vstart = virtual_address]'
go
exec insert_syntax 'disk reinit', 
'Transact-SQL',          10,
'     [, dsync = {true|false}]'
go
exec insert_syntax 'disk remirror',
'Transact-SQL',          1 ,
'disk remirror - Restarts disk mirroring after it is stopped by failure of a'
go
exec insert_syntax 'disk remirror',
'Transact-SQL',          2 ,
'        mirrored device or temporarily disabled by the disk unmirror command.'
go
exec insert_syntax 'disk remirror',
'Transact-SQL',          3 ,
'  disk remirror'
go
exec insert_syntax 'disk remirror',
'Transact-SQL',          4 ,
'     name = "device_name"'
go
exec insert_syntax 'disk unmirror',
'Transact-SQL',          1 ,
'disk unmirror - Suspends disk mirroring initiated with the disk mirror'
go
exec insert_syntax 'disk unmirror',
'Transact-SQL',          2 ,
'        command to allow hardware maintenance or the changing of a'
go
exec insert_syntax 'disk unmirror',
'Transact-SQL',          3 ,
'        hardware device.'
go
exec insert_syntax 'disk unmirror',
'Transact-SQL',          4 ,
'  disk unmirror'
go
exec insert_syntax 'disk unmirror',
'Transact-SQL',          5 ,
'     name = "device_name"'
go
exec insert_syntax 'disk unmirror',
'Transact-SQL',          6 ,
'     [ ,side = { "primary" | secondary }]'
go
exec insert_syntax 'disk unmirror',
'Transact-SQL',          7 ,
'     [ ,mode = { retain | remove }]'
go
exec insert_syntax 'drop function',
'Transact-SQL',          1 ,
'drop function - Removes a SQLJ user-defined function.'
go
exec insert_syntax 'drop function',
'Transact-SQL',          2 ,
'  drop func[tion] [owner.]function_name'
go
exec insert_syntax 'drop function',
'Transact-SQL',          3 ,
'  [,[owner.]function_name]...'
go
exec insert_syntax 'drop database',
'Transact-SQL',          1 ,
'drop database - Removes one or more databases from Adaptive Server.'
go
exec insert_syntax 'drop database',
'Transact-SQL',          2 ,
'  drop database database_name [, database_name]...'
go
exec insert_syntax 'drop default',
'Transact-SQL',          1 ,
'drop default - Removes a user-defined default.'
go
exec insert_syntax 'drop default',
'Transact-SQL',          2 ,
'  drop default [owner.]default_name'
go
exec insert_syntax 'drop default',
'Transact-SQL',          3 ,
'     [, [owner.]default_name]...'
go
exec insert_syntax 'drop index',
'Transact-SQL',          1 ,
'drop index - Removes an index from a table in the current database.'
go
exec insert_syntax 'drop index',
'Transact-SQL',          2 ,
'  drop index table_name.index_name'
go
exec insert_syntax 'drop index',
'Transact-SQL',          3 ,
'     [, table_name.index_name]...'
go
exec insert_syntax 'drop procedure',
'Transact-SQL',          1 ,
'drop procedure - Removes a procedure.'
go
exec insert_syntax 'drop procedure',
'Transact-SQL',          2 ,
'  drop proc[edure] [owner.]procedure_name'
go
exec insert_syntax 'drop procedure',
'Transact-SQL',          3 ,
'     [, [owner.]procedure_name] ...'
go
exec insert_syntax 'drop role',
'Transact-SQL',          1 ,
'drop role - Drops a user-defined role.'
go
exec insert_syntax 'drop role',
'Transact-SQL',          2 ,
'  drop role role_name [with override]'
go
exec insert_syntax 'drop rule',
'Transact-SQL',          1 ,
'drop rule - Removes a user-defined rule.'
go
exec insert_syntax 'drop rule',
'Transact-SQL',          2 ,
'  drop rule [owner.]rule_name [, [owner.]rule_name]...'
go
exec insert_syntax 'drop table',
'Transact-SQL',          1 ,
'drop table - Removes a table definition and all of its data, indexes,'
go
exec insert_syntax 'drop table',
'Transact-SQL',          2 ,
'        triggers, and permissions from the database.'
go
exec insert_syntax 'drop table',
'Transact-SQL',          3 ,
'  drop table [[database.]owner.]table_name'
go
exec insert_syntax 'drop table',
'Transact-SQL',          4 ,
'     [, [[database.]owner.]table_name ]...'
go
exec insert_syntax 'drop trigger',
'Transact-SQL',          1 ,
'drop trigger - Removes a trigger.'
go
exec insert_syntax 'drop trigger',
'Transact-SQL',          2 ,
'  drop trigger [owner.]trigger_name'
go
exec insert_syntax 'drop trigger',
'Transact-SQL',          3 ,
'     [, [owner.]trigger_name]...'
go
exec insert_syntax 'drop view',
'Transact-SQL',          1 ,
'drop view - Removes one or more views from the current database.'
go
exec insert_syntax 'drop view',
'Transact-SQL',          2 ,
'  drop view [owner.]view_name [, [owner.]view_name]...'
go
exec insert_syntax 'dump database',
'Transact-SQL',          1 ,
'  dump database database_name'
go
exec insert_syntax 'dump database',
'Transact-SQL',          2 ,
'     to [compress::[compression_level::]]stripe_device'
go
exec insert_syntax 'dump database',
'Transact-SQL',          3 ,
'        [at backup_server_name]'
go
exec insert_syntax 'dump database',
'Transact-SQL',          4 ,
'        [density = density_value,'
go
exec insert_syntax 'dump database',
'Transact-SQL',          5 ,
'         blocksize = number_bytes,'
go
exec insert_syntax 'dump database',
'Transact-SQL',          6 ,
'         capacity = number_kilobytes,'
go
exec insert_syntax 'dump database',
'Transact-SQL',          7 ,
'         dumpvolume = volume_name,'
go
exec insert_syntax 'dump database',
'Transact-SQL',          8 ,
'         file = file_name]'
go
exec insert_syntax 'dump database',
'Transact-SQL',          9 ,
'     [stripe on stripe_device [at backup_server_name]'
go
exec insert_syntax 'dump database',
'Transact-SQL',          10 ,
'         [density = density_value,'
go
exec insert_syntax 'dump database',
'Transact-SQL',          11,
'          blocksize = number_bytes,'
go
exec insert_syntax 'dump database',
'Transact-SQL',          12,
'          capacity = number_kilobytes,'
go
exec insert_syntax 'dump database',
'Transact-SQL',          13,
'          dumpvolume = volume_name,'
go
exec insert_syntax 'dump database',
'Transact-SQL',          14,
'          file = file_name]]'
go
exec insert_syntax 'dump database',
'Transact-SQL',          15,
'     [[stripe on stripe_device [at backup_server_name]'
go
exec insert_syntax 'dump database',
'Transact-SQL',          16,
'         [density = density_value,'
go
exec insert_syntax 'dump database',
'Transact-SQL',          17,
'          blocksize = number_bytes,'
go
exec insert_syntax 'dump database',
'Transact-SQL',          18,
'          capacity = number_kilobytes,'
go
exec insert_syntax 'dump database',
'Transact-SQL',          19,
'          dumpvolume = volume_name,'
go
exec insert_syntax 'dump database',
'Transact-SQL',          20,
'          file = file_name]]...]'
go
exec insert_syntax 'dump database',
'Transact-SQL',          21,
'     [with {'
go
exec insert_syntax 'dump database',
'Transact-SQL',          22,
'          density = density_value,'
go
exec insert_syntax 'dump database',
'Transact-SQL',          23,
'          blocksize = number_bytes,'
go
exec insert_syntax 'dump database',
'Transact-SQL',          24,
'          capacity = number_kilobytes,'
go
exec insert_syntax 'dump database',
'Transact-SQL',          25,
'          dumpvolume = volume_name,'
go
exec insert_syntax 'dump database',
'Transact-SQL',          26,
'          file = file_name,'
go
exec insert_syntax 'dump database',
'Transact-SQL',          27,
'          [dismount | nodismount],'
go
exec insert_syntax 'dump database',
'Transact-SQL',          28,
'          [nounload | unload],'
go
exec insert_syntax 'dump database',
'Transact-SQL',          29,
'          retaindays = number_days,'
go
exec insert_syntax 'dump database',
'Transact-SQL',          30,
'          [noinit | init],'
go
exec insert_syntax 'dump database',
'Transact-SQL',          31,
'          notify = {client | operator_console}'
go
exec insert_syntax 'dump database',
'Transact-SQL',          32,
'          } ]'
go
exec insert_syntax 'dump transaction',
'Transact-SQL',          1 ,
'dump transaction - Makes a copy of a transaction log and removes the'
go
exec insert_syntax 'dump transaction',
'Transact-SQL',          2 ,
'        inactive portion.'
go
exec insert_syntax 'dump transaction',
'Transact-SQL',          3 ,
'  To make a routine log dump:'
go
exec insert_syntax 'dump transaction',
'Transact-SQL',          4 ,
'     dump tran[saction] database_name'
go
exec insert_syntax 'dump transaction',
'Transact-SQL',          5 ,
'     to [compress::[compression_level::]]stripe_device'
go
exec insert_syntax 'dump transaction',
'Transact-SQL',          6 ,
'         [ at backup_server_name ]'
go
exec insert_syntax 'dump transaction',
'Transact-SQL',          7 ,
'         [density = density_value,'
go
exec insert_syntax 'dump transaction',
'Transact-SQL',          8 ,
'          blocksize = number_bytes,'
go
exec insert_syntax 'dump transaction',
'Transact-SQL',          9 ,
'          capacity = number_kilobytes,'
go
exec insert_syntax 'dump transaction',
'Transact-SQL',          10 ,
'          dumpvolume = volume_name,'
go
exec insert_syntax 'dump transaction',
'Transact-SQL',          11,
'          file = file_name]'
go
exec insert_syntax 'dump transaction',
'Transact-SQL',          12,
'     [stripe on stripe_device [ at backup_server_name ]'
go
exec insert_syntax 'dump transaction',
'Transact-SQL',          13,
'         [density = density_value,'
go
exec insert_syntax 'dump transaction',
'Transact-SQL',          14,
'          blocksize = number_bytes,'
go
exec insert_syntax 'dump transaction',
'Transact-SQL',          15,
'          capacity = number_kilobytes,'
go
exec insert_syntax 'dump transaction',
'Transact-SQL',          16,
'          dumpvolume = volume_name,'
go
exec insert_syntax 'dump transaction',
'Transact-SQL',          17,
'          file = file_name]]'
go
exec insert_syntax 'dump transaction',
'Transact-SQL',          18,
'     [[stripe on stripe_device [ at backup_server_name ]'
go
exec insert_syntax 'dump transaction',
'Transact-SQL',          19,
'         [density = density_value,'
go
exec insert_syntax 'dump transaction',
'Transact-SQL',          20,
'          blocksize = number_bytes,'
go
exec insert_syntax 'dump transaction',
'Transact-SQL',          21,
'          capacity = number_kilobytes,'
go
exec insert_syntax 'dump transaction',
'Transact-SQL',          22,
'          dumpvolume = volume_name,'
go
exec insert_syntax 'dump transaction',
'Transact-SQL',          23,
'          file = file_name] ]...]'
go
exec insert_syntax 'dump transaction',
'Transact-SQL',          24,
'     [with {'
go
exec insert_syntax 'dump transaction',
'Transact-SQL',          25,
'         density = density_value,'
go
exec insert_syntax 'dump transaction',
'Transact-SQL',          26,
'         blocksize = number_bytes,'
go
exec insert_syntax 'dump transaction',
'Transact-SQL',          27,
'         capacity = number_kilobytes,'
go
exec insert_syntax 'dump transaction',
'Transact-SQL',          28,
'         dumpvolume = volume_name,'
go
exec insert_syntax 'dump transaction',
'Transact-SQL',          29,
'         file = file_name,'
go
exec insert_syntax 'dump transaction',
'Transact-SQL',          30,
'         [dismount | nodismount],'
go
exec insert_syntax 'dump transaction',
'Transact-SQL',          31,
'         [nounload | unload],'
go
exec insert_syntax 'dump transaction',
'Transact-SQL',          32,
'         retaindays = number_days,'
go
exec insert_syntax 'dump transaction',
'Transact-SQL',          33,
'         [noinit | init],'
go
exec insert_syntax 'dump transaction',
'Transact-SQL',          34,
'         notify = {client | operator_console},'
go
exec insert_syntax 'dump transaction',
'Transact-SQL',          35,
'         standby_access }]'
go
exec insert_syntax 'dump transaction',
'Transact-SQL',          36,
'     To truncate the log without making a backup copy:'
go
exec insert_syntax 'dump transaction',
'Transact-SQL',          37,
'     dump tran[saction] database_name'
go
exec insert_syntax 'dump transaction',
'Transact-SQL',          38,
'     with truncate_only'
go
exec insert_syntax 'dump transaction',
'Transact-SQL',          39,
'     To truncate a log that is filled to capacity. Use only as a last resort:'
go
exec insert_syntax 'dump transaction',
'Transact-SQL',          40,
'     dump tran[saction] database_name'
go
exec insert_syntax 'dump transaction',
'Transact-SQL',          41,
'     with no_log'
go
exec insert_syntax 'dump transaction',
'Transact-SQL',          42,
'     To back up the log after a database device fails:'
go
exec insert_syntax 'dump transaction',
'Transact-SQL',          43,
'     dump tran[saction] database_name'
go
exec insert_syntax 'dump transaction',
'Transact-SQL',          44,
'     to [compress::[compression_level]]stripe_device'
go
exec insert_syntax 'dump transaction',
'Transact-SQL',          45,
'         [ at backup_server_name ]'
go
exec insert_syntax 'dump transaction',
'Transact-SQL',          46,
'         [density = density_value,'
go
exec insert_syntax 'dump transaction',
'Transact-SQL',          47,
'          blocksize = number_bytes,'
go
exec insert_syntax 'dump transaction',
'Transact-SQL',          48,
'          capacity = number_kilobytes,'
go
exec insert_syntax 'dump transaction',
'Transact-SQL',          49,
'          dumpvolume = volume_name,'
go
exec insert_syntax 'dump transaction',
'Transact-SQL',          50,
'          file = file_name]'
go
exec insert_syntax 'dump transaction',
'Transact-SQL',          51,
'     [stripe on stripe_device [ at backup_server_name ]'
go
exec insert_syntax 'dump transaction',
'Transact-SQL',          52,
'         [density = density_value,'
go
exec insert_syntax 'dump transaction',
'Transact-SQL',          53,
'          blocksize = number_bytes,'
go
exec insert_syntax 'dump transaction',
'Transact-SQL',          54,
'          capacity = number_kilobytes,'
go
exec insert_syntax 'dump transaction',
'Transact-SQL',          55,
'          dumpvolume = volume_name,'
go
exec insert_syntax 'dump transaction',
'Transact-SQL',          56,
'          file = file_name]]'
go
exec insert_syntax 'dump transaction',
'Transact-SQL',          57,
'     [[stripe on stripe_device [ at backup_server_name ]'
go
exec insert_syntax 'dump transaction',
'Transact-SQL',          58,
'         [density = density_value,'
go
exec insert_syntax 'dump transaction',
'Transact-SQL',          59,
'          blocksize = number_bytes,'
go
exec insert_syntax 'dump transaction',
'Transact-SQL',          60,
'          capacity = number_kilobytes,'
go
exec insert_syntax 'dump transaction',
'Transact-SQL',          61,
'          dumpvolume = volume_name,'
go
exec insert_syntax 'dump transaction',
'Transact-SQL',          62,
'          file = file_name] ]...]'
go
exec insert_syntax 'dump transaction',
'Transact-SQL',          63,
'     [with {'
go
exec insert_syntax 'dump transaction',
'Transact-SQL',          64,
'         density = density_value,'
go
exec insert_syntax 'dump transaction',
'Transact-SQL',          65,
'         blocksize = number_bytes,'
go
exec insert_syntax 'dump transaction',
'Transact-SQL',          66,
'         capacity = number_kilobytes,'
go
exec insert_syntax 'dump transaction',
'Transact-SQL',          67,
'         dumpvolume = volume_name,'
go
exec insert_syntax 'dump transaction',
'Transact-SQL',          68,
'         file = file_name,'
go
exec insert_syntax 'dump transaction',
'Transact-SQL',          69,
'         [dismount | nodismount],'
go
exec insert_syntax 'dump transaction',
'Transact-SQL',          70,
'         [nounload | unload],'
go
exec insert_syntax 'dump transaction',
'Transact-SQL',          71,
'         retaindays = number_days,'
go
exec insert_syntax 'dump transaction',
'Transact-SQL',          72,
'         [noinit | init],'
go
exec insert_syntax 'dump transaction',
'Transact-SQL',          73,
'         no_truncate,'
go
exec insert_syntax 'dump transaction',
'Transact-SQL',          74,
'         notify = {client | operator_console}}]'
go
exec insert_syntax 'execute',
'Transact-SQL',          1 ,
'execute - Runs a procedure or dynamically executes Transact-SQL commands'
go
exec insert_syntax 'execute',
'Transact-SQL',          2 ,
'  [exec[ute]] [@return_status = ]'
go
exec insert_syntax 'execute',
'Transact-SQL',          3 ,
'     [[[server.]database.]owner.]procedure_name[;number]'
go
exec insert_syntax 'execute',
'Transact-SQL',          4 ,
'         [[@parameter_name =] value |'
go
exec insert_syntax 'execute',
'Transact-SQL',          5 ,
'             [@parameter_name =] @variable [output]'
go
exec insert_syntax 'execute',
'Transact-SQL',          6 ,
'         [,[@parameter_name =] value |'
go
exec insert_syntax 'execute',
'Transact-SQL',          7 ,
'             [@parameter_name =] @variable [output]...]]'
go
exec insert_syntax 'execute',
'Transact-SQL',          8 ,
'     [with recompile]'
go
exec insert_syntax 'execute',
'Transact-SQL',          9 ,
'     or'
go
exec insert_syntax 'execute',
'Transact-SQL',          10,
'     exec[ute] ("string" | char_variable'
go
exec insert_syntax 'execute',
'Transact-SQL',          11,
'     [+ "string" | char_variable]...)'
go
exec insert_syntax 'exp',
'Transact-SQL',          1 ,
'exp - Returns the value that results from raising the constant e to the'
go
exec insert_syntax 'exp',
'Transact-SQL',          2 ,
'        specified power.'
go
exec insert_syntax 'exp',
'Transact-SQL',          3 ,
'  exp(approx_numeric)'
go
exec insert_syntax 'fetch',
'Transact-SQL',          1 ,
'fetch - Returns a row or a set of rows from a cursor result set.'
go
exec insert_syntax 'fetch',
'Transact-SQL',          2 ,
'  fetch cursor_name [ into fetch_target_list ]'
go
exec insert_syntax 'floor',
'Transact-SQL',          1 ,
'floor - Returns the largest integer that is less than or equal to the'
go
exec insert_syntax 'floor',
'Transact-SQL',          2 ,
'        specified value.'
go
exec insert_syntax 'floor',
'Transact-SQL',          3 ,
'  floor(numeric)'
go
exec insert_syntax 'getdate',
'Transact-SQL',          1 ,
'getdate - Returns the current system date and time.'
go
exec insert_syntax 'getdate',
'Transact-SQL',          2 ,
'  getdate()'
go
exec insert_syntax 'goto Label',
'Transact-SQL',          1 ,
'goto Label - Branches to a user-defined label.'
go
exec insert_syntax 'goto Label',
'Transact-SQL',          2 ,
'  label:'
go
exec insert_syntax 'goto Label',
'Transact-SQL',          3 ,
'     goto label'
go
exec insert_syntax 'grant dbcc',
'Transact-SQL',          1 ,
'grant dbcc - Assigns permissions for dbcc commands' 
go
exec insert_syntax 'grant dbcc',
'Transact-SQL',          2 ,
'     grant dbcc {dbcc_command [on] {all | database_name}]'
go
exec insert_syntax 'grant dbcc',
'Transact-SQL',          3 ,
'     [, dbcc_command [on {all | database}],...]}'
go
exec insert_syntax 'grant dbcc',
'Transact-SQL',          4 ,
'     to {user_list | role_list}'
go
exec insert_syntax 'revoke dbcc',
'Transact-SQL',          1 ,
'revoke dbcc - revokes permissions for dbcc commands' 
go
exec insert_syntax 'revoke dbcc',
'Transact-SQL',          2 ,
'     revoke dbcc {dbcc_command [on] {all | database_name}]'
go
exec insert_syntax 'revoke dbcc',
'Transact-SQL',          3 ,
'     [, dbcc_command [on {all | database}],...]}'
go
exec insert_syntax 'revoke dbcc',
'Transact-SQL',          4 ,
'     from {user_list | role_list}'
go
exec insert_syntax 'grant',
'Transact-SQL',          1 ,
'grant - Assigns permissions to users or to user-defined roles. Assigns roles'
go
exec insert_syntax 'grant',
'Transact-SQL',          2 ,
'        to users or system or user-defined roles.'
go
exec insert_syntax 'grant',
'Transact-SQL',          3 ,
'  To grant permission to access database objects:'
go
exec insert_syntax 'grant',
'Transact-SQL',          4 ,
'     grant {all [privileges]| permission_list}'
go
exec insert_syntax 'grant',
'Transact-SQL',          5 ,
'     on { table_name [(column_list)]'
go
exec insert_syntax 'grant',
'Transact-SQL',          6 ,
'         | view_name[(column_list)]'
go
exec insert_syntax 'grant',
'Transact-SQL',          7 ,
'         | stored_procedure_name}'
go
exec insert_syntax 'grant',
'Transact-SQL',          8 ,
'     to {public | name_list | role_name}'
go
exec insert_syntax 'grant',
'Transact-SQL',          9 ,
'     [with grant option]'
go
exec insert_syntax 'grant',
'Transact-SQL',          10,
'     To grant permission to execute certain commands:'
go
exec insert_syntax 'grant',
'Transact-SQL',          11,
'     grant {all [privileges] | command_list}'
go
exec insert_syntax 'grant',
'Transact-SQL',          12,
'     to {public | name_list | role_name}'
go
exec insert_syntax 'grant',
'Transact-SQL',          13,
'     To grant a role to a user or a role:'
go
exec insert_syntax 'grant',
'Transact-SQL',          14,
'     grant {role role_granted [, role_granted ...]}'
go
exec insert_syntax 'grant',
'Transact-SQL',          15,
'     to grantee [, grantee...]'
go
exec insert_syntax 'group by and having',
'Transact-SQL',          1 ,
'group by and having Clauses - Used in select statements to divide a table'
go
exec insert_syntax 'group by and having',
'Transact-SQL',          2 ,
'        into groups and to return only groups that match conditions in'
go
exec insert_syntax 'group by and having',
'Transact-SQL',          3 ,
'        the having clause.'
go
exec insert_syntax 'group by and having',
'Transact-SQL',          4 ,
'  Start of select statement'
go
exec insert_syntax 'group by and having',
'Transact-SQL',          5 ,
'     [group by [all] aggregate_free_expression'
go
exec insert_syntax 'group by and having',
'Transact-SQL',          6 ,
'     [, aggregate_free_expression]...]'
go
exec insert_syntax 'group by and having',
'Transact-SQL',          7 ,
'     [having search_conditions]'
go
exec insert_syntax 'group by and having',
'Transact-SQL',          8 ,
'     End of select statement'
go
exec insert_syntax 'hextoint',
'Transact-SQL',          1 ,
'hextoint - Returns the platform-independent integer equivalent of a'
go
exec insert_syntax 'hextoint',
'Transact-SQL',          2 ,
'        hexadecimal string.'
go
exec insert_syntax 'hextoint',
'Transact-SQL',          3 ,
'  hextoint (hexadecimal_string)'
go
exec insert_syntax 'host_id',
'Transact-SQL',          1 ,
'host_id - Returns the host process ID or the client process.'
go
exec insert_syntax 'host_id',
'Transact-SQL',          2 ,
'  host_id()'
go
exec insert_syntax 'host_name',
'Transact-SQL',          1 ,
'host_name - Returns the current host computer name of the client process.'
go
exec insert_syntax 'host_name',
'Transact-SQL',          2 ,
'  host_name()'
go
exec insert_syntax 'if...else',
'Transact-SQL',          1 ,
'if...else - Imposes conditions on the execution of a SQL statement.'
go
exec insert_syntax 'if...else',
'Transact-SQL',          2 ,
'  if logical_expression [plan "abstract plan"]'
go
exec insert_syntax 'if...else',
'Transact-SQL',          3 ,
'     statements'
go
exec insert_syntax 'if...else',
'Transact-SQL',          4 ,
'     [else'
go
exec insert_syntax 'if...else',
'Transact-SQL',          5 ,
'     [if logical_expression] [plan "abstract plan"]'
go
exec insert_syntax 'if...else',
'Transact-SQL',          6 ,
'     statement]'
go
exec insert_syntax 'index_col',
'Transact-SQL',          1 ,
'index_col - Returns the name of the indexed column in the specified table or'
go
exec insert_syntax 'index_col',
'Transact-SQL',          2 ,
'        view.'
go
exec insert_syntax 'index_col',
'Transact-SQL',          3 ,
'  index_col (object_name, index_id, key_# [, user_id])'
go
exec insert_syntax 'index_colorder',
'Transact-SQL',          1 ,
'index_colorder - Returns the column order.'
go
exec insert_syntax 'index_colorder',
'Transact-SQL',          2 ,
'  index_colorder (object_name, index_id, key_#'
go
exec insert_syntax 'index_colorder',
'Transact-SQL',          3 ,
'     [, user_id])'
go
exec insert_syntax 'insert',
'Transact-SQL',          1 ,
'insert - Adds new rows to a table or view.'
go
exec insert_syntax 'insert',
'Transact-SQL',          2 ,
'  insert [into]'
go
exec insert_syntax 'insert',
'Transact-SQL',          3 ,
'     [database.[owner.]]{table_name|view_name}'
go
exec insert_syntax 'insert',
'Transact-SQL',          4 ,
'     [(column_list)]'
go
exec insert_syntax 'insert',
'Transact-SQL',          5 ,
'     {values (expression [, expression]...)'
go
exec insert_syntax 'insert',
'Transact-SQL',          6 ,
'         |select_statement [plan "abstract plan"] }'
go
exec insert_syntax 'inttohex',
'Transact-SQL',          1 ,
'inttohex - Returns the platform-independent hexadecimal equivalent of the'
go
exec insert_syntax 'inttohex',
'Transact-SQL',          2 ,
'        specified integer.'
go
exec insert_syntax 'inttohex',
'Transact-SQL',          3 ,
'  inttohex (integer_expression)'
go
exec insert_syntax 'is_sec_service_on',
'Transact-SQL',          1 ,
'is_sec_service_on - Returns 1 if the security service is active and 0 if it'
go
exec insert_syntax 'is_sec_service_on',
'Transact-SQL',          2 ,
'        is not.'
go
exec insert_syntax 'is_sec_service_on',
'Transact-SQL',          3 ,
'  is_sec_service_on(security_service_nm)'
go
exec insert_syntax 'isnull',
'Transact-SQL',          1 ,
'isnull - Substitutes the value specified in expression2 when expression1'
go
exec insert_syntax 'isnull',
'Transact-SQL',          2 ,
'        evaluates to NULL.'
go
exec insert_syntax 'isnull',
'Transact-SQL',          3 ,
'  isnull(expression1, expression2)'
go
exec insert_syntax 'kill',
'Transact-SQL',          1 ,
'kill - Kills a process.'
go
exec insert_syntax 'kill',
'Transact-SQL',          2 ,
'  kill spid'
go
exec insert_syntax 'lct_admin',
'Transact-SQL',          1 ,
'lct_admin - Manages the last-chance threshold. Returns the current value of'
go
exec insert_syntax 'lct_admin',
'Transact-SQL',          2 ,
'        the last-chance threshold. Aborts transactions in a transaction'
go
exec insert_syntax 'lct_admin',
'Transact-SQL',          3 ,
'        log that has reached its last-chance threshold.'
go
exec insert_syntax 'lct_admin',
'Transact-SQL',          4 ,
'  lct_admin({{"lastchance" | "logfull" }, database_id'
go
exec insert_syntax 'lct_admin',
'Transact-SQL',          5 ,
'     |"reserve", {log_pages | 0 }'
go
exec insert_syntax 'lct_admin',
'Transact-SQL',          6 ,
'     | "abort", process-id [, database-id]})'
go
exec insert_syntax 'license_enabled',
'Transact-SQL',          1 ,
'license_enabled - Returns 1 if a feature''s license is enabled, 0 if the'
go
exec insert_syntax 'license_enabled',
'Transact-SQL',          2 ,
'        license is not enabled, or null if you specify an invalid'
go
exec insert_syntax 'license_enabled',
'Transact-SQL',          3 ,
'        license name.'
go
exec insert_syntax 'license_enabled',
'Transact-SQL',          4 ,
'  license_enabled("ase_server" | "ase_ha" | "ase_dtm" |'
go
exec insert_syntax 'license_enabled',
'Transact-SQL',          5 ,
'     "ase_java" | "ase_asm")'
go
exec insert_syntax 'load database',
'Transact-SQL',          1 ,
'load database - Loads a backup copy of a user database, including its'
go
exec insert_syntax 'load database',
'Transact-SQL',          2 ,
'        transaction log, that was created with dump database.'
go
exec insert_syntax 'load database',
'Transact-SQL',          3 ,
'  load database database_name'
go
exec insert_syntax 'load database',
'Transact-SQL',          4 ,
'     from [compress::]stripe_device [at backup_server_name ]'
go
exec insert_syntax 'load database',
'Transact-SQL',          5 ,
'         [density = density_value,'
go
exec insert_syntax 'load database',
'Transact-SQL',          6 ,
'         blocksize = number_bytes,'
go
exec insert_syntax 'load database',
'Transact-SQL',          7 ,
'         dumpvolume = volume_name,'
go
exec insert_syntax 'load database',
'Transact-SQL',          8 ,
'         file = file_name]'
go
exec insert_syntax 'load database',
'Transact-SQL',          9 ,
'     [stripe on stripe_device [at backup_server_name ]'
go
exec insert_syntax 'load database',
'Transact-SQL',          10,
'              [density = density_value,'
go
exec insert_syntax 'load database',
'Transact-SQL',          11,
'          blocksize = number_bytes,'
go
exec insert_syntax 'load database',
'Transact-SQL',          12,
'          dumpvolume = volume_name,'
go
exec insert_syntax 'load database',
'Transact-SQL',          13,
'          file = file_name]'
go
exec insert_syntax 'load database',
'Transact-SQL',          14,
'     [[stripe on stripe_device [at backup_server_name ]'
go
exec insert_syntax 'load database',
'Transact-SQL',          15,
'         [density = density_value,'
go
exec insert_syntax 'load database',
'Transact-SQL',          16,
'          blocksize = number_bytes,'
go
exec insert_syntax 'load database',
'Transact-SQL',          17,
'          dumpvolume = volume_name,'
go
exec insert_syntax 'load database',
'Transact-SQL',          18,
'          file = file_name]]...]'
go
exec insert_syntax 'load database',
'Transact-SQL',          19,
'     [with {'
go
exec insert_syntax 'load database',
'Transact-SQL',          20,
'         density = density_value,'
go
exec insert_syntax 'load database',
'Transact-SQL',          21,
'         blocksize = number_bytes,'
go
exec insert_syntax 'load database',
'Transact-SQL',          22,
'         dumpvolume = volume_name,'
go
exec insert_syntax 'load database',
'Transact-SQL',          23,
'         file = file_name,'
go
exec insert_syntax 'load database',
'Transact-SQL',          24,
'         [dismount | nodismount],'
go
exec insert_syntax 'load database',
'Transact-SQL',          25,
'         [nounload | unload],'
go
exec insert_syntax 'load database',
'Transact-SQL',          26,
'         listonly [= full],'
go
exec insert_syntax 'load database',
'Transact-SQL',          27,
'         headeronly,'
go
exec insert_syntax 'load database',
'Transact-SQL',          28,
'         notify = {client | operator_console}'
go
exec insert_syntax 'load database',
'Transact-SQL',          29,
'         }]]'
go
exec insert_syntax 'load transaction',
'Transact-SQL',          1 ,
'load transaction - Loads a backup copy of the transaction log that was'
go
exec insert_syntax 'load transaction',
'Transact-SQL',          2 ,
'        created with the dump transaction command.'
go
exec insert_syntax 'load transaction',
'Transact-SQL',          3 ,
'  load tran[saction] database_name'
go
exec insert_syntax 'load transaction',
'Transact-SQL',          4 ,
'     from [compress::]stripe_device [at backup_server_name]'
go
exec insert_syntax 'load transaction',
'Transact-SQL',          5 ,
'         [density = density_value,'
go
exec insert_syntax 'load transaction',
'Transact-SQL',          6 ,
'          blocksize = number_bytes,'
go
exec insert_syntax 'load transaction',
'Transact-SQL',          7 ,
'          dumpvolume = volume_name,'
go
exec insert_syntax 'load transaction',
'Transact-SQL',          8 ,
'          file = file_name]'
go
exec insert_syntax 'load transaction',
'Transact-SQL',          9 ,
'     [stripe on stripe_device [at backup_server_name]'
go
exec insert_syntax 'load transaction',
'Transact-SQL',          10,
'         [density = density_value,'
go
exec insert_syntax 'load transaction',
'Transact-SQL',          11,
'          blocksize = number_bytes,'
go
exec insert_syntax 'load transaction',
'Transact-SQL',          12,
'          dumpvolume = volume_name,'
go
exec insert_syntax 'load transaction',
'Transact-SQL',          13,
'          file = file_name]'
go
exec insert_syntax 'load transaction',
'Transact-SQL',          14,
'     [[stripe on stripe_device [at backup_server_name]'
go
exec insert_syntax 'load transaction',
'Transact-SQL',          15,
'         [density = density_value,'
go
exec insert_syntax 'load transaction',
'Transact-SQL',          16,
'          blocksize = number_bytes,'
go
exec insert_syntax 'load transaction',
'Transact-SQL',          17,
'          dumpvolume = volume_name,'
go
exec insert_syntax 'load transaction',
'Transact-SQL',          18,
'          file = file_name]]...]'
go
exec insert_syntax 'load transaction',
'Transact-SQL',          19,
'     [with {'
go
exec insert_syntax 'load transaction',
'Transact-SQL',          20,
'         density = density_value,'
go
exec insert_syntax 'load transaction',
'Transact-SQL',          21,
'         blocksize = number_bytes,'
go
exec insert_syntax 'load transaction',
'Transact-SQL',          22,
'         dumpvolume = volume_name,'
go
exec insert_syntax 'load transaction',
'Transact-SQL',          23,
'         file = file_name,'
go
exec insert_syntax 'load transaction',
'Transact-SQL',          24,
'         [dismount | nodismount],'
go
exec insert_syntax 'load transaction',
'Transact-SQL',          25,
'         [nounload | unload],'
go
exec insert_syntax 'load transaction',
'Transact-SQL',          26,
'         listonly [= full],'
go
exec insert_syntax 'load transaction',
'Transact-SQL',          27,
'         headeronly,'
go
exec insert_syntax 'load transaction',
'Transact-SQL',          28,
'         notify = {client | operator_console}'
go
exec insert_syntax 'load transaction',
'Transact-SQL',          29,
'         until_time = datetime}]]'
go
exec insert_syntax 'lock table',
'Transact-SQL',          1 ,
'lock table - Explicitly locks a table within a transaction.'
go
exec insert_syntax 'lock table',
'Transact-SQL',          2 ,
'  lock table table_name in {share | exclusive } mode'
go
exec insert_syntax 'lock table',
'Transact-SQL',          3 ,
'             [ wait [ numsecs ] | nowait ]'
go
exec insert_syntax 'log',
'Transact-SQL',          1 ,
'log - Returns the natural logarithm of the specified number.'
go
exec insert_syntax 'log',
'Transact-SQL',          2 ,
'  log(approx_numeric)'
go
exec insert_syntax 'log10',
'Transact-SQL',          1 ,
'log10 - Returns the base 10 logarithm of the specified number.'
go
exec insert_syntax 'log10',
'Transact-SQL',          2 ,
'  log10(approx_numeric)'
go
exec insert_syntax 'lower',
'Transact-SQL',          1 ,
'lower - Returns the lowercase equivalent of the specified expression.'
go
exec insert_syntax 'lower',
'Transact-SQL',          2 ,
'  lower(char_expr|uchar_expr)'
go
exec insert_syntax 'ltrim',
'Transact-SQL',          1 ,
'ltrim - Returns the specified expression, trimmed of leading blanks.'
go
exec insert_syntax 'ltrim',
'Transact-SQL',          2 ,
'  ltrim(char_expr|uchar_expr)'
go
exec insert_syntax 'max',
'Transact-SQL',          1 ,
'max - Returns the highest value in an expression.'
go
exec insert_syntax 'max',
'Transact-SQL',          2 ,
'  max(expression)'
go
exec insert_syntax 'min',
'Transact-SQL',          1 ,
'min - Returns the lowest value in a column.'
go
exec insert_syntax 'min',
'Transact-SQL',          2 ,
'  min(expression)'
go
exec insert_syntax 'mount', 
'Transact-SQL',          1 , 
'mount - Use the mount command to attach the database to the destination' 
go 
exec insert_syntax 'mount', 
'Transact-SQL',          2 , 
'or secondary Adaptive Server.' 
go 
exec insert_syntax 'mount', 
'Transact-SQL',          3 , 
'mount database all from <manifest file> [with listonly]' 
go 
exec insert_syntax 'mut_excl_roles',
'Transact-SQL',          1 ,
'mut_excl_roles - Returns information about the mutual exclusivity between'
go
exec insert_syntax 'mut_excl_roles',
'Transact-SQL',          2 ,
'        two roles.'
go
exec insert_syntax 'mut_excl_roles',
'Transact-SQL',          3 ,
'  mut_excl_roles (role1, role2 [membership |'
go
exec insert_syntax 'mut_excl_roles',
'Transact-SQL',          4 ,
'     activation])'
go
exec insert_syntax 'nullif',
'Transact-SQL',          1 ,
'nullif - Supports conditional SQL expressions; can be used anywhere a value'
go
exec insert_syntax 'nullif',
'Transact-SQL',          2 ,
'        expression can be used; alternative for a case expression.'
go
exec insert_syntax 'nullif',
'Transact-SQL',          3 ,
'  nullif(expression, expression)'
go
exec insert_syntax 'object_id',
'Transact-SQL',          1 ,
'object_id - Returns the object ID of the specified object.'
go
exec insert_syntax 'object_id',
'Transact-SQL',          2 ,
'  object_id(object_name)'
go
exec insert_syntax 'object_name',
'Transact-SQL',          1 ,
'object_name - Returns the name of the object whose object ID is specified.'
go
exec insert_syntax 'object_name',
'Transact-SQL',          2 ,
'  object_name(object_id[, database_id])'
go
exec insert_syntax 'online database',
'Transact-SQL',          1 ,
'online database - Marks a database available for public use after a normal'
go
exec insert_syntax 'online database',
'Transact-SQL',          2 ,
'        load sequence; if needed, upgrades a loaded database to the'
go
exec insert_syntax 'online database',
'Transact-SQL',          3 ,
'        current release of Adaptive Server; brings a database'
go
exec insert_syntax 'online database',
'Transact-SQL',          4 ,
'        online after loading a transaction log dumped with'
go
exec insert_syntax 'online database',
'Transact-SQL',          5 ,
'        the standby_access option.'
go
exec insert_syntax 'online database',
'Transact-SQL',          6 ,
'  online database database_name [for standby_access]'
go
exec insert_syntax 'open',
'Transact-SQL',          1 ,
'open - Opens a cursor for processing.'
go
exec insert_syntax 'open',
'Transact-SQL',          2 ,
'  open cursor_name'
go
exec insert_syntax 'order by Clause',
'Transact-SQL',          1 ,
'order by Clause - Returns query results in the specified column(s) in sorted'
go
exec insert_syntax 'order by Clause',
'Transact-SQL',          2 ,
'        order.'
go
exec insert_syntax 'order by Clause',
'Transact-SQL',          3 ,
'  [Start of select statement]'
go
exec insert_syntax 'order by Clause',
'Transact-SQL',          4 ,
'     [order by {[table_name.| view_name.]column_name'
go
exec insert_syntax 'order by Clause',
'Transact-SQL',          5 ,
'         | select_list_number | expression} [asc | desc]'
go
exec insert_syntax 'order by Clause',
'Transact-SQL',          6 ,
'     [,{[table_name.| view_name.] column_name'
go
exec insert_syntax 'order by Clause',
'Transact-SQL',          7 ,
'           select_list_number|expression} [asc'
go
exec insert_syntax 'order by Clause',
'Transact-SQL',          8 ,
'              |desc]]...]'
go
exec insert_syntax 'order by Clause',
'Transact-SQL',          9 ,
'     [End of select statement]'
go
exec insert_syntax 'patindex',
'Transact-SQL',          1 ,
'patindex - Returns the starting position of the first occurrence of a'
go
exec insert_syntax 'patindex',
'Transact-SQL',          2 ,
'        specified pattern.'
go
exec insert_syntax 'patindex',
'Transact-SQL',          3 ,
'  patindex("%pattern%", char_expr|uchar_expr [, using'
go
exec insert_syntax 'patindex',
'Transact-SQL',          4 ,
'     {bytes | characters | chars} ] )'
go
exec insert_syntax 'pi',
'Transact-SQL',          1 ,
'pi - Returns the constant value 3.1415926535897936.'
go
exec insert_syntax 'pi',
'Transact-SQL',          2 ,
'  pi()'
go
exec insert_syntax 'power',
'Transact-SQL',          1 ,
'power - Returns the value that results from raising the specified number to'
go
exec insert_syntax 'power',
'Transact-SQL',          2 ,
'        a given power.'
go
exec insert_syntax 'power',
'Transact-SQL',          3 ,
'  power(value, power)'
go
exec insert_syntax 'prepare transaction',
'Transact-SQL',          1 ,
'prepare transaction - Used by DB-Library in a two-phase commit application'
go
exec insert_syntax 'prepare transaction',
'Transact-SQL',          2 ,
'        to see if a server is prepared to commit a transaction.'
go
exec insert_syntax 'prepare transaction',
'Transact-SQL',          3 ,
'  prepare tran[saction]'
go
exec insert_syntax 'print',
'Transact-SQL',          1 ,
'print - Prints a user-defined message on the user''s screen.'
go
exec insert_syntax 'print',
'Transact-SQL',          2 ,
'  print'
go
exec insert_syntax 'print',
'Transact-SQL',          3 ,
'     {format_string | @local_variable |'
go
exec insert_syntax 'print',
'Transact-SQL',          4 ,
'     @@global_variable}'
go
exec insert_syntax 'print',
'Transact-SQL',          5 ,
'         [, arg_list]'
go
exec insert_syntax 'proc_role',
'Transact-SQL',          1 ,
'proc_role - Returns information about whether the user has been granted the'
go
exec insert_syntax 'proc_role',
'Transact-SQL',          2 ,
'        specified role.'
go
exec insert_syntax 'proc_role',
'Transact-SQL',          3 ,
'  proc_role ("role_name")'
go
exec insert_syntax 'ptn_data_pgs',
'Transact-SQL',          1 ,
'ptn_data_pgs - Returns the number of data pages used by a partition.'
go
exec insert_syntax 'ptn_data_pgs',
'Transact-SQL',          2 ,
'  ptn_data_pgs(object_id, partition_id)'
go
exec insert_syntax 'quiesce database',
'Transact-SQL',          1 ,
'quiesce database - Suspends and resumes updates to a specified list of'
go
exec insert_syntax 'quiesce database',
'Transact-SQL',          2 ,
'        databases.'
go
exec insert_syntax 'quiesce database',
'Transact-SQL',          3 ,
'  quiesce database tag_name hold dbname [, dbname] ...'
go
exec insert_syntax 'quiesce database',
'Transact-SQL',          4 ,
'  [for external dump]'
go
exec insert_syntax 'quiesce database',
'Transact-SQL',          5 ,
'     or'
go
exec insert_syntax 'quiesce database',
'Transact-SQL',          6 ,
'  Quiesce database tag_name release'
go
exec insert_syntax 'radians',
'Transact-SQL',          1 ,
'radians - Returns the size, in radians, of an angle with the specified'
go
exec insert_syntax 'radians',
'Transact-SQL',          2 ,
'        number of degrees.'
go
exec insert_syntax 'radians',
'Transact-SQL',          3 ,
'  radians(numeric)'
go
exec insert_syntax 'raiserror',
'Transact-SQL',          1 ,
'raiserror - Prints a user-defined error message on the user''s screen and'
go
exec insert_syntax 'raiserror',
'Transact-SQL',          2 ,
'        sets a system flag to record that an error condition has occurred.'
go
exec insert_syntax 'raiserror',
'Transact-SQL',          3 ,
'  raiserror error_number'
go
exec insert_syntax 'raiserror',
'Transact-SQL',          4 ,
'     [{format_string | @local_variable}] [, arg_list]'
go
exec insert_syntax 'raiserror',
'Transact-SQL',          5 ,
'     [with errordata restricted_select_list]'
go
exec insert_syntax 'rand',
'Transact-SQL',          1 ,
'rand - Returns a random value between 0 and 1, which is generated using the'
go
exec insert_syntax 'rand',
'Transact-SQL',          2 ,
'        specified seed value.'
go
exec insert_syntax 'rand',
'Transact-SQL',          3 ,
'  rand([integer])'
go
exec insert_syntax 'readtext',
'Transact-SQL',          1 ,
'readtext - Reads text and image values, starting from a specified offset and'
go
exec insert_syntax 'readtext',
'Transact-SQL',          2 ,
'        reading a specified number of bytes or characters.'
go
exec insert_syntax 'readtext',
'Transact-SQL',          3 ,
'  readtext [[database.]owner.]table_name.column_name'
go
exec insert_syntax 'readtext',
'Transact-SQL',          4 ,
'     text_pointer offset size'
go
exec insert_syntax 'readtext',
'Transact-SQL',          5 ,
'     [holdlock | noholdlock] [readpast]'
go
exec insert_syntax 'readtext',
'Transact-SQL',          6 ,
'     [using {bytes | chars | characters}]'
go
exec insert_syntax 'readtext',
'Transact-SQL',          7 ,
'     [at isolation {'
go
exec insert_syntax 'readtext',
'Transact-SQL',          8 ,
'             [ read uncommitted | 0 ] |'
go
exec insert_syntax 'readtext',
'Transact-SQL',          9 ,
'             [ read committed | 1 ] |'
go
exec insert_syntax 'readtext',
'Transact-SQL',          10,
'             [ repeatable read | 2 ]|'
go
exec insert_syntax 'readtext',
'Transact-SQL',          11,
'             [ serializable | 3 ] } ]'
go
exec insert_syntax 'reconfigure',
'Transact-SQL',          1 ,
'reconfigure - The reconfigure command currently has no effect; it is'
go
exec insert_syntax 'reconfigure',
'Transact-SQL',          2 ,
'        included to allow existing scripts to run without'
go
exec insert_syntax 'reconfigure',
'Transact-SQL',          3 ,
'        modification. In previous releases, reconfigure'
go
exec insert_syntax 'reconfigure',
'Transact-SQL',          4 ,
'        was required after the system procedure'
go
exec insert_syntax 'reconfigure',
'Transact-SQL',          5 ,
'        sp_configure to implement new configuration parameter settings.'
go
exec insert_syntax 'reconfigure',
'Transact-SQL',          6 ,
'  reconfigure'
go
exec insert_syntax 'remove java',
'Transact-SQL',          1 ,
'remove java - Removes one or more Java-SQL classes, packages, or JARs from a'
go
exec insert_syntax 'remove java',
'Transact-SQL',          2 ,
'        database. Use when Java classes are installed in the database.'
go
exec insert_syntax 'remove java',
'Transact-SQL',          3 ,
'        Refer to Java in Adaptive Server Enterprise for more information.'
go
exec insert_syntax 'remove java',
'Transact-SQL',          4 ,
'  remove java'
go
exec insert_syntax 'remove java',
'Transact-SQL',          5 ,
'     class class_name [, class_name]...'
go
exec insert_syntax 'remove java',
'Transact-SQL',          6 ,
'     | package package_name [, package_name]...'
go
exec insert_syntax 'remove java',
'Transact-SQL',          7 ,
'     | jar jar_name [, jar_name]...[retain classes]'
go
exec insert_syntax 'reorg',
'Transact-SQL',          1 ,
'reorg - Reclaims unused space on pages, removes row forwarding, or rewrites'
go
exec insert_syntax 'reorg',
'Transact-SQL',          2 ,
'        all rows in the table to new pages, depending on the option used.'
go
exec insert_syntax 'reorg',
'Transact-SQL',          3 ,
'  reorg reclaim_space tablename [indexname]'
go
exec insert_syntax 'reorg',
'Transact-SQL',          4 ,
'     [with {resume, time = no_of_minutes}]'
go
exec insert_syntax 'reorg',
'Transact-SQL',          5 ,
'     reorg forwarded_rows tablename'
go
exec insert_syntax 'reorg',
'Transact-SQL',          6 ,
'     [with {resume,time = no_of_minutes}]'
go
exec insert_syntax 'reorg',
'Transact-SQL',          7 ,
'     reorg compact tablename'
go
exec insert_syntax 'reorg',
'Transact-SQL',          8 ,
'     [with {resume, time = no_of_minutes}]'
go
exec insert_syntax 'reorg',
'Transact-SQL',          9 ,
'     reorg rebuild [ tablename | indexname ]'
go
exec insert_syntax 'replicate',
'Transact-SQL',          1 ,
'replicate - Returns a string consisting of the specified expression repeated'
go
exec insert_syntax 'replicate',
'Transact-SQL',          2 ,
'        a given number of times.'
go
exec insert_syntax 'replicate',
'Transact-SQL',          3 ,
'  replicate (char_expr|uchar_expr, integer_expr)'
go
exec insert_syntax 'reserved_pgs',
'Transact-SQL',          1 ,
'reserved_pgs - Returns the number of pages allocated to the specified table'
go
exec insert_syntax 'reserved_pgs',
'Transact-SQL',          2 ,
'        or index, and reports pages used for internal structures.'
go
exec insert_syntax 'reserved_pgs',
'Transact-SQL',          3 ,
'  reserved_pgs(object_id, {doampg|ioampg})'
go
exec insert_syntax 'return',
'Transact-SQL',          1 ,
'return - Exits from a batch or procedure unconditionally and provides an'
go
exec insert_syntax 'return',
'Transact-SQL',          2 ,
'        optional return status. Statements following return are not executed.'
go
exec insert_syntax 'return',
'Transact-SQL',          3 ,
'  return [integer_expression] [plan "abstract plan"]'
go
exec insert_syntax 'reverse',
'Transact-SQL',          1 ,
'reverse - Returns the specified string with characters listed in reverse'
go
exec insert_syntax 'reverse',
'Transact-SQL',          2 ,
'        order.'
go
exec insert_syntax 'reverse',
'Transact-SQL',          3 ,
'  reverse(expression|uchar_expr)'
go
exec insert_syntax 'revoke',
'Transact-SQL',          1 ,
'revoke - Revokes permissions or roles from users or roles.'
go
exec insert_syntax 'revoke',
'Transact-SQL',          2 ,
'  To revoke permission to access database objects:'
go
exec insert_syntax 'revoke',
'Transact-SQL',          3 ,
'     revoke [grant option for]'
go
exec insert_syntax 'revoke',
'Transact-SQL',          4 ,
'     {all [privileges] | permission_list}'
go
exec insert_syntax 'revoke',
'Transact-SQL',          5 ,
'     on { table_name [(column_list)]'
go
exec insert_syntax 'revoke',
'Transact-SQL',          6 ,
'         | view_name [(column_list)]'
go
exec insert_syntax 'revoke',
'Transact-SQL',          7 ,
'         | stored_procedure_name}'
go
exec insert_syntax 'revoke',
'Transact-SQL',          8 ,
'     from {public | name_list | role_name}'
go
exec insert_syntax 'revoke',
'Transact-SQL',          9 ,
'     [cascade]'
go
exec insert_syntax 'revoke',
'Transact-SQL',          10,
'     To revoke permission to create database objects, execute set proxy, or'
go
exec insert_syntax 'revoke',
'Transact-SQL',          11,
'     execute set session authorization:'
go
exec insert_syntax 'revoke',
'Transact-SQL',          12,
'     revoke {all [privileges] | command_list}'
go
exec insert_syntax 'revoke',
'Transact-SQL',          13,
'     from {public | name_list | role_name}'
go
exec insert_syntax 'revoke',
'Transact-SQL',          14,
'     To revoke a role from a user or another role:'
go
exec insert_syntax 'revoke',
'Transact-SQL',          15,
'     revoke role {role_name [, role_name ...]} from'
go
exec insert_syntax 'revoke',
'Transact-SQL',          16,
'     {grantee [, grantee ...]}'
go
exec insert_syntax 'right',
'Transact-SQL',          1 ,
'right - The rightmost part of the expression with the specified number of'
go
exec insert_syntax 'right',
'Transact-SQL',          2 ,
'        characters.'
go
exec insert_syntax 'right',
'Transact-SQL',          3 ,
'  right(expression, integer_expr)'
go
exec insert_syntax 'role_contain',
'Transact-SQL',          1 ,
'role_contain - Returns 1 if role2 contains role1.'
go
exec insert_syntax 'role_contain',
'Transact-SQL',          2 ,
'  role_contain("role1", "role2")'
go
exec insert_syntax 'role_id',
'Transact-SQL',          1 ,
'role_id - Returns the system role ID of the role whose name you specify.'
go
exec insert_syntax 'role_id',
'Transact-SQL',          2 ,
'  role_id("role_name")'
go
exec insert_syntax 'role_name',
'Transact-SQL',          1 ,
'role_name - Returns the name of a role whose system role ID you specify.'
go
exec insert_syntax 'role_name',
'Transact-SQL',          2 ,
'  role_name(role_id)'
go
exec insert_syntax 'rollback',
'Transact-SQL',          1 ,
'rollback - Rolls back a user-defined transaction to the named savepoint in'
go
exec insert_syntax 'rollback',
'Transact-SQL',          2 ,
'        the transaction or to the beginning of the transaction.'
go
exec insert_syntax 'rollback',
'Transact-SQL',          3 ,
'  rollback [tran | transaction | work]'
go
exec insert_syntax 'rollback',
'Transact-SQL',          4 ,
'     [transaction_name | savepoint_name]'
go
exec insert_syntax 'rollback trigger',
'Transact-SQL',          1 ,
'rollback trigger - Rolls back the work done in a trigger, including the data'
go
exec insert_syntax 'rollback trigger',
'Transact-SQL',          2 ,
'        modification that caused the trigger to fire, and issues an'
go
exec insert_syntax 'rollback trigger',
'Transact-SQL',          3 ,
'        optional raiserror statement.'
go
exec insert_syntax 'rollback trigger',
'Transact-SQL',          4 ,
'  rollback trigger'
go
exec insert_syntax 'rollback trigger',
'Transact-SQL',          5 ,
'     [with raiserror_statement]'
go
exec insert_syntax 'round',
'Transact-SQL',          1 ,
'round - Returns the value of the specified number, rounded to a given number'
go
exec insert_syntax 'round',
'Transact-SQL',          2 ,
'        of decimal places.'
go
exec insert_syntax 'round',
'Transact-SQL',          3 ,
'  round(number, decimal_places)'
go
exec insert_syntax 'rowcnt',
'Transact-SQL',          1 ,
'rowcnt - Returns an estimate of the number of rows in the specified table.'
go
exec insert_syntax 'rowcnt',
'Transact-SQL',          2 ,
'  rowcnt(sysindexes.doampg)'
go
exec insert_syntax 'rtrim',
'Transact-SQL',          1 ,
'rtrim - Returns the specified expression, trimmed of trailing blanks.'
go
exec insert_syntax 'rtrim',
'Transact-SQL',          2 ,
'  rtrim(char_expr|uchar_expr)'
go
exec insert_syntax 'save transaction',
'Transact-SQL',          1 ,
'save transaction - Sets a savepoint within a transaction.'
go
exec insert_syntax 'save transaction',
'Transact-SQL',          2 ,
'  save transaction savepoint_name'
go
exec insert_syntax 'select',
'Transact-SQL',          1 ,
'select - Retrieves rows from database objects.'
go
exec insert_syntax 'select',
'Transact-SQL',          2 ,
'  select  ::='
go
exec insert_syntax 'select',
'Transact-SQL',          3 ,
'     select   [ all | distinct ] select_list'
go
exec insert_syntax 'select',
'Transact-SQL',          4 ,
'     [into_clause]'
go
exec insert_syntax 'select',
'Transact-SQL',          5 ,
'     [from_clause]'
go
exec insert_syntax 'select',
'Transact-SQL',          6 ,
'     [where_clause]'
go
exec insert_syntax 'select',
'Transact-SQL',          7 ,
'     [group_by_clause]'
go
exec insert_syntax 'select',
'Transact-SQL',          8 ,
'     [having_clause]'
go
exec insert_syntax 'select',
'Transact-SQL',          9 ,
'     [order_by_clause]'
go
exec insert_syntax 'select',
'Transact-SQL',          10,
'     [compute_clause]'
go
exec insert_syntax 'select',
'Transact-SQL',          11,
'     [read_only_clause]'
go
exec insert_syntax 'select',
'Transact-SQL',          12,
'     [isolation_clause]'
go
exec insert_syntax 'select',
'Transact-SQL',          13,
'     [browse_clause]'
go
exec insert_syntax 'select',
'Transact-SQL',          14,
'     [plan_clause]'
go
exec insert_syntax 'select',
'Transact-SQL',          15,
'     select_list ::='
go
exec insert_syntax 'select',
'Transact-SQL',          16,
'     For details, see "Keywords and options" in the SAG'
go
exec insert_syntax 'select',
'Transact-SQL',          17,
'     into_clause ::='
go
exec insert_syntax 'select',
'Transact-SQL',          18,
'     into [[database.]owner.]table_name'
go
exec insert_syntax 'select',
'Transact-SQL',          19,
'     [  lock {datarows | datapages | allpages } ]'
go
exec insert_syntax 'select',
'Transact-SQL',          20,
'     [ with into_option [, into_option] ...]'
go
exec insert_syntax 'select',
'Transact-SQL',          21,
'   into_option ::='
go
exec insert_syntax 'select',
'Transact-SQL',          22,
'   | max_rows_per_page = num_rows'
go
exec insert_syntax 'select',
'Transact-SQL',          23,
'   | exp_row_size = num_bytes'
go
exec insert_syntax 'select',
'Transact-SQL',          24,
'   | reservepagegap = num_pages'
go
exec insert_syntax 'select',
'Transact-SQL',          25,
'   | identity_gap = gap'
go
exec insert_syntax 'select',
'Transact-SQL',          26,
'     from_clause ::='
go
exec insert_syntax 'select',
'Transact-SQL',          27,
'     from table_reference [,table_reference]...'
go
exec insert_syntax 'select',
'Transact-SQL',          28,
'     table_reference ::='
go
exec insert_syntax 'select',
'Transact-SQL',          29,
'     table_view_name | ANSI_join'
go
exec insert_syntax 'select',
'Transact-SQL',          30,
'     table_view_name ::='
go
exec insert_syntax 'select',
'Transact-SQL',          31,
'     	[[database.]owner.] {table_name | view_name}'
go
exec insert_syntax 'select',
'Transact-SQL',          32,
'     	[as] [correlation_name]'
go
exec insert_syntax 'select',
'Transact-SQL',          33,
'    	[index {index_name | table_name }]'
go
exec insert_syntax 'select',
'Transact-SQL',          34,
'    	[parallel [degree_of_parallelism]]'
go
exec insert_syntax 'select',
'Transact-SQL',          35,
'     	[prefetch size ][lru | mru]}'
go
exec insert_syntax 'select',
'Transact-SQL',          36,
'    	[holdlock | noholdlock]'
go
exec insert_syntax 'select',
'Transact-SQL',          37,
'   	[readpast]'
go
exec insert_syntax 'select',
'Transact-SQL',          38,
'    	[shared]'
go
exec insert_syntax 'select',
'Transact-SQL',          39,
'    	ANSI_join ::='
go
exec insert_syntax 'select',
'Transact-SQL',          40,
'    	table_reference join_type join table_reference join_condition'
go
exec insert_syntax 'select',
'Transact-SQL',          41,
'   	join_type ::= inner | left [outer] | right [outer]'
go
exec insert_syntax 'select',
'Transact-SQL',          42,
'     	join_conditions ::= on search_conditions'
go
exec insert_syntax 'select',
'Transact-SQL',          43,
'     where_clause ::='
go
exec insert_syntax 'select',
'Transact-SQL',          44,
'     where search_conditions'
go
exec insert_syntax 'select',
'Transact-SQL',          45,
'     group_by_clause ::='
go
exec insert_syntax 'select',
'Transact-SQL',          46,
'     group by [all] aggregate_free_expression'
go
exec insert_syntax 'select',
'Transact-SQL',          47,
'     [, aggregate_free_expression]...'
go
exec insert_syntax 'select',
'Transact-SQL',          48,
'     having_clause ::='
go
exec insert_syntax 'select',
'Transact-SQL',          49,
'     having search_conditions'
go
exec insert_syntax 'select',
'Transact-SQL',          50,
'     order_by_clause ::='
go
exec insert_syntax 'select',
'Transact-SQL',          51,
'     order by sort_clause [, sort_clause]...'
go
exec insert_syntax 'select',
'Transact-SQL',          52,
'	sort_clause ::='
go
exec insert_syntax 'select',
'Transact-SQL',          53,
'   	{ [[[database.]owner.]{table_name.|view_name.}]column_name'
go
exec insert_syntax 'select',
'Transact-SQL',          54,
'    	| select_list_number | expression }'
go
exec insert_syntax 'select',
'Transact-SQL',          55,
'  	[asc | desc]'
go
exec insert_syntax 'select',
'Transact-SQL',          56,
'     compute_clause ::='
go
exec insert_syntax 'select',
'Transact-SQL',          57,
'     compute row_aggregate(column_name)'
go
exec insert_syntax 'select',
'Transact-SQL',          58,
'     [, row_aggregate(column_name)]...'
go
exec insert_syntax 'select',
'Transact-SQL',          59,
'     [by column_name [, column_name]...]'
go
exec insert_syntax 'select',
'Transact-SQL',          60,
'     read_only_clause ::='
go
exec insert_syntax 'select',
'Transact-SQL',          61,
'     for {read only | update [of column_name_list]}'
go
exec insert_syntax 'select',
'Transact-SQL',          62,
'     isolation_clause ::='
go
exec insert_syntax 'select',
'Transact-SQL',          63,
'     at isolation'
go
exec insert_syntax 'select',
'Transact-SQL',          64,
'             { read uncommitted | 0 }'
go
exec insert_syntax 'select',
'Transact-SQL',          65,
'             | { read committed | 1 }'
go
exec insert_syntax 'select',
'Transact-SQL',          66,
'             | { repeatable read | 2  }'
go
exec insert_syntax 'select',
'Transact-SQL',          67,
'             | { serializable | 3  }'
go
exec insert_syntax 'select',
'Transact-SQL',          68,
'     browse_clause ::='
go
exec insert_syntax 'select',
'Transact-SQL',          69,
'     for browse'
go
exec insert_syntax 'select',
'Transact-SQL',          70,
'     plan_clause ::='
go
exec insert_syntax 'select',
'Transact-SQL',          71,
'     plan "abstract plan"'
go
exec insert_syntax 'set',
'Transact-SQL',          1 ,
'set - Sets Adaptive Server query-processing options for the duration of the'
go
exec insert_syntax 'set',
'Transact-SQL',          2 ,
'        user''s work session; sets some options inside a trigger or stored'
go
exec insert_syntax 'set',
'Transact-SQL',          3 ,
'        procedure.'
go
exec insert_syntax 'set',
'Transact-SQL',          4 ,
'  set ansinull {on | off}'
go
exec insert_syntax 'set',
'Transact-SQL',          5 ,
'     set ansi_permissions {on | off}'
go
exec insert_syntax 'set',
'Transact-SQL',          6 ,
'     set arithabort [arith_overflow | numeric_truncation]'
go
exec insert_syntax 'set',
'Transact-SQL',          7 ,
'     {on | off}'
go
exec insert_syntax 'set',
'Transact-SQL',          8 ,
'     set arithignore [arith_overflow] {on | off}'
go
exec insert_syntax 'set',
'Transact-SQL',          9 ,
'     set {chained, close on endtran, nocount, noexec,'
go
exec insert_syntax 'set',
'Transact-SQL',          10,
'     parseonly, procid, self_recursion, showplan,'
go
exec insert_syntax 'set',
'Transact-SQL',          11,
'     sort_resources} {on | off}'
go
exec insert_syntax 'set',
'Transact-SQL',          12,
'     set char_convert {off | on [with {error | no_error}] |'
go
exec insert_syntax 'set',
'Transact-SQL',          13,
'     charset [with {error | no_error}]}'
go
exec insert_syntax 'set',
'Transact-SQL',          14,
'     set cis_rpc_handling {on | off}'
go
exec insert_syntax 'set',
'Transact-SQL',          15,
'     set [clientname client_name | clienthostname'
go
exec insert_syntax 'set',
'Transact-SQL',          16,
'     host_name | clientapplname application_name]'
go
exec insert_syntax 'set',
'Transact-SQL',          17,
'     set cursor rows number for cursor_name'
go
exec insert_syntax 'set',
'Transact-SQL',          18,
'     set {datefirst number, dateformat format,'
go
exec insert_syntax 'set',
'Transact-SQL',          19,
'     language language}'
go
exec insert_syntax 'set',
'Transact-SQL',          20,
'     set fipsflagger {on | off}'
go
exec insert_syntax 'set',
'Transact-SQL',          21,
'     set flushmessage {on | off}'
go
exec insert_syntax 'set',
'Transact-SQL',          22,
'     set forceplan {on | off}'
go
exec insert_syntax 'set',
'Transact-SQL',          23,
'     set identity_insert [database.[owner.]]table_name'
go
exec insert_syntax 'set',
'Transact-SQL',          24,
'     {on | off}'
go
exec insert_syntax 'set',
'Transact-SQL',          25,
'     set jtc {on | off}'
go
exec insert_syntax 'set',
'Transact-SQL',          26,
'     set lock { wait [ numsecs ] | nowait }'
go
exec insert_syntax 'set',
'Transact-SQL',          27,
'     set offsets {select, from, order, compute, table,'
go
exec insert_syntax 'set',
'Transact-SQL',          28,
'     procedure, statement, param, execute} {on | off}'
go
exec insert_syntax 'set',
'Transact-SQL',          29,
'     set parallel_degree number'
go
exec insert_syntax 'set',
'Transact-SQL',          30,
'     set plan {dump | load } [group_name] {on | off}'
go
exec insert_syntax 'set',
'Transact-SQL',          31,
'     set plan exists check {on | off}'
go
exec insert_syntax 'set',
'Transact-SQL',          32,
'     set plan replace {on | off}'
go
exec insert_syntax 'set',
'Transact-SQL',          33,
'     set prefetch [on|off]'
go
exec insert_syntax 'set',
'Transact-SQL',          34,
'     set process_limit_action {abort | quiet | warning}'
go
exec insert_syntax 'set',
'Transact-SQL',          35,
'     set proxy login_name'
go
exec insert_syntax 'set',
'Transact-SQL',          36,
'     set quoted_identifier {on | off}'
go
exec insert_syntax 'set',
'Transact-SQL',          37,
'     set role {"sa_role" | "sso_role" | "oper_role" |'
go
exec insert_syntax 'set',
'Transact-SQL',          38,
'     role_name [with passwd "password"]} {on | off}'
go
exec insert_syntax 'set',
'Transact-SQL',          39,
'     set {rowcount number, textsize number}'
go
exec insert_syntax 'set',
'Transact-SQL',          40,
'     set scan_parallel_degree number'
go
exec insert_syntax 'set',
'Transact-SQL',          41,
'     set session authorization login_name'
go
exec insert_syntax 'set',
'Transact-SQL',          42,
'     set sort_merge {on | off}'
go
exec insert_syntax 'set',
'Transact-SQL',          43,
'     set statistics {io, subquerycache, time} {on | off}'
go
exec insert_syntax 'set',
'Transact-SQL',          44,
'     set statistics simulate { on | off }'
go
exec insert_syntax 'set',
'Transact-SQL',          45,
'     set strict_dtm_enforcement {on | off}'
go
exec insert_syntax 'set',
'Transact-SQL',          46,
'     set string_rtruncation {on | off}'
go
exec insert_syntax 'set',
'Transact-SQL',          47,
'     set table count number'
go
exec insert_syntax 'set',
'Transact-SQL',          48,
'     set textsize {number}'
go
exec insert_syntax 'set',
'Transact-SQL',          49,
'     set transaction isolation level {'
go
exec insert_syntax 'set',
'Transact-SQL',          50,
'     [ read uncommitted | 0 ] |'
go
exec insert_syntax 'set',
'Transact-SQL',          51,
'     [ read committed | 1 ] |'
go
exec insert_syntax 'set',
'Transact-SQL',          52,
'     [ repeatable read | 2 ]|'
go
exec insert_syntax 'set',
'Transact-SQL',          53,
'     [ serializable | 3 ] }'
go
exec insert_syntax 'set',
'Transact-SQL',          54,
'     set transactional_rpc {on | off}'
go
exec insert_syntax 'setuser',
'Transact-SQL',          1 ,
'setuser - Allows a Database Owner to impersonate another user.'
go
exec insert_syntax 'setuser',
'Transact-SQL',          2 ,
'  setuser ["user_name"]'
go
exec insert_syntax 'show_role',
'Transact-SQL',          1 ,
'show_role - Shows the login''s currently active system-defined roles.'
go
exec insert_syntax 'show_role',
'Transact-SQL',          2 ,
'  show_role()'
go
exec insert_syntax 'show_sec_services',
'Transact-SQL',          1 ,
'show_sec_services - Lists the security services that are active for the'
go
exec insert_syntax 'show_sec_services',
'Transact-SQL',          2 ,
'        session.'
go
exec insert_syntax 'show_sec_services',
'Transact-SQL',          3 ,
'  show_sec_services()'
go
exec insert_syntax 'shutdown',
'Transact-SQL',          1 ,
'shutdown - Shuts down the Adaptive Server from which the command is issued,'
go
exec insert_syntax 'shutdown',
'Transact-SQL',          2 ,
'        its local Backup Server, or a remote Backup Server. This command'
go
exec insert_syntax 'shutdown',
'Transact-SQL',          3 ,
'        can be issued only by a System Administrator.'
go
exec insert_syntax 'shutdown',
'Transact-SQL',          4 ,
'  shutdown [srvname] [with {wait | nowait}]'
go
exec insert_syntax 'sign',
'Transact-SQL',          1 ,
'sign - Returns the sign (+1 for positive, 0, or -1 for negative) of the'
go
exec insert_syntax 'sign',
'Transact-SQL',          2 ,
'        specified value.'
go
exec insert_syntax 'sign',
'Transact-SQL',          3 ,
'  sign(numeric)'
go
exec insert_syntax 'sin',
'Transact-SQL',          1 ,
'sin - Returns the sine of the specified angle (in radians).'
go
exec insert_syntax 'sin',
'Transact-SQL',          2 ,
'  sin(approx_numeric)'
go
exec insert_syntax 'sortkey',
'Transact-SQL',          1 ,
'sortkey - Generates values that can be used to order results based on'
go
exec insert_syntax 'sortkey',
'Transact-SQL',          2 ,
'        collation behavior, which allows you to work with character'
go
exec insert_syntax 'sortkey',
'Transact-SQL',          3 ,
'        collation behaviors beyond the default set of'
go
exec insert_syntax 'sortkey',
'Transact-SQL',          4 ,
'        Latin-character-based dictionary sort orders'
go
exec insert_syntax 'sortkey',
'Transact-SQL',          5 ,
'        and case or accent sensitivity.'
go
exec insert_syntax 'sortkey',
'Transact-SQL',          6 ,
'  sortkey (char_expression|uchar_expression'
go
exec insert_syntax 'sortkey',
'Transact-SQL',          7 ,
'     [,{collation_name | collation_ID}])'
go
exec insert_syntax 'soundex',
'Transact-SQL',          1 ,
'soundex - Returns a 4-character code representing the way an expression'
go
exec insert_syntax 'soundex',
'Transact-SQL',          2 ,
'        sounds.'
go
exec insert_syntax 'soundex',
'Transact-SQL',          3 ,
'  soundex(char_expr|uchar_expr)'
go
exec insert_syntax 'space',
'Transact-SQL',          1 ,
'space - Returns a string consisting of the specified number of single-byte'
go
exec insert_syntax 'space',
'Transact-SQL',          2 ,
'        spaces.'
go
exec insert_syntax 'space',
'Transact-SQL',          3 ,
'  space(integer_expr)'
go
exec insert_syntax 'sqrt',
'Transact-SQL',          1 ,
'sqrt - Returns the square root of the specified number.'
go
exec insert_syntax 'sqrt',
'Transact-SQL',          2 ,
'  sqrt(approx_numeric)'
go
exec insert_syntax 'str',
'Transact-SQL',          1 ,
'str - Returns the character equivalent of the specified number.'
go
exec insert_syntax 'str',
'Transact-SQL',          2 ,
'  str(approx_numeric [, length [, decimal] ])'
go
exec insert_syntax 'stuff',
'Transact-SQL',          1 ,
'stuff - Returns the string formed by deleting a specified number of'
go
exec insert_syntax 'stuff',
'Transact-SQL',          2 ,
'        characters from one string and replacing them with another string.'
go
exec insert_syntax 'stuff',
'Transact-SQL',          3 ,
'  stuff(char_expr1|uchar_expr1, start, length,'
go
exec insert_syntax 'stuff',
'Transact-SQL',          4 ,
'     char_expr2|uchar_expr2)'
go
exec insert_syntax 'substring',
'Transact-SQL',          1 ,
'substring - Returns the string formed by extracting the specified number of'
go
exec insert_syntax 'substring',
'Transact-SQL',          2 ,
'        characters from another string.'
go
exec insert_syntax 'substring',
'Transact-SQL',          3 ,
'  substring(expression, start, length)'
go
exec insert_syntax 'sum',
'Transact-SQL',          1 ,
'sum - Returns the total of the values.'
go
exec insert_syntax 'sum',
'Transact-SQL',          2 ,
'  sum([all | distinct] expression)'
go
exec insert_syntax 'suser_id',
'Transact-SQL',          1 ,
'suser_id - Returns the server user''s ID number from the syslogins table.'
go
exec insert_syntax 'suser_id',
'Transact-SQL',          2 ,
'  suser_id([server_user_name])'
go
exec insert_syntax 'suser_name',
'Transact-SQL',          1 ,
'suser_name - Returns the name of the current server user or the user whose'
go
exec insert_syntax 'suser_name',
'Transact-SQL',          2 ,
'        server ID is specified.'
go
exec insert_syntax 'suser_name',
'Transact-SQL',          3 ,
'  suser_name([server_user_id])'
go
exec insert_syntax 'syb_sendmsg',
'Transact-SQL',          1 ,
'syb_sendmsg - Sends a message to a User Datagram Protocol (UDP) port.'
go
exec insert_syntax 'syb_sendmsg',
'Transact-SQL',          2 ,
'  syb_sendmsg ip_address, port_number, message'
go
exec insert_syntax 'tan',
'Transact-SQL',          1 ,
'tan - Returns the tangent of the specified angle (in radians).'
go
exec insert_syntax 'tan',
'Transact-SQL',          2 ,
'  tan(angle)'
go
exec insert_syntax 'textptr',
'Transact-SQL',          1 ,
'textptr - Returns a pointer to the first page of a text or image column.'
go
exec insert_syntax 'textptr',
'Transact-SQL',          2 ,
'  textptr(column_name)'
go
exec insert_syntax 'textvalid',
'Transact-SQL',          1 ,
'textvalid - Returns 1 if the pointer to the specified text column is valid;'
go
exec insert_syntax 'textvalid',
'Transact-SQL',          2 ,
'        0 if it is not.'
go
exec insert_syntax 'textvalid',
'Transact-SQL',          3 ,
'  textvalid("table_name.column_name", textpointer)'
go
exec insert_syntax 'to_unichar',
'Transact-SQL',          1 ,
'to_unichar - Returns a unichar expression having the value of the integer'
go
exec insert_syntax 'to_unichar',
'Transact-SQL',          2 ,
'        expression.'
go
exec insert_syntax 'to_unichar',
'Transact-SQL',          3 ,
'  to_unichar (integer_expr)'
go
exec insert_syntax 'truncate table',
'Transact-SQL',          1 ,
'truncate table - Removes all rows from a table.'
go
exec insert_syntax 'truncate table',
'Transact-SQL',          2 ,
'  truncate table [[database.]owner.]table_name'
go
exec insert_syntax 'tsequal',
'Transact-SQL',          1 ,
'tsequal - Compares timestamp values to prevent update on a row that has been'
go
exec insert_syntax 'tsequal',
'Transact-SQL',          2 ,
'        modified since it was selected for browsing.'
go
exec insert_syntax 'tsequal',
'Transact-SQL',          3 ,
'  tsequal(browsed_row_timestamp, stored_row_timestamp)'
go
exec insert_syntax 'uhighsurr',
'Transact-SQL',          1 ,
'uhighsurr - Returns 1 if the Unicode value at position start is the high'
go
exec insert_syntax 'uhighsurr',
'Transact-SQL',          2 ,
'        half of a surrogate pair (which should appear first in the'
go
exec insert_syntax 'uhighsurr',
'Transact-SQL',          3 ,
'        pair). Returns 0 otherwise.'
go
exec insert_syntax 'uhighsurr',
'Transact-SQL',          4 ,
'  uhighsurr(uchar_expr,start)'
go
exec insert_syntax 'ulowsurr',
'Transact-SQL',          1 ,
'ulowsurr - Returns 1 if the Unicode value at position start is the low half'
go
exec insert_syntax 'ulowsurr',
'Transact-SQL',          2 ,
'        of a surrogate pair (which should appear second in the pair).'
go
exec insert_syntax 'ulowsurr',
'Transact-SQL',          3 ,
'        Returns 0 otherwise.'
go
exec insert_syntax 'ulowsurr',
'Transact-SQL',          4 ,
'  ulowsurr(uchar_expr,start)'
go
exec insert_syntax 'union Operator',
'Transact-SQL',          1 ,
'union Operator - Returns a single result set that combines the results of'
go
exec insert_syntax 'union Operator',
'Transact-SQL',          2 ,
'        two or more queries. Duplicate rows are eliminated from the'
go
exec insert_syntax 'union Operator',
'Transact-SQL',          3 ,
'        result set unless the all keyword is specified.'
go
exec insert_syntax 'union Operator',
'Transact-SQL',          4 ,
'  select select_list [into clause]'
go
exec insert_syntax 'union Operator',
'Transact-SQL',          5 ,
'             [from clause] [where clause]'
go
exec insert_syntax 'union Operator',
'Transact-SQL',          6 ,
'             [group by clause] [having clause]'
go
exec insert_syntax 'union Operator',
'Transact-SQL',          7 ,
'     [union [all]'
go
exec insert_syntax 'union Operator',
'Transact-SQL',          8 ,
'         select select_list'
go
exec insert_syntax 'union Operator',
'Transact-SQL',          9 ,
'             [from clause] [where clause]'
go
exec insert_syntax 'union Operator',
'Transact-SQL',          10,
'             [group by clause] [having clause] ]...'
go
exec insert_syntax 'union Operator',
'Transact-SQL',          11,
'     [order by clause]'
go
exec insert_syntax 'union Operator',
'Transact-SQL',          12,
'     [compute clause]'
go
exec insert_syntax 'unmount', 
'Transact-SQL',          1 , 
'unmount - unmount command shuts down the database and drops it' 
go 
exec insert_syntax 'unmount', 
'Transact-SQL',          2 , 
'from the Adaptive Server. Devices are also deactivated and dropped.' 
go 
exec insert_syntax 'unmount', 
'Transact-SQL',          3 , 
'unmount database <dbname list> to <manifest file>' 
go
exec insert_syntax 'update',
'Transact-SQL',          1 ,
'update - Changes data in existing rows, either by adding data or by'
go
exec insert_syntax 'update',
'Transact-SQL',          2 ,
'        modifying existing data.'
go
exec insert_syntax 'update',
'Transact-SQL',          3 ,
'  update [[database.]owner.]{table_name | view_name}'
go
exec insert_syntax 'update',
'Transact-SQL',          4 ,
'     set [[[database.]owner.]{table_name.|view_name.}]'
go
exec insert_syntax 'update',
'Transact-SQL',          5 ,
'         column_name1 ='
go
exec insert_syntax 'update',
'Transact-SQL',          6 ,
'             {expression1|NULL|(select_statement)} |'
go
exec insert_syntax 'update',
'Transact-SQL',          7 ,
'         variable_name1 ='
go
exec insert_syntax 'update',
'Transact-SQL',          8 ,
'             {expression1|NULL|(select_statement)}'
go
exec insert_syntax 'update',
'Transact-SQL',          9 ,
'         [, column_name2 ='
go
exec insert_syntax 'update',
'Transact-SQL',          10,
'             {expression2|NULL|(select_statement)}]... |'
go
exec insert_syntax 'update',
'Transact-SQL',          11,
'         [, variable_name2 ='
go
exec insert_syntax 'update',
'Transact-SQL',          12,
'             {expression2|NULL|(select_statement)}]...'
go
exec insert_syntax 'update',
'Transact-SQL',          13,
' '
go
exec insert_syntax 'update',
'Transact-SQL',          14,
'     [from [[database.]owner.]{view_name [readpast]|'
go
exec insert_syntax 'update',
'Transact-SQL',          15,
'         table_name [readpast]'
go
exec insert_syntax 'update',
'Transact-SQL',          16,
'             [(index {index_name | table_name }'
go
exec insert_syntax 'update',
'Transact-SQL',          17,
'             [ prefetch size ][lru|mru])]}'
go
exec insert_syntax 'update',
'Transact-SQL',          18,
'          [,[[database.]owner.]{view_name [readpast]|'
go
exec insert_syntax 'update',
'Transact-SQL',          19,
'         table_name [readpast]'
go
exec insert_syntax 'update',
'Transact-SQL',          20,
'             [(index {index_name | table_name }'
go
exec insert_syntax 'update',
'Transact-SQL',          21,
'             [ prefetch size ][lru|mru])]}]'
go
exec insert_syntax 'update',
'Transact-SQL',          22,
'     ...]'
go
exec insert_syntax 'update',
'Transact-SQL',          23,
'     [where search_conditions]'
go
exec insert_syntax 'update',
'Transact-SQL',          24,
'     [plan "abstract plan"]'
go
exec insert_syntax 'update',
'Transact-SQL',          25,
'     update [[database.]owner.]{table_name | view_name}'
go
exec insert_syntax 'update',
'Transact-SQL',          26,
'     set [[[database.]owner.]{table_name.|view_name.}]'
go
exec insert_syntax 'update',
'Transact-SQL',          27,
'         column_name1 ='
go
exec insert_syntax 'update',
'Transact-SQL',          28,
'            {expression1|NULL|(select_statement)} |'
go
exec insert_syntax 'update',
'Transact-SQL',          29,
'         variable_name1 ='
go
exec insert_syntax 'update',
'Transact-SQL',          30,
'             {expression1|NULL|(select_statement)}'
go
exec insert_syntax 'update',
'Transact-SQL',          31,
'         [, column_name2 ='
go
exec insert_syntax 'update',
'Transact-SQL',          32,
'            {expression2|NULL|(select_statement)}]... |'
go
exec insert_syntax 'update',
'Transact-SQL',          33,
'         [, variable_name2 ='
go
exec insert_syntax 'update',
'Transact-SQL',          34,
'             {expression2|NULL|(select_statement)}]...'
go
exec insert_syntax 'update',
'Transact-SQL',          35,
'     where current of cursor_name'
go
exec insert_syntax 'update all statistics',
'Transact-SQL',          1 ,
'update all statistics - Updates all statistics information for a given table.'
go
exec insert_syntax 'update all statistics',
'Transact-SQL',          2 ,
'  update all statistics table_name'
go
exec insert_syntax 'update partition statistics',
'Transact-SQL',          1 ,
'update partition statistics - Updates information about the number of pages'
go
exec insert_syntax 'update partition statistics',
'Transact-SQL',          2 ,
'        in each partition for a partitioned table.'
go
exec insert_syntax 'update partition statistics',
'Transact-SQL',          3 ,
'  update partition statistics table_name'
go
exec insert_syntax 'update partition statistics',
'Transact-SQL',          4 ,
'     [partition_number]'
go
exec insert_syntax 'update statistics',
'Transact-SQL',          1 ,
' '
go
exec insert_syntax 'update statistics',
'Transact-SQL',          2 ,
'  update statistics table_name'
go
exec insert_syntax 'update statistics',
'Transact-SQL',          3 ,
'             [ [index_name] | [( column_list ) ] ]'
go
exec insert_syntax 'update statistics',
'Transact-SQL',          4 ,
'             [using step values]'
go
exec insert_syntax 'update statistics',
'Transact-SQL',          5 ,
'             [with consumers = consumers ]'
go
exec insert_syntax 'update statistics',
'Transact-SQL',          6 ,
'     update index statistics table_name [index_name]'
go
exec insert_syntax 'update statistics',
'Transact-SQL',          7 ,
'             [using step values]'
go
exec insert_syntax 'update statistics',
'Transact-SQL',          8 ,
'             [with consumers = consumers ]'
go
exec insert_syntax 'upper',
'Transact-SQL',          1 ,
'upper - Returns the uppercase equivalent of the specified string.'
go
exec insert_syntax 'upper',
'Transact-SQL',          2 ,
'  upper(char_expr)'
go
exec insert_syntax 'uscalar',
'Transact-SQL',          1 ,
'uscalar - Returns the Unicode scalar value for the first Unicode character'
go
exec insert_syntax 'uscalar',
'Transact-SQL',          2 ,
'        in an expression..'
go
exec insert_syntax 'uscalar',
'Transact-SQL',          3 ,
'  uscalar(uchar_expr)'
go
exec insert_syntax 'use',
'Transact-SQL',          1 ,
'use - Specifies the database with which you want to work.'
go
exec insert_syntax 'use',
'Transact-SQL',          2 ,
'  use database_name'
go
exec insert_syntax 'used_pgs',
'Transact-SQL',          1 ,
'used_pgs - Returns the number of pages used by a table or index. For an'
go
exec insert_syntax 'used_pgs',
'Transact-SQL',          2 ,
'        all-pages-locked table with a clustered index, it returns the'
go
exec insert_syntax 'used_pgs',
'Transact-SQL',          3 ,
'        sum of the table and index pages.'
go
exec insert_syntax 'used_pgs',
'Transact-SQL',          4 ,
'  used_pgs(object_id, doampg, ioampg)'
go
exec insert_syntax 'user',
'Transact-SQL',          1 ,
'user - Returns the name of the current user.'
go
exec insert_syntax 'user',
'Transact-SQL',          2 ,
'  user'
go
exec insert_syntax 'user_id',
'Transact-SQL',          1 ,
'user_id - Returns the ID number of the specified user or of the current user'
go
exec insert_syntax 'user_id',
'Transact-SQL',          2 ,
'        in the database.'
go
exec insert_syntax 'user_id',
'Transact-SQL',          3 ,
'  user_id([user_name])'
go
exec insert_syntax 'user_name',
'Transact-SQL',          1 ,
'user_name - Returns the name within the database of the specified user or of'
go
exec insert_syntax 'user_name',
'Transact-SQL',          2 ,
'        the current user.'
go
exec insert_syntax 'user_name',
'Transact-SQL',          3 ,
'  user_name([user_id])'
go
exec insert_syntax 'valid_name',
'Transact-SQL',          1 ,
'valid_name - Returns 0 if the specified string is not a valid identifier or'
go
exec insert_syntax 'valid_name',
'Transact-SQL',          2 ,
'        a number other than 0 if the string is a valid identifier.'
go
exec insert_syntax 'valid_name',
'Transact-SQL',          3 ,
'  valid_name(character_expression)'
go
exec insert_syntax 'valid_user',
'Transact-SQL',          1 ,
'valid_user - Returns 1 if the specified ID is a valid user or alias in at'
go
exec insert_syntax 'valid_user',
'Transact-SQL',          2 ,
'        least one database on this Adaptive Server.'
go
exec insert_syntax 'valid_user',
'Transact-SQL',          3 ,
'  valid_user(server_user_id)'
go
exec insert_syntax 'waitfor',
'Transact-SQL',          1 ,
'waitfor - Specifies a specific time, a time interval, or an event for the'
go
exec insert_syntax 'waitfor',
'Transact-SQL',          2 ,
'        execution of a statement block, stored procedure, or transaction.'
go
exec insert_syntax 'waitfor',
'Transact-SQL',          3 ,
'  waitfor { delay time | time time | errorexit'
go
exec insert_syntax 'waitfor',
'Transact-SQL',          4 ,
'     | processexit | mirrorexit }'
go
exec insert_syntax 'where Clause',
'Transact-SQL',          1 ,
'where Clause - Sets the search conditions in a select, insert, update, or'
go
exec insert_syntax 'where Clause',
'Transact-SQL',          2 ,
'        delete statement.'
go
exec insert_syntax 'where Clause',
'Transact-SQL',          3 ,
'  Search conditions immediately follow the keyword where in a select,'
go
exec insert_syntax 'where Clause',
'Transact-SQL',          4 ,
'     insert, update, or delete statement. If you use more than one search'
go
exec insert_syntax 'where Clause',
'Transact-SQL',          5 ,
'     condition in a single statement, connect the conditions with and or or.'
go
exec insert_syntax 'where Clause',
'Transact-SQL',          6 ,
'     where [not] expression comparison_operator expression'
go
exec insert_syntax 'where Clause',
'Transact-SQL',          7 ,
'     where [not] expression [not] like "match_string"'
go
exec insert_syntax 'where Clause',
'Transact-SQL',          8 ,
'     [escape "escape_character"]'
go
exec insert_syntax 'where Clause',
'Transact-SQL',          9 ,
'     where [not] expression is [not] null'
go
exec insert_syntax 'where Clause',
'Transact-SQL',          10,
'     where [not]'
go
exec insert_syntax 'where Clause',
'Transact-SQL',          11,
'     expression [not] between expression and expression'
go
exec insert_syntax 'where Clause',
'Transact-SQL',          12,
'     where [not]'
go
exec insert_syntax 'where Clause',
'Transact-SQL',          13,
'     expression [not] in ({value_list | subquery})'
go
exec insert_syntax 'where Clause',
'Transact-SQL',          14,
'     where [not] exists (subquery)'
go
exec insert_syntax 'where Clause',
'Transact-SQL',          15,
'     where [not]'
go
exec insert_syntax 'where Clause',
'Transact-SQL',          16,
'     expression comparison_operator'
go
exec insert_syntax 'where Clause',
'Transact-SQL',          17,
'     {any | all} (subquery)'
go
exec insert_syntax 'where Clause',
'Transact-SQL',          18,
'     where [not] column_name join_operator column_name'
go
exec insert_syntax 'where Clause',
'Transact-SQL',          19,
'     where [not] logical_expression'
go
exec insert_syntax 'where Clause',
'Transact-SQL',          20,
'     where [not] expression {and | or} [not] expression'
go
exec insert_syntax 'while',
'Transact-SQL',          1 ,
'while - Sets a condition for the repeated execution of a statement or'
go
exec insert_syntax 'while',
'Transact-SQL',          2 ,
'        statement block. The statement(s) are executed repeatedly,'
go
exec insert_syntax 'while',
'Transact-SQL',          3 ,
'        as long as the specified condition is true.'
go
exec insert_syntax 'while',
'Transact-SQL',          4 ,
'  while logical_expression [plan "abstract plan"]'
go
exec insert_syntax 'while',
'Transact-SQL',          5 ,
'          statement'
go
exec insert_syntax 'writetext',
'Transact-SQL',          1 ,
'writetext - Permits minimally logged, interactive updating of an existing'
go
exec insert_syntax 'writetext',
'Transact-SQL',          2 ,
'        text or image column.'
go
exec insert_syntax 'writetext',
'Transact-SQL',          3 ,
'  writetext [[database.]owner.]table_name.column_name'
go
exec insert_syntax 'writetext',
'Transact-SQL',          4 ,
'     text_pointer [readpast] [with log] data'
go
exec insert_syntax 'backupserver',
'UNIX Utility',          1 ,
'backupserver - The executable form of the Backup Server program.'
go
exec insert_syntax 'backupserver',
'UNIX Utility',          2 ,
'  backupserver'
go
exec insert_syntax 'backupserver',
'UNIX Utility',          3 ,
'      [-Cserver_connections]'
go
exec insert_syntax 'backupserver',
'UNIX Utility',          4 ,
'      [-Sb_servername]'
go
exec insert_syntax 'backupserver',
'UNIX Utility',          5 ,
'      [-Iinterfaces_file]'
go
exec insert_syntax 'backupserver',
'UNIX Utility',          6 ,
'      [-eerror_log_file]'
go
exec insert_syntax 'backupserver',
'UNIX Utility',          7 ,
'      [-Msybmultbuf_binary]'
go
exec insert_syntax 'backupserver',
'UNIX Utility',          8 ,
'      [-Nnetwork_connections]'
go
exec insert_syntax 'backupserver',
'UNIX Utility',          9 ,
'      [-Ttrace_value]'
go
exec insert_syntax 'backupserver',
'UNIX Utility',          10,
'      [-LSybase_language_name]'
go
exec insert_syntax 'backupserver',
'UNIX Utility',          11,
'      [-JSybase_character_set_name]'
go
exec insert_syntax 'backupserver',
'UNIX Utility',          12,
'      [-Pactive_service_threads]'
go
exec insert_syntax 'backupserver',
'UNIX Utility',          13,
'      [-ctape_config_file]'
go
exec insert_syntax 'backupserver',
'UNIX Utility',          14,
'      [-A]'
go
exec insert_syntax 'backupserver',
'UNIX Utility',          15,
'      [-s]'
go
exec insert_syntax 'backupserver',
'UNIX Utility',          16,
'      [-D]'
go
exec insert_syntax 'backupserver',
'UNIX Utility',          17,
'      [-Vversion_number]'
go
exec insert_syntax 'backupserver',
'UNIX Utility',          18,
'      [-p]'
go
exec insert_syntax 'backupserver',
'UNIX Utility',          19,
'      [-m]'
go
exec insert_syntax 'backupserver',
'UNIX Utility',          20,
'     or'
go
exec insert_syntax 'backupserver',
'UNIX Utility',          21,
'     backupserver -v'
go
exec insert_syntax 'bcp',
'UNIX Utility',          1 ,
'bcp - Copies a database table to or from an operating system file in a'
go
exec insert_syntax 'bcp',
'UNIX Utility',          2 ,
'        user-specified format.'
go
exec insert_syntax 'bcp',
'UNIX Utility',          3 ,
'        The following is the syntax for bcp, bcp_r, & bcp_dce'
go
exec insert_syntax 'bcp',
'UNIX Utility',          4 ,
'  bcp [[database_name.]owner.][view_name | table_name [:partition_id]] {in'
go
exec insert_syntax 'bcp',
'UNIX Utility',          5 ,
'     out} datafile'
go
exec insert_syntax 'bcp',
'UNIX Utility',          6 ,
'      [-c] [-E] [-n] [-N] [-X]'
go
exec insert_syntax 'bcp',
'UNIX Utility',          7 ,
'      [-a display_charset]'
go
exec insert_syntax 'bcp',
'UNIX Utility',          8 ,
'      [-A packet_size]'
go
exec insert_syntax 'bcp',
'UNIX Utility',          9 ,
'      [-b batchsize]'
go
exec insert_syntax 'bcp',
'UNIX Utility',          10 ,
'      [-e errfile]'
go
exec insert_syntax 'bcp',
'UNIX Utility',          11,
'      [-f formatfile]'
go
exec insert_syntax 'bcp',
'UNIX Utility',          12,
'      [-F firstrow]'
go
exec insert_syntax 'bcp',
'UNIX Utility',          13,
'      [-g id_start_value]'
go
exec insert_syntax 'bcp',
'UNIX Utility',          14,
'      [-I interfaces_file]'
go
exec insert_syntax 'bcp',
'UNIX Utility',          15,
'      [-J client_charset]'
go
exec insert_syntax 'bcp',
'UNIX Utility',          16,
'      [-L lastrow]'
go
exec insert_syntax 'bcp',
'UNIX Utility',          17,
'      [-m maxerrors]'
go
exec insert_syntax 'bcp',
'UNIX Utility',          18,
'      [-P password]'
go
exec insert_syntax 'bcp',
'UNIX Utility',          19,
'      [-q datafile_charset]'
go
exec insert_syntax 'bcp',
'UNIX Utility',          20,
'      [-r row_terminator]'
go
exec insert_syntax 'bcp',
'UNIX Utility',          21,
'      [-R remote_server_principal]'
go
exec insert_syntax 'bcp',
'UNIX Utility',          22,
'      [-S server]'
go
exec insert_syntax 'bcp',
'UNIX Utility',          23,
'      [-t field_terminator]'
go
exec insert_syntax 'bcp',
'UNIX Utility',          24,
'      [-T text_or_image_size]'
go
exec insert_syntax 'bcp',
'UNIX Utility',          25,
'      [-U username]'
go
exec insert_syntax 'bcp',
'UNIX Utility',          26,
'      [-z language]'
go
exec insert_syntax 'bcp',
'UNIX Utility',          27,
'     or'
go
exec insert_syntax 'bcp',
'UNIX Utility',          28,
'     bcp -v'
go
exec insert_syntax 'charset',
'UNIX Utility',          1 ,
'charset - Loads the character sets and sort order files.'
go
exec insert_syntax 'charset',
'UNIX Utility',          2 ,
'  charset'
go
exec insert_syntax 'charset',
'UNIX Utility',          3 ,
'      [-P password]'
go
exec insert_syntax 'charset',
'UNIX Utility',          4 ,
'      [-S server]'
go
exec insert_syntax 'charset',
'UNIX Utility',          5 ,
'      [-I interface]'
go
exec insert_syntax 'charset',
'UNIX Utility',          6 ,
'      sort order'
go
exec insert_syntax 'charset',
'UNIX Utility',          7 ,
'      [charset]'
go
exec insert_syntax 'charset',
'UNIX Utility',          8 ,
'     or'
go
exec insert_syntax 'charset',
'UNIX Utility',          9 ,
'     charset -v'
go
exec insert_syntax 'dataxtr',
'UNIX Utility',          1 ,
'dataxtr - GUI data migration tool'
go
exec insert_syntax 'dataxtr',
'UNIX Utility',          2 ,
'     usage: dataxtr'
go
exec insert_syntax 'dataserver',
'UNIX Utility',          1 ,
'dataserver - The executable form of the Adaptive Server program.'
go
exec insert_syntax 'dataserver',
'UNIX Utility',          2 ,
'The -b parameter is only used to build the master device.'
go
exec insert_syntax 'dataserver',
'UNIX Utility',          3 ,
'     [-f] [-g] [-G] [-h] [-H] [-m] [-q] [-v] [-X]'
go
exec insert_syntax 'dataserver',
'UNIX Utility',          4 ,
'     [-a path to CAPs directive file]'
go
exec insert_syntax 'dataserver',
'UNIX Utility',          5 ,
'     [-b master device size [k|K|m|M|g|G]]'
go
exec insert_syntax 'dataserver',
'UNIX Utility',          6 ,
'     [-c configuration file for server]'
go
exec insert_syntax 'dataserver',
'UNIX Utility',          7 ,
'     [-d device name]'
go
exec insert_syntax 'dataserver',
'UNIX Utility',          8 ,
'     [-e path to error log]'
go
exec insert_syntax 'dataserver',
'UNIX Utility',          9 ,
'     [-i interfaces file directory]'
go
exec insert_syntax 'dataserver',
'UNIX Utility',          10 ,
'     [-K keytab file]'
go
exec insert_syntax 'dataserver',
'UNIX Utility',          11 ,
'     [-L config file name for connectivity]'
go
exec insert_syntax 'dataserver',
'UNIX Utility',          12 ,
'     [-M shared memory repository directory]'
go
exec insert_syntax 'dataserver',
'UNIX Utility',          13, 
'     [-p sa login name]'
go
exec insert_syntax 'dataserver',
'UNIX Utility',          14,
'     [-r mirror disk name]'
go
exec insert_syntax 'dataserver',
'UNIX Utility',          15,
'     [-s server name]'
go
exec insert_syntax 'dataserver',
'UNIX Utility',          16,
'     [-T trace flag]'
go
exec insert_syntax 'dataserver',
'UNIX Utility',          17,
'     [-u sa/sso name]'
go
exec insert_syntax 'dataserver',
'UNIX Utility',          18,
'     [-w master | model database]'
go
exec insert_syntax 'dataserver',
'UNIX Utility',          19 ,
'     [-y [password]]'
go
exec insert_syntax 'dataserver',
'UNIX Utility',          20 ,
'     [-z page size [k|K]]'
go
exec insert_syntax 'cpre',
'UNIX Utility',          1 ,
'cpre - Precompiler for ESQL/C'
go
exec insert_syntax 'cpre',
'UNIX Utility',          2 ,
'        The following is the syntax for cpre and cpre_r'
go
exec insert_syntax 'cpre',
'UNIX Utility',          3 ,
'      [-B compatiblity mode]'
go
exec insert_syntax 'cpre',
'UNIX Utility',          4 ,
'      [-C compiler]'
go
exec insert_syntax 'cpre',
'UNIX Utility',          5 ,
'      [-D database]'
go
exec insert_syntax 'cpre',
'UNIX Utility',          6 ,
'      [-F fips level]'
go
exec insert_syntax 'cpre',
'UNIX Utility',          7 ,
'      [-G isql file name]'
go
exec insert_syntax 'cpre',
'UNIX Utility',          8 ,
'      [-I include path name]'
go
exec insert_syntax 'cpre',
'UNIX Utility',          9,
'      [-J charset locale name]'
go
exec insert_syntax 'cpre',
'UNIX Utility',          10,
'      [-K syntax level]'
go
exec insert_syntax 'cpre',
'UNIX Utility',          11,
'      [-L [listing file name]'
go
exec insert_syntax 'cpre',
'UNIX Utility',          12,
'      [-N interface file name]'
go
exec insert_syntax 'cpre',
'UNIX Utility',          13,
'      [-O target file name]'
go
exec insert_syntax 'cpre',
'UNIX Utility',          14,
'      [-P password]'
go
exec insert_syntax 'cpre',
'UNIX Utility',          15,
'      [-S server name]'
go
exec insert_syntax 'cpre',
'UNIX Utility',          16,
'     	[-T tag]'
go
exec insert_syntax 'cpre',
'UNIX Utility',          17,
'      [-U userid]'
go
exec insert_syntax 'cpre',
'UNIX Utility',          18,
'      [-V version number]'
go
exec insert_syntax 'cpre',
'UNIX Utility',          19,
'      [-X application name]'
go
exec insert_syntax 'cpre',
'UNIX Utility',          20,
'      [-Z [language locale name] [@options file]'
go
exec insert_syntax 'cpre',
'UNIX Utility',          21 ,
' [-a] [-b] [-c] [-d] [-f] [-h] [-l] [-m] [-p] [-r] [-v] [-w] [-x] [-w]'
go
exec insert_syntax 'cpre',
'UNIX Utility',          22,
'     filename[.ext]'
go
exec insert_syntax 'cobpre',
'UNIX Utility',          1 ,
'cobpre - Precompiler for ESQL/COBOL' 
go
exec insert_syntax 'cobpre',
'UNIX Utility',          2 ,
'        The following is the syntax for cobpre and cobpre_r'
go
exec insert_syntax 'cobpre',
'UNIX Utility',          3 ,
'      [-B compatiblity mode]'
go
exec insert_syntax 'cobpre',
'UNIX Utility',          4 ,
'      [-C compiler]'
go
exec insert_syntax 'cobpre',
'UNIX Utility',          5 ,
'      [-D database]'
go
exec insert_syntax 'cobpre',
'UNIX Utility',          6 ,
'      [-F fips level]'
go
exec insert_syntax 'cobpre',
'UNIX Utility',          7 ,
'      [-G isql file name]'
go
exec insert_syntax 'cobpre',
'UNIX Utility',          8 ,
'      [-I include path name]'
go
exec insert_syntax 'cobpre',
'UNIX Utility',          9,
'      [-J charset locale name]'
go
exec insert_syntax 'cobpre',
'UNIX Utility',          10,
'      [-K syntax level]'
go
exec insert_syntax 'cobpre',
'UNIX Utility',          11,
'      [-L [listing file name]'
go
exec insert_syntax 'cobpre',
'UNIX Utility',          12,
'      [-N interface file name]'
go
exec insert_syntax 'cobpre',
'UNIX Utility',          13,
'      [-O target file name]'
go
exec insert_syntax 'cobpre',
'UNIX Utility',          14,
'      [-P password]'
go
exec insert_syntax 'cobpre',
'UNIX Utility',          15,
'      [-S server name]'
go
exec insert_syntax 'cobpre',
'UNIX Utility',          16,
'     	[-T tag]'
go
exec insert_syntax 'cobpre',
'UNIX Utility',          17,
'      [-U userid]'
go
exec insert_syntax 'cobpre',
'UNIX Utility',          18,
'      [-V version number]'
go
exec insert_syntax 'cobpre',
'UNIX Utility',          19,
'      [-X application name]'
go
exec insert_syntax 'cobpre',
'UNIX Utility',          20,
'      [-Z [language locale name] [@options file]'
go
exec insert_syntax 'cobpre',
'UNIX Utility',          21 ,
' [-a] [-b] [-c] [-d] [-e] [-f] [-h] [-m] [-p] [-q] [-r] [-v] [-w] [-x] [-w]'
go
exec insert_syntax 'cobpre',
'UNIX Utility',          22,
'     filename[.ext]'
go
exec insert_syntax 'certpk12',
'UNIX Utility',          1 ,
'certpk12 - import or export a PKCS#12 file'
go
exec insert_syntax 'certpk12',
'UNIX Utility',          2 ,
'      {-O pkcs file | -I pkcs file}'
go
exec insert_syntax 'certpk12',
'UNIX Utility',          3 ,
'      [-v]'
go
exec insert_syntax 'certpk12',
'UNIX Utility',          4 ,
'      [-C Certificate file]'
go
exec insert_syntax 'certpk12',
'UNIX Utility',          5 ,
'      [-K Key file]'
go
exec insert_syntax 'certpk12',
'UNIX Utility',          6 ,
'      [-P Key password]'
go
exec insert_syntax 'certpk12',
'UNIX Utility',          7,
'      [-E pkcs12 password]'
go
exec insert_syntax 'certreq',
'UNIX Utility',          1 ,
'certreq - Creates a server certificate request'
go
exec insert_syntax 'certreq',
'UNIX Utility',          2 ,
'        and corresponding private key'
go
exec insert_syntax 'certreq',
'UNIX Utility',          3 ,
'      [-F input file]'
go
exec insert_syntax 'certreq',
'UNIX Utility',          4 ,
'      [-R request file]'
go
exec insert_syntax 'certreq',
'UNIX Utility',          5 ,
'      [-K PK file]'
go
exec insert_syntax 'certreq',
'UNIX Utility',          6 ,
'      [-P password]'
go
exec insert_syntax 'certreq',
'UNIX Utility',          7 ,
'      [-v]'
go
exec insert_syntax 'pwdcrypt',
'UNIX Utility',          1 ,
'pwdcrypt - encrypts the LDAP password for insertion in the libtcl.cfg file'
go
exec insert_syntax 'pwdcrypt',
'UNIX Utility',          2 ,
'       usage: pwdcrypt' 
go
exec insert_syntax 'certauth',
'UNIX Utility',          1 ,
'certauth - converts a server certificate request to a '
go
exec insert_syntax 'certauth',
'UNIX Utility',          2 ,
'        Certificate Authority-signed certificate'
go
exec insert_syntax 'certauth',
'UNIX Utility',          3 ,
'      [-r]'
go
exec insert_syntax 'certauth',
'UNIX Utility',          4 ,
'      [-C caCert file]'
go
exec insert_syntax 'certauth',
'UNIX Utility',          5 ,
'      [-Q request file name]'
go
exec insert_syntax 'certauth',
'UNIX Utility',          6 ,
'      [-K caKey file name]'
go
exec insert_syntax 'certauth',
'UNIX Utility',          7 ,
'      [-O signed Cert file name]'
go
exec insert_syntax 'certauth',
'UNIX Utility',          8 ,
'      [-P ca password]'
go
exec insert_syntax 'certauth',
'UNIX Utility',          9 ,
'      [-T valid time]'
go
exec insert_syntax 'certauth',
'UNIX Utility',          10,
'     or'
go
exec insert_syntax 'certauth',
'UNIX Utility',          11,
'     certauth -v'
go
exec insert_syntax 'ddlgen',
'UNIX Utility',          1 ,
'ddlgen - A Java-based tool that generates the data definition language'
go
exec insert_syntax 'ddlgen',
'UNIX Utility',          2 ,
'         (DDL) of all server- and database-level objects in Adaptive Server'
go
exec insert_syntax 'ddlgen',
'UNIX Utility',          3 ,
'  ddlgen'
go
exec insert_syntax 'ddlgen',
'UNIX Utility',          4 ,
'      [-Uuser_name]'
go
exec insert_syntax 'ddlgen',
'UNIX Utility',          5 ,
'      [-ppassword]'
go
exec insert_syntax 'ddlgen',
'UNIX Utility',          6 ,
'      [-Sserver_name]'
go
exec insert_syntax 'ddlgen',
'UNIX Utility',          7 ,
'      [-Tobject_type]'
go
exec insert_syntax 'ddlgen',
'UNIX Utility',          8 ,
'      [-Nobject_name]'
go
exec insert_syntax 'ddlgen',
'UNIX Utility',          9 ,
'      [-Ooutput_file_name]'
go
exec insert_syntax 'ddlgen',
'UNIX Utility',          10 ,
'      [-Ddatabase_name]'
go
exec insert_syntax 'ddlgen',
'UNIX Utility',          11 ,
'      [-Eerror_log_file]'
go
exec insert_syntax 'ddlgen',
'UNIX Utility',          12 ,
'      [-Xextended_object_value]'
go
exec insert_syntax 'defncopy',
'UNIX Utility',          1 ,
'defncopy - Copies definitions for specified views, rules, defaults, trigger'
go
exec insert_syntax 'defncopy',
'UNIX Utility',          2 ,
'        or procedures from a database to an operating system file or from'
go
exec insert_syntax 'defncopy',
'UNIX Utility',          3 ,
'        an operating system file to a database.'
go
exec insert_syntax 'defncopy',
'UNIX Utility',          4 ,
'        The following is the syntax for defncopy, defncopy_r, & defncopy_dce'
go
exec insert_syntax 'defncopy',
'UNIX Utility',          6 ,
'  defncopy'
go
exec insert_syntax 'defncopy',
'UNIX Utility',          7 ,
'      [-X]'
go
exec insert_syntax 'defncopy',
'UNIX Utility',          8 ,
'      [-a display_charset]'
go
exec insert_syntax 'defncopy',
'UNIX Utility',          9 ,
'      [-I interfaces_file]'
go
exec insert_syntax 'defncopy',
'UNIX Utility',          10 ,
'      [-J [client_charset]]'
go
exec insert_syntax 'defncopy',
'UNIX Utility',          11 ,
'      [-K key tab]'
go
exec insert_syntax 'defncopy',
'UNIX Utility',          12 ,
'      [-P password]'
go
exec insert_syntax 'defncopy',
'UNIX Utility',          13,
'      [-R remote_server_principal]'
go
exec insert_syntax 'defncopy',
'UNIX Utility',          14,
'      [-S [server]]'
go
exec insert_syntax 'defncopy',
'UNIX Utility',          15,
'      [-U username]'
go
exec insert_syntax 'defncopy',
'UNIX Utility',          16,
'      [-V security option]'
go
exec insert_syntax 'defncopy',
'UNIX Utility',          17,
'      [-z language]'
go
exec insert_syntax 'defncopy',
'UNIX Utility',          18,
'      [-Z security mechanism]'
go
exec insert_syntax 'defncopy',
'UNIX Utility',          19,
'      {in filename dbname | out filename dbname'
go
exec insert_syntax 'defncopy',
'UNIX Utility',          20,
'     	[owner.]objectname [[owner.]objectname...] }'
go
exec insert_syntax 'defncopy',
'UNIX Utility',          21,
'     or'
go
exec insert_syntax 'defncopy',
'UNIX Utility',          22,
'     defncopy -v'
go
exec insert_syntax 'dscp',
'UNIX Utility',          1 ,
'dscp - Allows you to view and edit server entries in the interfaces file'
go
exec insert_syntax 'dscp',
'UNIX Utility',          2 ,
'        from the command line.'
go
exec insert_syntax 'dscp',
'UNIX Utility',          3 ,
'        The following is the syntax for dscp and dscp_r'
go
exec insert_syntax 'dscp',
'UNIX Utility',          4 ,
'  dscp [-p]'
go
exec insert_syntax 'dscp',
'UNIX Utility',          5 ,
'or'
go
exec insert_syntax 'dscp',
'UNIX Utility',          6 ,
'dscp -v'
go
exec insert_syntax 'dscp',
'UNIX Utility',          7 ,
'     To exit from dscp:  quit or exit'
go
exec insert_syntax 'dsedit',
'UNIX Utility',          1 ,
'dsedit - Allows you to view and edit server entries in the interfaces file'
go
exec insert_syntax 'dsedit',
'UNIX Utility',          2 ,
'        using a graphical user interface based on X11/Motif.'
go
exec insert_syntax 'dsedit',
'UNIX Utility',          3 ,
'  dsedit'
go
exec insert_syntax 'dsedit',
'UNIX Utility',          4 ,
'     or'
go
exec insert_syntax 'dsedit',
'UNIX Utility',          5 ,
'     dsedit -v'
go
exec insert_syntax 'extractjava',
'UNIX Utility',          1 ,
'extractjava - Copies a retained JAR and the classes it contains from an'
go
exec insert_syntax 'extractjava',
'UNIX Utility',          2 ,
'        Adaptive Server into a client file.'
go
exec insert_syntax 'extractjava',
'UNIX Utility',          3 ,
'  extractjava'
go
exec insert_syntax 'extractjava',
'UNIX Utility',          4 ,
'     -j jar name'
go
exec insert_syntax 'extractjava',
'UNIX Utility',          5 ,
'     -f file name'
go
exec insert_syntax 'extractjava',
'UNIX Utility',          6 ,
'     [ -S server name ]'
go
exec insert_syntax 'extractjava',
'UNIX Utility',          7 ,
'     [ -U user name ]'
go
exec insert_syntax 'extractjava',
'UNIX Utility',          8 ,
'     [ -P password ]'
go
exec insert_syntax 'extractjava',
'UNIX Utility',          9 ,
'     [ -D database name]'
go
exec insert_syntax 'extractjava',
'UNIX Utility',          10,
'     [ -I interfaces file ]'
go
exec insert_syntax 'extractjava',
'UNIX Utility',          11,
'     [ -a display charset ]'
go
exec insert_syntax 'extractjava',
'UNIX Utility',          12,
'     [ -J client charset ]'
go
exec insert_syntax 'extractjava',
'UNIX Utility',          13,
'     [ -z language ]'
go
exec insert_syntax 'extractjava',
'UNIX Utility',          14,
'     [ -t timeout] [-v] [-h]'
go
exec insert_syntax 'installjava',
'UNIX Utility',          1 ,
'installjava - Installs a JAR from a client file into an Adaptive Server.'
go
exec insert_syntax 'installjava',
'UNIX Utility',          2 ,
'  installjava'
go
exec insert_syntax 'installjava',
'UNIX Utility',          3 ,
'     -f file name'
go
exec insert_syntax 'installjava',
'UNIX Utility',          4 ,
'     [-new | -update]'
go
exec insert_syntax 'installjava',
'UNIX Utility',          5 ,
'     [-j  jar name]'
go
exec insert_syntax 'installjava',
'UNIX Utility',          6 ,
'     [-S server name]'
go
exec insert_syntax 'installjava',
'UNIX Utility',          7 ,
'     [-U user name]'
go
exec insert_syntax 'installjava',
'UNIX Utility',          8 ,
'     [-P password]'
go
exec insert_syntax 'installjava',
'UNIX Utility',          9 ,
'     [-D database name]'
go
exec insert_syntax 'installjava',
'UNIX Utility',          10,
'     [-I interfaces file]'
go
exec insert_syntax 'installjava',
'UNIX Utility',          11,
'     [-a display charset]'
go
exec insert_syntax 'installjava',
'UNIX Utility',          12,
'     [-J client charset]'
go
exec insert_syntax 'installjava',
'UNIX Utility',          13,
'     [-z language]'
go
exec insert_syntax 'installjava',
'UNIX Utility',          14,
'     [-t timeout] [-v] [-h]'
go
exec insert_syntax 'isql',
'UNIX Utility',          1 ,
'isql - Interactive SQL parser to Adaptive Server.'
go
exec insert_syntax 'isql',
'UNIX Utility',          2 ,
'Following is syntax for isql, isql_r, and isql_dce.'
go
exec insert_syntax 'isql',
'UNIX Utility',          3 ,
'  isql [-b] [-e] [-F] [-n] [-p] [-Q] [-v] [-X] [-Y]'
go
exec insert_syntax 'isql',
'UNIX Utility',          4 ,
'     [-a display_charset]'
go
exec insert_syntax 'isql',
'UNIX Utility',          5 ,
'     [-A packet size]'
go
exec insert_syntax 'isql',
'UNIX Utility',          6 ,
'     [-c cmdend]'
go
exec insert_syntax 'isql',
'UNIX Utility',          7 ,
'     [-D database]'
go
exec insert_syntax 'isql',
'UNIX Utility',          8 ,
'     [-E editor]'
go
exec insert_syntax 'isql',
'UNIX Utility',          9 ,
'     [-h header]'
go
exec insert_syntax 'isql',
'UNIX Utility',          10 ,
'     [-H hostname]'
go
exec insert_syntax 'isql',
'UNIX Utility',          12,
'     [-i inputfile]'
go
exec insert_syntax 'isql',
'UNIX Utility',          13,
'     [-I interfaces file]'
go
exec insert_syntax 'isql',
'UNIX Utility',          14,
'     [-J client charset'
go
exec insert_syntax 'isql',
'UNIX Utility',          15,
'     [-K keytab file]'
go
exec insert_syntax 'isql',
'UNIX Utility',          16,
'     [-l login timeout]'
go
exec insert_syntax 'isql',
'UNIX Utility',          17,
'     [-m errorlevel]'
go
exec insert_syntax 'isql',
'UNIX Utility',          18,
'     [-M label name label value]'
go
exec insert_syntax 'isql',
'UNIX Utility',          19,
'     [-o outputfile]'
go
exec insert_syntax 'isql',
'UNIX Utility',          20,
'     [-P password]'
go
exec insert_syntax 'isql',
'UNIX Utility',          21,
'     [-R remote server principal]'
go
exec insert_syntax 'isql',
'UNIX Utility',          22,
'     [-s column separator]'
go
exec insert_syntax 'isql',
'UNIX Utility',          23,
'     [-S server name]'
go
exec insert_syntax 'isql',
'UNIX Utility',          24,
'     [-t timeout]'
go
exec insert_syntax 'isql',
'UNIX Utility',          25,
'     [-U username]'
go
exec insert_syntax 'isql',
'UNIX Utility',          26,
'     [-V[security options]]'
go
exec insert_syntax 'isql',
'UNIX Utility',          27,
'     [-w column width]'
go
exec insert_syntax 'isql',
'UNIX Utility',          28,
'     [-z locale name]'
go
exec insert_syntax 'isql',
'UNIX Utility',          29,
'     [-Z security mechanism]'
go
exec insert_syntax 'isql',
'UNIX Utility',          30,
'     or'
go
exec insert_syntax 'isql',
'UNIX Utility',          31,
'     isql -v'
go
exec insert_syntax 'isql',
'UNIX Utility',          32,
'     To terminate a command:  go'
go
exec insert_syntax 'isql',
'UNIX Utility',          33,
'     To clear the query buffer:  reset'
go
exec insert_syntax 'isql',
'UNIX Utility',          34,
'     To call the default editor:  vi'
go
exec insert_syntax 'isql',
'UNIX Utility',          35,
'     To execute an operating system command:  !! command'
go
exec insert_syntax 'isql',
'UNIX Utility',          36,
'     To exit from isql:  quit or exit'
go
exec insert_syntax 'langinstall',
'UNIX Utility',          1 ,
'langinstall - Installs a new language in an Adaptive Server.'
go
exec insert_syntax 'langinstall',
'UNIX Utility',          2 ,
'  langinstall'
go
exec insert_syntax 'langinstall',
'UNIX Utility',          3 ,
'      [-S server name]'
go
exec insert_syntax 'langinstall',
'UNIX Utility',          4 ,
'      [-P password]'
go
exec insert_syntax 'langinstall',
'UNIX Utility',          5 ,
'      [-R release number]'
go
exec insert_syntax 'langinstall',
'UNIX Utility',          6 ,
'      [-I path to interfaces file]'
go
exec insert_syntax 'langinstall',
'UNIX Utility',          7 ,
'      language character_set'
go
exec insert_syntax 'langinstall',
'UNIX Utility',          8 ,
'     or'
go
exec insert_syntax 'langinstall',
'UNIX Utility',          9 ,
'     langinstall -v'
go
exec insert_syntax 'optdiag',
'UNIX Utility',          1 ,
'optdiag - Displays optimizer statistics or loads updated statistics into'
go
exec insert_syntax 'optdiag',
'UNIX Utility',          2 ,
'        system tables.'
go
exec insert_syntax 'optdiag',
'UNIX Utility',          3 ,
'  optdiag [ binary ] [simulate ] statistics'
go
exec insert_syntax 'optdiag',
'UNIX Utility',          4 ,
'      { -i input_file |'
go
exec insert_syntax 'optdiag',
'UNIX Utility',          5 ,
'      	database[.owner[.[table[.column]]]]'
go
exec insert_syntax 'optdiag',
'UNIX Utility',          6 ,
'      	[-o output file] }'
go
exec insert_syntax 'optdiag',
'UNIX Utility',          7 ,
'      [-U user name]'
go
exec insert_syntax 'optdiag',
'UNIX Utility',          8 ,
'      [-T trace value]'
go
exec insert_syntax 'optdiag',
'UNIX Utility',          9 ,
'      [-P password]'
go
exec insert_syntax 'optdiag',
'UNIX Utility',          10 ,
'      [-I interfaces file]'
go
exec insert_syntax 'optdiag',
'UNIX Utility',          11,
'      [-S server name]'
go
exec insert_syntax 'optdiag',
'UNIX Utility',          12,
'      [-v]'
go
exec insert_syntax 'optdiag',
'UNIX Utility',          13,
'      [-h]'
go
exec insert_syntax 'optdiag',
'UNIX Utility',          14,
'      [-s]'
go
exec insert_syntax 'optdiag',
'UNIX Utility',          15,
'      [-z language]'
go
exec insert_syntax 'optdiag',
'UNIX Utility',          16,
'      [-J client charset]'
go
exec insert_syntax 'optdiag',
'UNIX Utility',          17,
'      [-a display charset]'
go
exec insert_syntax 'showserver',
'UNIX Utility',          1 ,
'showserver - Shows the Adaptive Servers and Backup Servers that are current'
go
exec insert_syntax 'showserver',
'UNIX Utility',          2 ,
'        running on the local machine.'
go
exec insert_syntax 'showserver',
'UNIX Utility',          3 ,
'  showserver'
go
exec insert_syntax 'sqlloc',
'UNIX Utility',          1 ,
'sqlloc - Installs and modifies languages, character sets, and sort order'
go
exec insert_syntax 'sqlloc',
'UNIX Utility',          2 ,
'        defaults for Adaptive Server using a graphical user interface based'
go
exec insert_syntax 'sqlloc',
'UNIX Utility',          3 ,
'        on X11/Motif.'
go
exec insert_syntax 'sqlloc',
'UNIX Utility',          4 ,
'  sqlloc'
go
exec insert_syntax 'sqlloc',
'UNIX Utility',          5 ,
'      [-S server]'
go
exec insert_syntax 'sqlloc',
'UNIX Utility',          6 ,
'      [-U user]'
go
exec insert_syntax 'sqlloc',
'UNIX Utility',          7 ,
'      [-P password]'
go
exec insert_syntax 'sqlloc',
'UNIX Utility',          8 ,
'      [-s Sybase directory]'
go
exec insert_syntax 'sqlloc',
'UNIX Utility',          9 ,
'      [-I interfaces_file]'
go
exec insert_syntax 'sqlloc',
'UNIX Utility',          10,
'      [-r resource_file]'
go
exec insert_syntax 'sqlloc',
'UNIX Utility',          11,
'     or'
go
exec insert_syntax 'sqlloc',
'UNIX Utility',          12,
'     sqlloc -v'
go
exec insert_syntax 'sqllocres',
'UNIX Utility',          1 ,
'sqllocres - Installs and modifies languages, character sets, and sort order'
go
exec insert_syntax 'sqllocres',
'UNIX Utility',          2 ,
'        defaults for Adaptive Server, using a resource file.'
go
exec insert_syntax 'sqllocres',
'UNIX Utility',          3 ,
'  sqllocres'
go
exec insert_syntax 'sqllocres',
'UNIX Utility',          4 ,
'      [-S server]'
go
exec insert_syntax 'sqllocres',
'UNIX Utility',          5 ,
'      [-U user]'
go
exec insert_syntax 'sqllocres',
'UNIX Utility',          6 ,
'      [-P password]'
go
exec insert_syntax 'sqllocres',
'UNIX Utility',          7 ,
'      [-s Sybase directory]'
go
exec insert_syntax 'sqllocres',
'UNIX Utility',          8 ,
'      [-I interfaces file]'
go
exec insert_syntax 'sqllocres',
'UNIX Utility',          9 ,
'      [-r resource file]'
go
exec insert_syntax 'sqllocres',
'UNIX Utility',          10,
'     or'
go
exec insert_syntax 'sqllocres',
'UNIX Utility',          11,
'     sqllocres -v'
go
exec insert_syntax 'sqlupgrade',
'UNIX Utility',          1 ,
'sqlupgrade - Upgrades your currently installed release of Adaptive Server to'
go
exec insert_syntax 'sqlupgrade',
'UNIX Utility',          2 ,
'        the newest release using a graphical user interface based on'
go
exec insert_syntax 'sqlupgrade',
'UNIX Utility',          3 ,
'        X11/Motif.'
go
exec insert_syntax 'sqlupgrade',
'UNIX Utility',          4 ,
'  sqlupgrade'
go
exec insert_syntax 'sqlupgrade',
'UNIX Utility',          5 ,
'      [-s Sybase directory]'
go
exec insert_syntax 'sqlupgrade',
'UNIX Utility',          6 ,
'      [-r resource file]'
go
exec insert_syntax 'sqlupgrade',
'UNIX Utility',          7 ,
'     or'
go
exec insert_syntax 'sqlupgrade',
'UNIX Utility',          8 ,
'     sqlupgrade -v'
go
exec insert_syntax 'sqlupgraderes',
'UNIX Utility',          1 ,
'sqlupgraderes - Upgrades your currently installed release of Adaptive'
go
exec insert_syntax 'sqlupgraderes',
'UNIX Utility',          2 ,
'        Server to the newest release using resource files.'
go
exec insert_syntax 'sqlupgraderes',
'UNIX Utility',          3 ,
'  sqlupgraderes'
go
exec insert_syntax 'sqlupgraderes',
'UNIX Utility',          4 ,
'      [-s Sybase directory]'
go
exec insert_syntax 'sqlupgraderes',
'UNIX Utility',          5 ,
'      [-r resource file]'
go
exec insert_syntax 'sqlupgraderes',
'UNIX Utility',          6 ,
'     or'
go
exec insert_syntax 'sqlupgraderes',
'UNIX Utility',          7 ,
'     sqlupgraderes -v'
go
exec insert_syntax 'srvbuild',
'UNIX Utility',          1 ,
'srvbuild - Creates a new Adaptive Server, Backup Server, Monitor Server, or'
go
exec insert_syntax 'srvbuild',
'UNIX Utility',          2 ,
'        Server with default or user-specified values for key configuration'
go
exec insert_syntax 'srvbuild',
'UNIX Utility',          3 ,
'        attributes using a graphical user interface based on X11/Motif.'
go
exec insert_syntax 'srvbuild',
'UNIX Utility',          4 ,
'  srvbuild'
go
exec insert_syntax 'srvbuild',
'UNIX Utility',          5 ,
'      [-s Sybase directory]'
go
exec insert_syntax 'srvbuild',
'UNIX Utility',          6 ,
'      [-I interfaces file]'
go
exec insert_syntax 'srvbuild',
'UNIX Utility',          7 ,
'      [-r resource file]'
go
exec insert_syntax 'srvbuild',
'UNIX Utility',          8 ,
'     or'
go
exec insert_syntax 'srvbuild',
'UNIX Utility',          9 ,
'     srvbuild -v'
go
exec insert_syntax 'srvbuildres',
'UNIX Utility',          1 ,
'srvbuildres - Creates, using resource files, a new Adaptive Server, Backup'
go
exec insert_syntax 'srvbuildres',
'UNIX Utility',          2 ,
'        Server, Monitor Server, or XP Server with default or'
go
exec insert_syntax 'srvbuildres',
'UNIX Utility',          3 ,
'        user-specified values for key configuration attributes.'
go
exec insert_syntax 'srvbuildres',
'UNIX Utility',          4 ,
'  srvbuildres'
go
exec insert_syntax 'srvbuildres',
'UNIX Utility',          5 ,
'      [-s Sybase directory]'
go
exec insert_syntax 'srvbuildres',
'UNIX Utility',          6 ,
'      [-I interfaces file]'
go
exec insert_syntax 'srvbuildres',
'UNIX Utility',          7 ,
'      [-r resource file]'
go
exec insert_syntax 'srvbuildres',
'UNIX Utility',          8 ,
'     or'
go
exec insert_syntax 'srvbuildres',
'UNIX Utility',          9 ,
'     srvbuildres -v'
go
exec insert_syntax 'startserver',
'UNIX Utility',          1 ,
'startserver - Starts an Adaptive Server and/or a Backup Server.'
go
exec insert_syntax 'startserver',
'UNIX Utility',          2 ,
'  startserver [[-f runserverfile] [-m]] ...'
go
exec insert_syntax 'sybload',
'UNIX Utility',          1 ,
'sybload - Uploads Sybase products from the distribution media and builds the'
go
exec insert_syntax 'sybload',
'UNIX Utility',          2 ,
'        Sybase installation directory.'
go
exec insert_syntax 'sybload',
'UNIX Utility',          3 ,
'  sybload [-D]'
go
exec insert_syntax 'bcksrvr',
'Windows NT Utility',    1 ,
'bcksrvr - The executable form of the Backup Server program.'
go
exec insert_syntax 'bcksrvr',
'Windows NT Utility',    2 ,
'  bcksrvr'
go
exec insert_syntax 'bcksrvr',
'Windows NT Utility',    3 ,
'      [-Cserver_connections]'
go
exec insert_syntax 'bcksrvr',
'Windows NT Utility',    4 ,
'      [-Sb_servername]'
go
exec insert_syntax 'bcksrvr',
'Windows NT Utility',    5 ,
'      [-Isqlini_filename]'
go
exec insert_syntax 'bcksrvr',
'Windows NT Utility',    6 ,
'      [-eerror_log_file]'
go
exec insert_syntax 'bcksrvr',
'Windows NT Utility',    7 ,
'      [-Msybmbuf_binary]'
go
exec insert_syntax 'bcksrvr',
'Windows NT Utility',    8 ,
'      [-Nnetwork_connections]'
go
exec insert_syntax 'bcksrvr',
'Windows NT Utility',    9 ,
'      [-Ttrace_value]'
go
exec insert_syntax 'bcksrvr',
'Windows NT Utility',    10,
'      [-LSybase_language_name]'
go
exec insert_syntax 'bcksrvr',
'Windows NT Utility',    11,
'      [-JSybase_character_set_name]'
go
exec insert_syntax 'bcksrvr',
'Windows NT Utility',    12,
'      [-Pactive_service_threads]'
go
exec insert_syntax 'bcksrvr',
'Windows NT Utility',    13,
'      [-Vversion_number]'
go
exec insert_syntax 'bcksrvr',
'Windows NT Utility',    14,
'     or'
go
exec insert_syntax 'bcksrvr',
'Windows NT Utility',    15,
'     bcksrvr -v'
go
exec insert_syntax 'bcp',
'Windows NT Utility',    1 ,
'bcp - Copies a database to or from an operating system file in a'
go
exec insert_syntax 'bcp',
'Windows NT Utility',    2 ,
'        user-specified format.'
go
exec insert_syntax 'bcp',
'Windows NT Utility',    3 ,
'  bcp [[database_name.]owner.][view_name | table_name'
go
exec insert_syntax 'bcp',
'Windows NT Utility',    4 ,
'     	[:partition_id]] {in | out} datafile'
go
exec insert_syntax 'bcp',
'Windows NT Utility',    5 ,
'     [-c] [-E] [-n] [-X]'
go
exec insert_syntax 'bcp',
'Windows NT Utility',    6 ,
'      [-a display_charset]'
go
exec insert_syntax 'bcp',
'Windows NT Utility',    7 ,
'      [-A size]'
go
exec insert_syntax 'bcp',
'Windows NT Utility',    8 ,
'      [-b batchsize]'
go
exec insert_syntax 'bcp',
'Windows NT Utility',    9 ,
'      [-e errfile]'
go
exec insert_syntax 'bcp',
'Windows NT Utility',    10,
'      [-f formatfile]'
go
exec insert_syntax 'bcp',
'Windows NT Utility',    11,
'      [-F firstrow]'
go
exec insert_syntax 'bcp',
'Windows NT Utility',    12,
'      [-g id_start_value]'
go
exec insert_syntax 'bcp',
'Windows NT Utility',    13,
'      [-I interfaces_file]'
go
exec insert_syntax 'bcp',
'Windows NT Utility',    14,
'      [-J client_charset]'
go
exec insert_syntax 'bcp',
'Windows NT Utility',    15,
'      [-L lastrow]'
go
exec insert_syntax 'bcp',
'Windows NT Utility',    16,
'      [-m maxerrors]'
go
exec insert_syntax 'bcp',
'Windows NT Utility',    17,
'      [-P password]'
go
exec insert_syntax 'bcp',
'Windows NT Utility',    18,
'      [-q datafile_charset]'
go
exec insert_syntax 'bcp',
'Windows NT Utility',    19,
'      [-r row_terminator]'
go
exec insert_syntax 'bcp',
'Windows NT Utility',    20,
'      [-R remote_server_principal]'
go
exec insert_syntax 'bcp',
'Windows NT Utility',    21,
'      [-S server]'
go
exec insert_syntax 'bcp',
'Windows NT Utility',    22,
'      [-t field_terminator]'
go
exec insert_syntax 'bcp',
'Windows NT Utility',    23,
'      [-T text_or_image_size]'
go
exec insert_syntax 'bcp',
'Windows NT Utility',    24,
'      [-U username]'
go
exec insert_syntax 'bcp',
'Windows NT Utility',    25,
'      [-z language]'
go
exec insert_syntax 'bcp',
'Windows NT Utility',    26,
'     or'
go
exec insert_syntax 'bcp',
'Windows NT Utility',    27,
'     bcp -v'
go
exec insert_syntax 'bldmastr',
'Windows NT Utility',    1 ,
'bldmastr - Builds the master device and creates the master, model, and'
go
exec insert_syntax 'bldmastr',
'Windows NT Utility',    2 ,
'        sybsystemdb databases on the device.'
go
exec insert_syntax 'bldmastr',
'Windows NT Utility',    3 ,
'  bldmastr'
go
exec insert_syntax 'bldmastr',
'Windows NT Utility',    4 ,
'      [-d physicalname]'
go
exec insert_syntax 'bldmastr',
'Windows NT Utility',    5 ,
'      [-c cntrltype]'
go
exec insert_syntax 'bldmastr',
'Windows NT Utility',    6 ,
'      [-s size]'
go
exec insert_syntax 'bldmastr',
'Windows NT Utility',    7 ,
'      [-m]'
go
exec insert_syntax 'bldmastr',
'Windows NT Utility',    8 ,
'      [-x'
go
exec insert_syntax 'bldmastr',
'Windows NT Utility',    9 ,
'     or'
go
exec insert_syntax 'bldmastr',
'Windows NT Utility',    10,
'     bldmastr -v'
go
exec insert_syntax 'charset',
'Windows NT Utility',    1 ,
'charset - Loads the character sets and sort order files.'
go
exec insert_syntax 'charset',
'Windows NT Utility',    2 ,
'  charset'
go
exec insert_syntax 'charset',
'Windows NT Utility',    3 ,
'      [-P password]'
go
exec insert_syntax 'charset',
'Windows NT Utility',    4 ,
'      [-S server]'
go
exec insert_syntax 'charset',
'Windows NT Utility',    5 ,
'      [-I interface]'
go
exec insert_syntax 'charset',
'Windows NT Utility',    6 ,
'      sort order'
go
exec insert_syntax 'charset',
'Windows NT Utility',    7 ,
'      [charset]'
go
exec insert_syntax 'charset',
'Windows NT Utility',    8 ,
'     or'
go
exec insert_syntax 'charset',
'Windows NT Utility',    9 ,
'     charset -v'
go
exec insert_syntax 'defncopy',
'Windows NT Utility',    1 ,
'defncopy - Copies definitions for specified views, rules, defaults,'
go
exec insert_syntax 'defncopy',
'Windows NT Utility',    2 ,
'        triggers, or procedures from a database to an operating system'
go
exec insert_syntax 'defncopy',
'Windows NT Utility',    3 ,
'        file or from an operating system file to a database.'
go
exec insert_syntax 'defncopy',
'Windows NT Utility',    4 ,
'        The following is the syntax for defncopy, defncopy_r,'
go
exec insert_syntax 'defncopy',
'Windows NT Utility',    5 ,
'        & defncopy_dce.'
go
exec insert_syntax 'defncopy',
'Windows NT Utility',    6 ,
'  defncopy'
go
exec insert_syntax 'defncopy',
'Windows NT Utility',    7 ,
'      [-U username]'
go
exec insert_syntax 'defncopy',
'Windows NT Utility',    8 ,
'      [-P password]'
go
exec insert_syntax 'defncopy',
'Windows NT Utility',    9 ,
'      [-S server]'
go
exec insert_syntax 'defncopy',
'Windows NT Utility',    10 ,
'      [-I sqlini_file]'
go
exec insert_syntax 'defncopy',
'Windows NT Utility',    11 ,
'      [-a display_charset]'
go
exec insert_syntax 'defncopy',
'Windows NT Utility',    12,
'      [-J client_charset]'
go
exec insert_syntax 'defncopy',
'Windows NT Utility',    13,
'      [-z language]'
go
exec insert_syntax 'defncopy',
'Windows NT Utility',    14,
'      [-X]'
go
exec insert_syntax 'defncopy',
'Windows NT Utility',    15,
'      {in filename dbname | out filename dbname'
go
exec insert_syntax 'defncopy',
'Windows NT Utility',    16,
'     	[owner.]objectname [[owner.]objectname]...}'
go
exec insert_syntax 'defncopy',
'Windows NT Utility',    17,
'     or'
go
exec insert_syntax 'defncopy',
'Windows NT Utility',    18,
'     defncopy -v'
go
exec insert_syntax 'dsedit',
'Windows NT Utility',    1 ,
'dsedit - Creates and modifies network connection information in the'
go
exec insert_syntax 'dsedit',
'Windows NT Utility',    2 ,
'        interfaces file.'
go
exec insert_syntax 'dsedit',
'Windows NT Utility',    3 ,
'  dsedit'
go
exec insert_syntax 'dsedit',
'Windows NT Utility',    4 ,
'     or'
go
exec insert_syntax 'dsedit',
'Windows NT Utility',    5 ,
'     dsedit -v'
go
exec insert_syntax 'extrjava',
'Windows NT Utility',    1 ,
'extrjava - Copies a retained JAR and the classes it contains from an'
go
exec insert_syntax 'extrjava',
'Windows NT Utility',    2 ,
'        Adaptive Server into a client file.'
go
exec insert_syntax 'extrjava',
'Windows NT Utility',    3 ,
'  extrtjava'
go
exec insert_syntax 'extrjava',
'Windows NT Utility',    4 ,
'     -j jar_name'
go
exec insert_syntax 'extrjava',
'Windows NT Utility',    5 ,
'     -f file_name'
go
exec insert_syntax 'extrjava',
'Windows NT Utility',    6 ,
'     [ -S server ]'
go
exec insert_syntax 'extrjava',
'Windows NT Utility',    7 ,
'     [ -U username ]'
go
exec insert_syntax 'extrjava',
'Windows NT Utility',    8 ,
'     [ -P password ]'
go
exec insert_syntax 'extrjava',
'Windows NT Utility',    9 ,
'     [ -D database ]'
go
exec insert_syntax 'extrjava',
'Windows NT Utility',    10,
'     [ -I interfaces_file ]'
go
exec insert_syntax 'extrjava',
'Windows NT Utility',    11,
'     [ -a display_charset ]'
go
exec insert_syntax 'extrjava',
'Windows NT Utility',    12,
'     [ -J client_charset ]'
go
exec insert_syntax 'extrjava',
'Windows NT Utility',    13,
'     [ -z language ]'
go
exec insert_syntax 'extrjava',
'Windows NT Utility',    14,
'     [ -t timeout] [-v]'
go
exec insert_syntax 'instjava',
'Windows NT Utility',    1 ,
'instjava - Installs a JAR from a client file into an Adaptive Server.'
go
exec insert_syntax 'instjava',
'Windows NT Utility',    2 ,
'  instjava'
go
exec insert_syntax 'instjava',
'Windows NT Utility',    3 ,
'     -f file_name'
go
exec insert_syntax 'instjava',
'Windows NT Utility',    4 ,
'     [ -new | -update ]'
go
exec insert_syntax 'instjava',
'Windows NT Utility',    5 ,
'     [ -j  jar_name]'
go
exec insert_syntax 'instjava',
'Windows NT Utility',    6 ,
'     [ -S server ]'
go
exec insert_syntax 'instjava',
'Windows NT Utility',    7 ,
'     [ -U username ]'
go
exec insert_syntax 'instjava',
'Windows NT Utility',    8 ,
'     [ -P password ]'
go
exec insert_syntax 'instjava',
'Windows NT Utility',    9 ,
'     [ -D database ]'
go
exec insert_syntax 'instjava',
'Windows NT Utility',    10,
'     [ -I interfaces_file ]'
go
exec insert_syntax 'instjava',
'Windows NT Utility',    11,
'     [ -a display_charset ]'
go
exec insert_syntax 'instjava',
'Windows NT Utility',    12,
'     [ -J client_charset ]'
go
exec insert_syntax 'instjava',
'Windows NT Utility',    13,
'     [ -z language ]'
go
exec insert_syntax 'instjava',
'Windows NT Utility',    14,
'     [ -t timeout] [-v]'
go
exec insert_syntax 'isql',
'Windows NT Utility',    1 ,
'isql - Interactive SQL parser to Adaptive Server.'
go
exec insert_syntax 'isql',
'Windows NT Utility',    2 ,
'  isql [-b] [-e] [-F] [-n] [-p] [-X] [-Y]'
go
exec insert_syntax 'isql',
'Windows NT Utility',    3 ,
'     [-a display_charset]'
go
exec insert_syntax 'isql',
'Windows NT Utility',    4 ,
'     [-A size]'
go
exec insert_syntax 'isql',
'Windows NT Utility',    5 ,
'     [-c cmdend]'
go
exec insert_syntax 'isql',
'Windows NT Utility',    6 ,
'     [-D database]'
go
exec insert_syntax 'isql',
'Windows NT Utility',    7 ,
'     [-E editor]'
go
exec insert_syntax 'isql',
'Windows NT Utility',    8 ,
'     [-h headers]'
go
exec insert_syntax 'isql',
'Windows NT Utility',    9 ,
'     [-H hostname]'
go
exec insert_syntax 'isql',
'Windows NT Utility',    10,
'     [-i inputfilename]'
go
exec insert_syntax 'isql',
'Windows NT Utility',    11,
'     [-I interfaces_file]'
go
exec insert_syntax 'isql',
'Windows NT Utility',    12,
'     [-J client_charset]'
go
exec insert_syntax 'isql',
'Windows NT Utility',    13,
'     [-l login_timeout]'
go
exec insert_syntax 'isql',
'Windows NT Utility',    14,
'     [-m errorlevel]'
go
exec insert_syntax 'isql',
'Windows NT Utility',    15,
'     [-o outputfilename]'
go
exec insert_syntax 'isql',
'Windows NT Utility',    16,
'     [-P password]'
go
exec insert_syntax 'isql',
'Windows NT Utility',    17,
'     [-R remote_server_principal]'
go
exec insert_syntax 'isql',
'Windows NT Utility',    18,
'     [-s colseparator]'
go
exec insert_syntax 'isql',
'Windows NT Utility',    19,
'     [-S server]'
go
exec insert_syntax 'isql',
'Windows NT Utility',    20,
'     [-t timeout]'
go
exec insert_syntax 'isql',
'Windows NT Utility',    21,
'     [-U username]'
go
exec insert_syntax 'isql',
'Windows NT Utility',    22,
'     [-w columnwidth]'
go
exec insert_syntax 'isql',
'Windows NT Utility',    23,
'     [-z language]'
go
exec insert_syntax 'isql',
'Windows NT Utility',    24,
'     or'
go
exec insert_syntax 'isql',
'Windows NT Utility',    25,
'     isql -v'
go
exec insert_syntax 'isql',
'Windows NT Utility',    26,
'     To terminate a command:  go'
go
exec insert_syntax 'isql',
'Windows NT Utility',    27,
'     To clear the query buffer:  reset'
go
exec insert_syntax 'isql',
'Windows NT Utility',    28,
'     To call the default editor:  vi'
go
exec insert_syntax 'isql',
'Windows NT Utility',    29,
'     To execute an operating system command:  !! command'
go
exec insert_syntax 'isql',
'Windows NT Utility',    30,
'     To exit from isql:  quit or exit'
go
exec insert_syntax 'langinst',
'Windows NT Utility',    1 ,
'langinst - Installs one new language on Adaptive Server.'
go
exec insert_syntax 'langinst',
'Windows NT Utility',    2 ,
'  langinst'
go
exec insert_syntax 'langinst',
'Windows NT Utility',    3 ,
'      [-S server]'
go
exec insert_syntax 'langinst',
'Windows NT Utility',    4 ,
'      [-I sqlini_file]'
go
exec insert_syntax 'langinst',
'Windows NT Utility',    5 ,
'      [-P password]'
go
exec insert_syntax 'langinst',
'Windows NT Utility',    6 ,
'      [-R release_number]'
go
exec insert_syntax 'langinst',
'Windows NT Utility',    7 ,
'      language character_set'
go
exec insert_syntax 'langinst',
'Windows NT Utility',    8 ,
'     or'
go
exec insert_syntax 'langinst',
'Windows NT Utility',    9 ,
'     langinst -v'
go
exec insert_syntax 'optdiag',
'Windows NT Utility',    1 ,
'optdiag - Displays optimizer statistics or loads updated statistics into'
go
exec insert_syntax 'optdiag',
'Windows NT Utility',    2 ,
'        system tables.'
go
exec insert_syntax 'optdiag',
'Windows NT Utility',    3 ,
'  optdiag [ binary ] [simulate ] statistics'
go
exec insert_syntax 'optdiag',
'Windows NT Utility',    4 ,
'      { -i input_file |'
go
exec insert_syntax 'optdiag',
'Windows NT Utility',    5 ,
'      	database[.owner[.[table[.column]]]]'
go
exec insert_syntax 'optdiag',
'Windows NT Utility',    6 ,
'      	[-o output_file] }'
go
exec insert_syntax 'optdiag',
'Windows NT Utility',    7 ,
'      [-U user_name]'
go
exec insert_syntax 'optdiag',
'Windows NT Utility',    8 ,
'      [-P password]'
go
exec insert_syntax 'optdiag',
'Windows NT Utility',    9 ,
'      [-I interfaces_file]'
go
exec insert_syntax 'optdiag',
'Windows NT Utility',    10,
'      [-S server]'
go
exec insert_syntax 'optdiag',
'Windows NT Utility',    11,
'      [-v]'
go
exec insert_syntax 'optdiag',
'Windows NT Utility',    12,
'      [-h]'
go
exec insert_syntax 'optdiag',
'Windows NT Utility',    13,
'      [-s]'
go
exec insert_syntax 'optdiag',
'Windows NT Utility',    14,
'      [-T flag_value]'
go
exec insert_syntax 'optdiag',
'Windows NT Utility',    15,
'      [-z language]'
go
exec insert_syntax 'optdiag',
'Windows NT Utility',    16,
'      [-J client_charset]'
go
exec insert_syntax 'optdiag',
'Windows NT Utility',    17,
'      [-a display_charset]'
go
exec insert_syntax 'sqlsrvr',
'Windows NT Utility',          1 ,
'sqlsrvr - The executable form of the Adaptive Server program.'
go
exec insert_syntax 'sqlsrvr',
'Windows NT Utility',          2 ,
'     [-f] [-g] [-G] [-h] [-H] [-m] [-P] [-q] [-v] [-X]'
go
exec insert_syntax 'sqlsrvr',
'Windows NT Utility',          3 ,
'     [-a path to CAPs directive file]'
go
exec insert_syntax 'sqlsrvr',
'Windows NT Utility',          4 ,
'     [-b master device size]'
go
exec insert_syntax 'sqlsrvr',
'Windows NT Utility',          5 ,
'     [-c configuration file for server]'
go
exec insert_syntax 'sqlsrvr',
'Windows NT Utility',          6 ,
'     [-d device name]'
go
exec insert_syntax 'sqlsrvr',
'Windows NT Utility',          7 ,
'     [-e path to error log]'
go
exec insert_syntax 'sqlsrvr',
'Windows NT Utility',          8 ,
'     [-i sql.ini file directory]'
go
exec insert_syntax 'sqlsrvr',
'Windows NT Utility',          9 ,
'     [-K keytab file]'
go
exec insert_syntax 'sqlsrvr',
'Windows NT Utility',          10 ,
'     [-L config file name for connectivity]'
go
exec insert_syntax 'sqlsrvr',
'Windows NT Utility',          11 ,
'     [-M shared memory repository directory]'
go
exec insert_syntax 'sqlsrvr',
'Windows NT Utility',          12, 
'     [-p sa login name]'
go
exec insert_syntax 'sqlsrvr',
'Windows NT Utility',          13,
'     [-r mirror disk name]'
go
exec insert_syntax 'sqlsrvr',
'Windows NT Utility',          14,
'     [-s server name]'
go
exec insert_syntax 'sqlsrvr',
'Windows NT Utility',          15,
'     [-T trace flag]'
go
exec insert_syntax 'sqlsrvr',
'Windows NT Utility',          16,
'     [-u sa/sso name]'
go
exec insert_syntax 'sqlsrvr',
'Windows NT Utility',          17,
'     [-w master | model database]'
go
exec insert_syntax 'sqlsrvr',
'Windows NT Utility',          18 ,
'     [-z page size]'
go
exec insert_syntax 'srvmgr',
'Windows NT Utility',    1 ,
'srvmgr - Starts, pauses, and stops Adaptive Server, Backup Server, and'
go
exec insert_syntax 'srvmgr',
'Windows NT Utility',    2 ,
'        Adaptive Server Monitor as Windows NT services.'
go
exec insert_syntax 'srvmgr',
'Windows NT Utility',    3 ,
'  srvmgr'
go
exec insert_syntax 'srvmgr',
'Windows NT Utility',    4 ,
'     Or double-click the Services Manager icon in the Sybase for Windows NT'
go
exec insert_syntax 'srvmgr',
'Windows NT Utility',    5 ,
'     program group.'
go
exec insert_syntax 'wdllvers',
'Windows NT Utility',    1 ,
'wdllvers - Provides the following information about the Sybase DLLs'
go
exec insert_syntax 'wdllvers',
'Windows NT Utility',    2 ,
'        (dynamic link libraries) loaded into memory:  DLL name, DLL'
go
exec insert_syntax 'wdllvers',
'Windows NT Utility',    3 ,
'        usage count, DLL file size, DLL file date, Directory path from'
go
exec insert_syntax 'wdllvers',
'Windows NT Utility',    4 ,
'        which the DLL was loaded'
go
exec insert_syntax 'wdllvers',
'Windows NT Utility',    5 ,
'  wdllvers'
go
exec insert_syntax 'wdllvers',
'Windows NT Utility',    6 ,
'     wdllvers'
go
exec insert_syntax 'wdllvers',
'Windows NT Utility',    7 ,
'     Or double-click the WDLLVERS icon in the Sybase for Windows program'
go
exec insert_syntax 'wdllvers',
'Windows NT Utility',    8 ,
'     group.'
go
exec insert_syntax ' ',
'ESP',                   1 ,
' '
go
exec insert_syntax 'xp_cmdshell',
'ESP',                   1 ,
'xp_cmdshell - Executes a native operating system command on the host system'
go
exec insert_syntax 'xp_cmdshell',
'ESP',                   2 ,
'        running Adaptive Server.'
go
exec insert_syntax 'xp_cmdshell',
'ESP',                   3 ,
'  xp_cmdshell command [, no_output]'
go
exec insert_syntax 'xp_deletemail',
'ESP',                   1 ,
'xp_deletemail - Deletes a message from the Adaptive Server message inbox.'
go
exec insert_syntax 'xp_deletemail',
'ESP',                   2 ,
'Windows NT only.'
go
exec insert_syntax 'xp_deletemail',
'ESP',                   3 ,
'  xp_deletemail [msg_id]'
go
exec insert_syntax 'xp_enumgroups',
'ESP',                   1 ,
'xp_enumgroups - Displays groups for a specified Windows NT domain.'
go
exec insert_syntax 'xp_enumgroups',
'ESP',                   2 ,
'  xp_enumgroups [domain_name]'
go
exec insert_syntax 'xp_findnextmsg',
'ESP',                   1 ,
'xp_findnextmsg - Retrieves the next message identifier from the Adaptive'
go
exec insert_syntax 'xp_findnextmsg',
'ESP',                   2 ,
'Windows NT only.'
go
exec insert_syntax 'xp_findnextmsg',
'ESP',                   3 ,
'        Server message inbox.'
go
exec insert_syntax 'xp_findnextmsg',
'ESP',                   4 ,
'  xp_findnextmsg @msg_id = @msg_id output [, type]'
go
exec insert_syntax 'xp_findnextmsg',
'ESP',                   5 ,
'     [, unread_only = {true | false}]'
go
exec insert_syntax 'xp_logevent',
'ESP',                   1 ,
'xp_logevent - Provides for logging a user-defined event in the Windows NT'
go
exec insert_syntax 'xp_logevent',
'ESP',                   2 ,
'        Event Log from within Adaptive Server.'
go
exec insert_syntax 'xp_logevent',
'ESP',                   3 ,
'  xp_logevent error_number, message [, type]'
go
exec insert_syntax 'xp_readmail',
'ESP',                   1 ,
'xp_readmail - Reads a message from the Adaptive Server message inbox.'
go
exec insert_syntax 'xp_readmail',
'ESP',                   2 ,
'Windows NT only.'
go
exec insert_syntax 'xp_readmail',
'ESP',                   3 ,
'  xp_readmail [msg_id]'
go
exec insert_syntax 'xp_readmail',
'ESP',                   4 ,
'     [, recipients output]'
go
exec insert_syntax 'xp_readmail',
'ESP',                   5 ,
'     [, sender output]'
go
exec insert_syntax 'xp_readmail',
'ESP',                   6 ,
'     [, date_received output]'
go
exec insert_syntax 'xp_readmail',
'ESP',                   7 ,
'     [, subject output]'
go
exec insert_syntax 'xp_readmail',
'ESP',                   8 ,
'     [, cc output]'
go
exec insert_syntax 'xp_readmail',
'ESP',                   9 ,
'     [, message output]'
go
exec insert_syntax 'xp_readmail',
'ESP',                   10 ,
'     [, attachments output]'
go
exec insert_syntax 'xp_readmail',
'ESP',                   11,
'     [, suppress_attach = {true | false}]'
go
exec insert_syntax 'xp_readmail',
'ESP',                   12,
'     [, peek = {true | false}]'
go
exec insert_syntax 'xp_readmail',
'ESP',                   13,
'     [, unread = {true | false}]'
go
exec insert_syntax 'xp_readmail',
'ESP',                   14,
'     [, msg_length output]'
go
exec insert_syntax 'xp_readmail',
'ESP',                   15,
'     [, bytes_to_skip [output]]'
go
exec insert_syntax 'xp_readmail',
'ESP',                   16,
'     [, type [output]]'
go
exec insert_syntax 'xp_sendmail',
'ESP',                   1 ,
'xp_sendmail - Sends a message to the specified recipients. The message is'
go
exec insert_syntax 'xp_sendmail',
'ESP',                   2 ,
'Windows NT only.'
go
exec insert_syntax 'xp_sendmail',
'ESP',                   3 ,
'        either text or the results of a Transact-SQL query.'
go
exec insert_syntax 'xp_sendmail',
'ESP',                   4 ,
'  xp_sendmail recipient [; recipient] . . .'
go
exec insert_syntax 'xp_sendmail',
'ESP',                   5 ,
'     [, subject]'
go
exec insert_syntax 'xp_sendmail',
'ESP',                   6 ,
'     [, cc_recipient] . . .'
go
exec insert_syntax 'xp_sendmail',
'ESP',                   7 ,
'     [, bcc_recipient] . . .'
go
exec insert_syntax 'xp_sendmail',
'ESP',                   8 ,
'     [, {query | message}]'
go
exec insert_syntax 'xp_sendmail',
'ESP',                   9 ,
'     [, attachname]'
go
exec insert_syntax 'xp_sendmail',
'ESP',                   10 ,
'     [, attach_result = {true | false}]'
go
exec insert_syntax 'xp_sendmail',
'ESP',                   11,
'     [, echo_error = {true | false}]'
go
exec insert_syntax 'xp_sendmail',
'ESP',                   12,
'     [, include_file [, include_file] . . .]'
go
exec insert_syntax 'xp_sendmail',
'ESP',                   13,
'     [, no_column_header = {true | false}]'
go
exec insert_syntax 'xp_sendmail',
'ESP',                   14,
'     [, no_output = {true | false}]'
go
exec insert_syntax 'xp_sendmail',
'ESP',                   15,
'     [, width]'
go
exec insert_syntax 'xp_sendmail',
'ESP',                   16,
'     [, separator]'
go
exec insert_syntax 'xp_sendmail',
'ESP',                   17,
'     [, dbuser]'
go
exec insert_syntax 'xp_sendmail',
'ESP',                   18,
'     [, dbname]'
go
exec insert_syntax 'xp_sendmail',
'ESP',                   19,
'     [, type]'
go
exec insert_syntax 'xp_sendmail',
'ESP',                   20,
'     [, include_query = {true | false}]'
go
exec insert_syntax 'xp_startmail',
'ESP',                   1 ,
'xp_startmail - Starts an Adaptive Server mail session.'
go
exec insert_syntax 'xp_startmail',
'ESP',                   2 ,
'Windows NT only.'
go
exec insert_syntax 'xp_startmail',
'ESP',                   3 ,
'  xp_startmail [mail_user] [, mail_password]'
go
exec insert_syntax 'xp_stopmail',
'ESP',                   1 ,
'xp_stopmail - Stops an Adaptive Server mail session.'
go
exec insert_syntax 'xp_stopmail',
'ESP',                   2 ,
'Windows NT only.'
go
exec insert_syntax 'xp_stopmail',
'ESP',                   3 ,
'  xp_stopmail'
go
/* add execs here */
/* drop the insert_syntax procedure */
if exists (select name from sysobjects where name = "insert_syntax")
begin
	drop procedure insert_syntax
end
go

dump transaction sybsyntax with truncate_only

/* If sp_syntax already exists, drop it so that we might replace it */
if exists (select *
	from sybsystemprocs..sysobjects
		where sysstat & 7 = 4
			and name = 'sp_syntax')
begin
	use sybsystemprocs
	drop procedure sp_syntax
end
go
if exists (select * from master..sysdatabases
		where name = "sybsystemprocs")
begin
	use sybsystemprocs
end
else
begin
	/*
	** 19528, "The '%1!' database does not exist. Terminating the installation."
	*/
	raiserror 19528, "sybsystemprocs"
	select syb_quit()
end
go

if (db_name() != "sybsystemprocs")
begin
	/*
	** 19529, "Cannot open database '%1!'. Check the availability of this database and retry the installation."
	*/
	raiserror 19529, "sybsystemprocs"
	select syb_quit()
end
go

create procedure sp_syntax
	@word varchar(50) = null,	/* command */
	@mod varchar(20) = null,	/* module */
	@language varchar(30) = null	/* language */
as

set nocount on
declare	@pattern	varchar(52),
	@counter	tinyint,
	@mincommand	varchar(50),
	@modpattern	varchar(22),
	@modcount	tinyint,
	@minmod		varchar(20),
	@msg		varchar(255),
	@msgparam	varchar(30),
	@lang_id	smallint,
	@returncode smallint
/*
**  If we're in a transaction, disallow this since it might make recovery
**  impossible.
*/
if @@trancount > 0
begin
	/*
	** 17260, "Can't run %1! from within a transaction."
	*/
	raiserror 17260, "sp_syntax"
	return (1)
end

/*
** Check that language is valid.
*/
if @language is not NULL
begin
    execute @returncode = sp_validlang @language
    if @returncode != 0
    begin
	    /* Us_english is always valid */
	    if @language != "us_english"
	    begin
		    /* 
		    ** 17201, "'%1!' is not an official language
		    **	name from Syslanguages."
		    */
		    raiserror 17201, @language
		    return @returncode
	    end

	    /* set to us_english */
	    select @lang_id = NULL
    end

    else
    select @lang_id = langid from master..syslanguages
		where @language = name

end

/* set search string to %word% */

select @pattern = "%" + lower(@word) + "%",
	@modpattern = "%" + lower(@mod) + "%"


/* if no command/routine name is given, print the syntax and return*/

if @word is null
begin
	/*
	** 17970, "sp_syntax provides syntax help for Sybase products."
	*/
	raiserror 17970
	/*
	** 17971, "These modules are installed on this Server:"
	*/
	raiserror 17971
	print ""
	select distinct module Module from sybsyntax..sybsyntax
	print""
	/*
	** 17972, "Usage:  sp_syntax command [, module, language]"
	*/
	raiserror 17972
	return
end

/* if no commands match, print a message and return */

if (select count(*) from sybsyntax..sybsyntax
	where commandname like @pattern) = 0
begin
	/*
	** 17973, "No command or routine has a name like '%1!'"
	*/
	raiserror 17973, @word
	return
end

/* if no modules match, print a message and return */

if @mod is not null and (select count(*) from sybsyntax..sybsyntax
	where lower(module) like @modpattern) = 0
begin
	/*
	** 17974, "No module has a name like '%1!'"
	*/
	raiserror 17974, @mod
	return
end

/* if command/module combo has no matches, print message and return */
if (select count(*) from sybsyntax..sybsyntax
		where lower (module) like @modpattern
		and lower (commandname) like @pattern
		and langid = @lang_id) = 0
begin
	/*
	** 17975, "No command or routine has a name like '%1!' and a module like '%2!'"
	*/
	raiserror 17975, @word, @mod
	return
end

/* Put a list of all desired module names into #tempsyntax1.
** If a module was specified, find all %mod% matches.
** If @mod is null, select modules from the table with a
** matching %word%
*/

create table #tempsyntax1 (module varchar(20))
if @mod is not null
begin
	insert #tempsyntax1
		select distinct(module)
		from sybsyntax..sybsyntax
		where lower(module) like @modpattern
		and langid = @lang_id
end
else
begin
	insert #tempsyntax1
		select distinct(module)
		from sybsyntax..sybsyntax
		where commandname like @pattern
		and langid = @lang_id
end

select @modcount = (select count(*) from #tempsyntax1)

/* create a table to store the results */
create table #tempsyntax2 (c1 varchar(78))


/* find the first module in alpha order */
select @minmod = min(module)
	from #tempsyntax1

/* the loop that finds all the answers */
while @modcount > 0
begin

	/* Put module name into results */
	insert #tempsyntax2 values (@minmod)
		/* count matches for this module */
		select @counter = (select count(*)
			from sybsyntax..sybsyntax
			where commandname like @pattern
				and linenum = 1
				and module = @minmod
				and langid = @lang_id)
	/*find the first word in alpha order */
	select @mincommand = min(commandname)
		from sybsyntax..sybsyntax
		where commandname like @pattern
			and module = @minmod
			and langid = @lang_id
	while @counter > 0
	begin
		/* select the syntax info into the results */
		insert #tempsyntax2
		select syntax from sybsyntax..sybsyntax
			where commandname = @mincommand
				and module = @minmod
				and langid = @lang_id
				order by linenum
		/* add a blank line between commands */
		insert #tempsyntax2
			select ""
		select @counter = @counter - 1
		/*find the first word in alpha order */
		select @mincommand = min(commandname)
			from sybsyntax..sybsyntax
			where commandname like @pattern
				and commandname > @mincommand
				and module = @minmod
				and langid = @lang_id
	end
	/* find the next module in alpha order */
	select @minmod = min(module)
		from #tempsyntax1
		where module > @minmod
	select @modcount = @modcount - 1
end

/*
** 18049, "Syntax Help"
*/
exec sp_getmessage 18049, @msg output
print @msg
select "" = c1 from #tempsyntax2
go

/* grant permission for sp_syntax to be executed by anybody */

grant execute on sp_syntax to public
go
/* add guest user to sybsyntax db so everybody can access it */

if not exists (select * from sybsyntax..sysusers where name="guest")
	exec sybsyntax..sp_adduser guest
go
